ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** 
  22:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** 
  30:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** 
  37:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  39:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC.c **** *
  41:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC.c **** *
  46:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC.c **** *
  49:.\Generated_Source\PSoC4/ADC.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC.c **** *
  52:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  58:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  62:.\Generated_Source\PSoC4/ADC.c **** *
  63:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  65:.\Generated_Source\PSoC4/ADC.c **** {
  66:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  68:.\Generated_Source\PSoC4/ADC.c ****     {
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  71:.\Generated_Source\PSoC4/ADC.c ****     }
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  73:.\Generated_Source\PSoC4/ADC.c **** }
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** 
  76:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  78:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC.c **** *
  80:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  84:.\Generated_Source\PSoC4/ADC.c **** *
  85:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC.c **** *
  88:.\Generated_Source\PSoC4/ADC.c **** * Return:
  89:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** *
  91:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC.c **** *
  94:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  96:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 96 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC.c **** 
 101:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC.c ****         {
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 132:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC.c ****         };
 137:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC.c **** 
 139:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 4


 140:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  33              		.loc 1 141 0
  34 0002 0E20     		mov	r0, #14
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 142:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  38              		.loc 1 142 0
  39 000a 1A49     		ldr	r1, .L2
  40 000c 0E20     		mov	r0, #14
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 143:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC.c **** 
 145:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  43              		.loc 1 146 0
  44 0012 194B     		ldr	r3, .L2+4
  45 0014 0122     		mov	r2, #1
  46 0016 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  47              		.loc 1 147 0
  48 0018 1849     		ldr	r1, .L2+8
  49 001a 1948     		ldr	r0, .L2+12
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  50              		.loc 1 148 0
  51 001c 194C     		ldr	r4, .L2+16
  52 001e 1A4B     		ldr	r3, .L2+20
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  53              		.loc 1 147 0
  54 0020 0160     		str	r1, [r0]
  55              		.loc 1 148 0
  56 0022 1C60     		str	r4, [r3]
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  57              		.loc 1 149 0
  58 0024 1949     		ldr	r1, .L2+24
  59 0026 1A48     		ldr	r0, .L2+28
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  60              		.loc 1 150 0
  61 0028 1A4C     		ldr	r4, .L2+32
  62 002a 0023     		mov	r3, #0
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  63              		.loc 1 149 0
  64 002c 0160     		str	r1, [r0]
  65              		.loc 1 150 0
  66 002e 2360     		str	r3, [r4]
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  67              		.loc 1 151 0
  68 0030 1949     		ldr	r1, .L2+36
  69 0032 1A48     		ldr	r0, .L2+40
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  70              		.loc 1 152 0
  71 0034 1A4C     		ldr	r4, .L2+44
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  72              		.loc 1 151 0
  73 0036 0160     		str	r1, [r0]
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 5


  74              		.loc 1 152 0
  75 0038 2160     		str	r1, [r4]
 153:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0; 
  76              		.loc 1 155 0
  77 003a 1A49     		ldr	r1, .L2+48
  78 003c 8020     		mov	r0, #128
  79 003e 0C68     		ldr	r4, [r1]
  80 0040 4002     		lsl	r0, r0, #9
  81 0042 2043     		orr	r0, r4
  82 0044 0860     		str	r0, [r1]
 156:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 159:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC.c **** 
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  83              		.loc 1 162 0
  84 0046 1849     		ldr	r1, .L2+52
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  85              		.loc 1 163 0
  86 0048 184C     		ldr	r4, .L2+56
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  87              		.loc 1 162 0
  88 004a 0B60     		str	r3, [r1]
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  89              		.loc 1 164 0
  90 004c 1848     		ldr	r0, .L2+60
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  91              		.loc 1 165 0
  92 004e 1949     		ldr	r1, .L2+64
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  93              		.loc 1 163 0
  94 0050 2360     		str	r3, [r4]
  95              		.loc 1 165 0
  96 0052 0224     		mov	r4, #2
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  97              		.loc 1 164 0
  98 0054 0260     		str	r2, [r0]
  99              		.loc 1 165 0
 100 0056 0C60     		str	r4, [r1]
 166:.\Generated_Source\PSoC4/ADC.c ****     
 167:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 101              		.loc 1 168 0
 102 0058 174C     		ldr	r4, .L2+68
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_DCEN;
 171:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 172:.\Generated_Source\PSoC4/ADC.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 6


 178:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 179:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC.c **** 
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 182:.\Generated_Source\PSoC4/ADC.c ****     {
 183:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 184:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 186:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC.c ****         */
 191:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 198:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC.c ****         {
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 201:.\Generated_Source\PSoC4/ADC.c **** 
 202:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 203:.\Generated_Source\PSoC4/ADC.c ****             {
 204:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 205:.\Generated_Source\PSoC4/ADC.c ****             }
 206:.\Generated_Source\PSoC4/ADC.c **** 
 207:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 208:.\Generated_Source\PSoC4/ADC.c ****             {
 209:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 210:.\Generated_Source\PSoC4/ADC.c ****             }
 211:.\Generated_Source\PSoC4/ADC.c ****         }
 212:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC.c ****             else
 214:.\Generated_Source\PSoC4/ADC.c ****             {
 215:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC.c ****                 {
 219:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC.c ****                 }
 221:.\Generated_Source\PSoC4/ADC.c **** 
 222:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 223:.\Generated_Source\PSoC4/ADC.c ****                 {
 224:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC.c ****                 }
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC.c **** 
 229:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 230:.\Generated_Source\PSoC4/ADC.c ****         {
 231:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         else
 234:.\Generated_Source\PSoC4/ADC.c ****         {
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 7


 235:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 236:.\Generated_Source\PSoC4/ADC.c ****         }
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****         {  
 240:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 242:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 246:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */    
 247:.\Generated_Source\PSoC4/ADC.c ****         }
 248:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC.c ****         {
 250:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 253:.\Generated_Source\PSoC4/ADC.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 255:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */    
 256:.\Generated_Source\PSoC4/ADC.c ****         }
 257:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 259:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 260:.\Generated_Source\PSoC4/ADC.c ****     }
 261:.\Generated_Source\PSoC4/ADC.c **** }
 103              		.loc 1 261 0
 104              		@ sp needed for prologue
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 105              		.loc 1 168 0
 106 005a 2068     		ldr	r0, [r4]
 107              	.LVL2:
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 108              		.loc 1 173 0
 109 005c 0243     		orr	r2, r0
 110              	.LVL3:
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 111              		.loc 1 175 0
 112 005e 2260     		str	r2, [r4]
 113              	.LVL4:
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 114              		.loc 1 245 0
 115 0060 1648     		ldr	r0, .L2+72
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 116              		.loc 1 200 0
 117 0062 8022     		mov	r2, #128
 118 0064 164C     		ldr	r4, .L2+76
 119 0066 D100     		lsl	r1, r2, #3
 120 0068 2160     		str	r1, [r4]
 121              	.LVL5:
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 122              		.loc 1 258 0
 123 006a 164A     		ldr	r2, .L2+80
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 124              		.loc 1 245 0
 125 006c 0380     		strh	r3, [r0]
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 8


 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 126              		.loc 1 258 0
 127 006e 164B     		ldr	r3, .L2+84
 128 0070 1A60     		str	r2, [r3]
 129              	.LVL6:
 130              		.loc 1 261 0
 131 0072 10BD     		pop	{r4, pc}
 132              	.L3:
 133              		.align	2
 134              	.L2:
 135 0074 00000000 		.word	ADC_ISR
 136 0078 20001A40 		.word	1075445792
 137 007c 70020050 		.word	1342177904
 138 0080 00001A40 		.word	1075445760
 139 0084 84000080 		.word	-2147483516
 140 0088 04001A40 		.word	1075445764
 141 008c 0000FF0F 		.word	268369920
 142 0090 18001A40 		.word	1075445784
 143 0094 1C001A40 		.word	1075445788
 144 0098 04000400 		.word	262148
 145 009c 10001A40 		.word	1075445776
 146 00a0 14001A40 		.word	1075445780
 147 00a4 00031A40 		.word	1075446528
 148 00a8 28021A40 		.word	1075446312
 149 00ac 38021A40 		.word	1075446328
 150 00b0 18021A40 		.word	1075446296
 151 00b4 000F1A40 		.word	1075449600
 152 00b8 30001A40 		.word	1075445808
 153 00bc 00000000 		.word	ADC_offset
 154 00c0 80001A40 		.word	1075445888
 155 00c4 3E180000 		.word	6206
 156 00c8 00000000 		.word	ADC_countsPer10Volt
 157              		.cfi_endproc
 158              	.LFE1:
 159              		.size	ADC_Init, .-ADC_Init
 160              		.section	.text.ADC_Enable,"ax",%progbits
 161              		.align	2
 162              		.global	ADC_Enable
 163              		.code	16
 164              		.thumb_func
 165              		.type	ADC_Enable, %function
 166              	ADC_Enable:
 167              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC.c **** 
 263:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC.c **** *
 267:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 269:.\Generated_Source\PSoC4/ADC.c **** *
 270:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC.c **** *
 273:.\Generated_Source\PSoC4/ADC.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 9


 276:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 278:.\Generated_Source\PSoC4/ADC.c **** {
 168              		.loc 1 278 0
 169              		.cfi_startproc
 170 0000 08B5     		push	{r3, lr}
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 8
 173              		.cfi_offset 3, -8
 174              		.cfi_offset 14, -4
 279:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_ENABLE;
 175              		.loc 1 279 0
 176 0002 054B     		ldr	r3, .L5
 177 0004 8022     		mov	r2, #128
 178 0006 1968     		ldr	r1, [r3]
 179 0008 1006     		lsl	r0, r2, #24
 180 000a 0843     		orr	r0, r1
 181 000c 1860     		str	r0, [r3]
 280:.\Generated_Source\PSoC4/ADC.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC.c ****     CyDelayUs(ADC_10US_DELAY);
 182              		.loc 1 281 0
 183 000e 0A20     		mov	r0, #10
 184 0010 FFF7FEFF 		bl	CyDelayUs
 185              	.LVL7:
 282:.\Generated_Source\PSoC4/ADC.c **** }
 186              		.loc 1 282 0
 187              		@ sp needed for prologue
 188 0014 08BD     		pop	{r3, pc}
 189              	.L6:
 190 0016 C046     		.align	2
 191              	.L5:
 192 0018 00001A40 		.word	1075445760
 193              		.cfi_endproc
 194              	.LFE2:
 195              		.size	ADC_Enable, .-ADC_Enable
 196              		.section	.text.ADC_Start,"ax",%progbits
 197              		.align	2
 198              		.global	ADC_Start
 199              		.code	16
 200              		.thumb_func
 201              		.type	ADC_Start, %function
 202              	ADC_Start:
 203              	.LFB0:
  65:.\Generated_Source\PSoC4/ADC.c **** {
 204              		.loc 1 65 0
 205              		.cfi_startproc
 206 0000 10B5     		push	{r4, lr}
 207              	.LCFI2:
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 4, -8
 210              		.cfi_offset 14, -4
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 211              		.loc 1 67 0
 212 0002 054C     		ldr	r4, .L10
 213 0004 2378     		ldrb	r3, [r4]
 214 0006 002B     		cmp	r3, #0
 215 0008 03D1     		bne	.L8
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 10


  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 216              		.loc 1 69 0
 217 000a FFF7FEFF 		bl	ADC_Init
 218              	.LVL8:
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 219              		.loc 1 70 0
 220 000e 0120     		mov	r0, #1
 221 0010 2070     		strb	r0, [r4]
 222              	.L8:
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 223              		.loc 1 72 0
 224 0012 FFF7FEFF 		bl	ADC_Enable
 225              	.LVL9:
  73:.\Generated_Source\PSoC4/ADC.c **** }
 226              		.loc 1 73 0
 227              		@ sp needed for prologue
 228 0016 10BD     		pop	{r4, pc}
 229              	.L11:
 230              		.align	2
 231              	.L10:
 232 0018 00000000 		.word	.LANCHOR0
 233              		.cfi_endproc
 234              	.LFE0:
 235              		.size	ADC_Start, .-ADC_Start
 236              		.section	.text.ADC_Stop,"ax",%progbits
 237              		.align	2
 238              		.global	ADC_Stop
 239              		.code	16
 240              		.thumb_func
 241              		.type	ADC_Stop, %function
 242              	ADC_Stop:
 243              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** 
 285:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 287:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC.c **** *
 289:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC.c **** *
 293:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC.c **** *
 296:.\Generated_Source\PSoC4/ADC.c **** * Return:
 297:.\Generated_Source\PSoC4/ADC.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC.c **** *
 299:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 301:.\Generated_Source\PSoC4/ADC.c **** {
 244              		.loc 1 301 0
 245              		.cfi_startproc
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 246              		.loc 1 302 0
 247 0000 024B     		ldr	r3, .L13
 303:.\Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 11


 248              		.loc 1 303 0
 249              		@ sp needed for prologue
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 250              		.loc 1 302 0
 251 0002 1A68     		ldr	r2, [r3]
 252 0004 5000     		lsl	r0, r2, #1
 253 0006 4108     		lsr	r1, r0, #1
 254 0008 1960     		str	r1, [r3]
 255              		.loc 1 303 0
 256 000a 7047     		bx	lr
 257              	.L14:
 258              		.align	2
 259              	.L13:
 260 000c 00001A40 		.word	1075445760
 261              		.cfi_endproc
 262              	.LFE3:
 263              		.size	ADC_Stop, .-ADC_Stop
 264              		.section	.text.ADC_StartConvert,"ax",%progbits
 265              		.align	2
 266              		.global	ADC_StartConvert
 267              		.code	16
 268              		.thumb_func
 269              		.type	ADC_StartConvert, %function
 270              	ADC_StartConvert:
 271              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC.c **** 
 305:.\Generated_Source\PSoC4/ADC.c **** 
 306:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 308:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC.c **** *
 310:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC.c **** *
 315:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 318:.\Generated_Source\PSoC4/ADC.c **** *
 319:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC.c **** *
 325:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC.c **** {
 272              		.loc 1 327 0
 273              		.cfi_startproc
 328:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 274              		.loc 1 329 0
 275 0000 034B     		ldr	r3, .L16
 276 0002 8022     		mov	r2, #128
 277 0004 1968     		ldr	r1, [r3]
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 12


 278 0006 5002     		lsl	r0, r2, #9
 279 0008 0843     		orr	r0, r1
 280 000a 1860     		str	r0, [r3]
 330:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 332:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC.c **** 
 334:.\Generated_Source\PSoC4/ADC.c **** }
 281              		.loc 1 334 0
 282              		@ sp needed for prologue
 283 000c 7047     		bx	lr
 284              	.L17:
 285 000e C046     		.align	2
 286              	.L16:
 287 0010 04001A40 		.word	1075445764
 288              		.cfi_endproc
 289              	.LFE4:
 290              		.size	ADC_StartConvert, .-ADC_StartConvert
 291              		.section	.text.ADC_StopConvert,"ax",%progbits
 292              		.align	2
 293              		.global	ADC_StopConvert
 294              		.code	16
 295              		.thumb_func
 296              		.type	ADC_StopConvert, %function
 297              	ADC_StopConvert:
 298              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c **** 
 337:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 339:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** *
 341:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC.c **** *
 344:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC.c **** *
 347:.\Generated_Source\PSoC4/ADC.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC.c **** *
 350:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC.c **** {
 299              		.loc 1 352 0
 300              		.cfi_startproc
 353:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 301              		.loc 1 354 0
 302 0000 024B     		ldr	r3, .L19
 303 0002 034A     		ldr	r2, .L19+4
 304 0004 1968     		ldr	r1, [r3]
 355:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC.c **** }
 305              		.loc 1 356 0
 306              		@ sp needed for prologue
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 13


 307              		.loc 1 354 0
 308 0006 0A40     		and	r2, r1
 309 0008 1A60     		str	r2, [r3]
 310              		.loc 1 356 0
 311 000a 7047     		bx	lr
 312              	.L20:
 313              		.align	2
 314              	.L19:
 315 000c 04001A40 		.word	1075445764
 316 0010 FFFFFEFF 		.word	-65537
 317              		.cfi_endproc
 318              	.LFE5:
 319              		.size	ADC_StopConvert, .-ADC_StopConvert
 320              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 321              		.align	2
 322              		.global	ADC_IsEndConversion
 323              		.code	16
 324              		.thumb_func
 325              		.type	ADC_IsEndConversion, %function
 326              	ADC_IsEndConversion:
 327              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC.c **** 
 358:.\Generated_Source\PSoC4/ADC.c **** 
 359:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC.c **** *
 363:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC.c **** *
 372:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 386:.\Generated_Source\PSoC4/ADC.c **** {
 328              		.loc 1 386 0
 329              		.cfi_startproc
 330              	.LVL10:
 331 0000 011C     		mov	r1, r0
 332 0002 00B5     		push	{lr}
 333              	.LCFI3:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 14


 334              		.cfi_def_cfa_offset 4
 335              		.cfi_offset 14, -4
 387:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 336              		.loc 1 387 0
 337 0004 0020     		mov	r0, #0
 338              	.LVL11:
 388:.\Generated_Source\PSoC4/ADC.c **** 
 389:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 339              		.loc 1 389 0
 340 0006 8B07     		lsl	r3, r1, #30
 341 0008 0DD0     		beq	.L26
 390:.\Generated_Source\PSoC4/ADC.c ****     {
 391:.\Generated_Source\PSoC4/ADC.c ****         do
 392:.\Generated_Source\PSoC4/ADC.c ****         {
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 394:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 342              		.loc 1 394 0
 343 000a 0220     		mov	r0, #2
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 344              		.loc 1 393 0
 345 000c 064A     		ldr	r2, .L31
 346 000e 0123     		mov	r3, #1
 347              		.loc 1 394 0
 348 0010 0140     		and	r1, r0
 349              	.LVL12:
 350 0012 01E0     		b	.L27
 351              	.LVL13:
 352              	.L30:
 353              		.loc 1 394 0 is_stmt 0 discriminator 1
 354 0014 0029     		cmp	r1, #0
 355 0016 06D0     		beq	.L26
 356              	.LVL14:
 357              	.L27:
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 358              		.loc 1 393 0 is_stmt 1
 359 0018 1068     		ldr	r0, [r2]
 360 001a 1840     		and	r0, r3
 361              	.LVL15:
 362              		.loc 1 394 0
 363 001c FAD0     		beq	.L30
 395:.\Generated_Source\PSoC4/ADC.c **** 
 396:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 397:.\Generated_Source\PSoC4/ADC.c ****         {
 398:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 364              		.loc 1 399 0
 365 001e 024A     		ldr	r2, .L31
 366 0020 0121     		mov	r1, #1
 367 0022 1160     		str	r1, [r2]
 368 0024 0120     		mov	r0, #1
 369              	.LVL16:
 370              	.L26:
 400:.\Generated_Source\PSoC4/ADC.c ****         }
 401:.\Generated_Source\PSoC4/ADC.c ****     }
 402:.\Generated_Source\PSoC4/ADC.c **** 
 403:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 15


 405:.\Generated_Source\PSoC4/ADC.c ****         {
 406:.\Generated_Source\PSoC4/ADC.c ****             do
 407:.\Generated_Source\PSoC4/ADC.c ****             {
 408:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC.c **** 
 412:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC.c ****             {
 414:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 415:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC.c ****             }
 417:.\Generated_Source\PSoC4/ADC.c ****         }
 418:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC.c **** 
 420:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 421:.\Generated_Source\PSoC4/ADC.c **** }
 371              		.loc 1 421 0
 372              		@ sp needed for prologue
 373 0026 00BD     		pop	{pc}
 374              	.L32:
 375              		.align	2
 376              	.L31:
 377 0028 10021A40 		.word	1075446288
 378              		.cfi_endproc
 379              	.LFE6:
 380              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 381              		.section	.text.ADC_GetResult16,"ax",%progbits
 382              		.align	2
 383              		.global	ADC_GetResult16
 384              		.code	16
 385              		.thumb_func
 386              		.type	ADC_GetResult16, %function
 387              	ADC_GetResult16:
 388              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC.c **** *
 431:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 434:.\Generated_Source\PSoC4/ADC.c **** *
 435:.\Generated_Source\PSoC4/ADC.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 437:.\Generated_Source\PSoC4/ADC.c **** *
 438:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC.c **** {
 389              		.loc 1 440 0
 390              		.cfi_startproc
 391              	.LVL17:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 16


 392 0000 08B5     		push	{r3, lr}
 393              	.LCFI4:
 394              		.cfi_def_cfa_offset 8
 395              		.cfi_offset 3, -8
 396              		.cfi_offset 14, -4
 441:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC.c **** 
 443:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 397              		.loc 1 444 0
 398 0002 0028     		cmp	r0, #0
 399 0004 05D1     		bne	.L37
 445:.\Generated_Source\PSoC4/ADC.c **** 
 446:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 447:.\Generated_Source\PSoC4/ADC.c ****     {
 448:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 400              		.loc 1 448 0
 401 0006 054B     		ldr	r3, .L38
 402 0008 1868     		ldr	r0, [r3]
 403              	.LVL18:
 404 000a 0104     		lsl	r1, r0, #16
 405 000c 0A0C     		lsr	r2, r1, #16
 406              	.LVL19:
 407              	.L35:
 449:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC.c ****     }
 451:.\Generated_Source\PSoC4/ADC.c ****     else
 452:.\Generated_Source\PSoC4/ADC.c ****     {
 453:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 454:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC.c ****         #else
 456:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 457:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC.c ****     }
 459:.\Generated_Source\PSoC4/ADC.c **** 
 460:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 408              		.loc 1 460 0
 409 000e 10B2     		sxth	r0, r2
 461:.\Generated_Source\PSoC4/ADC.c **** }
 410              		.loc 1 461 0
 411              		@ sp needed for prologue
 412 0010 08BD     		pop	{r3, pc}
 413              	.LVL20:
 414              	.L37:
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 415              		.loc 1 444 0 discriminator 1
 416 0012 0020     		mov	r0, #0
 417              	.LVL21:
 418 0014 FFF7FEFF 		bl	CyHalt
 419              	.LVL22:
 420 0018 0022     		mov	r2, #0
 421 001a F8E7     		b	.L35
 422              	.L39:
 423              		.align	2
 424              	.L38:
 425 001c 80011A40 		.word	1075446144
 426              		.cfi_endproc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 17


 427              	.LFE7:
 428              		.size	ADC_GetResult16, .-ADC_GetResult16
 429              		.section	.text.ADC_SetChanMask,"ax",%progbits
 430              		.align	2
 431              		.global	ADC_SetChanMask
 432              		.code	16
 433              		.thumb_func
 434              		.type	ADC_SetChanMask, %function
 435              	ADC_SetChanMask:
 436              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC.c **** 
 463:.\Generated_Source\PSoC4/ADC.c **** 
 464:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 466:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC.c **** *
 480:.\Generated_Source\PSoC4/ADC.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC.c **** *  None.
 482:.\Generated_Source\PSoC4/ADC.c **** *
 483:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC.c **** {
 437              		.loc 1 485 0
 438              		.cfi_startproc
 439              	.LVL23:
 486:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 440              		.loc 1 486 0
 441 0000 0123     		mov	r3, #1
 442 0002 0249     		ldr	r1, .L41
 443 0004 1840     		and	r0, r3
 444              	.LVL24:
 445 0006 0860     		str	r0, [r1]
 487:.\Generated_Source\PSoC4/ADC.c **** }
 446              		.loc 1 487 0
 447              		@ sp needed for prologue
 448 0008 7047     		bx	lr
 449              	.L42:
 450 000a C046     		.align	2
 451              	.L41:
 452 000c 20001A40 		.word	1075445792
 453              		.cfi_endproc
 454              	.LFE8:
 455              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 456              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 457              		.align	2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 18


 458              		.global	ADC_SetLowLimit
 459              		.code	16
 460              		.thumb_func
 461              		.type	ADC_SetLowLimit, %function
 462              	ADC_SetLowLimit:
 463              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC.c **** 
 491:.\Generated_Source\PSoC4/ADC.c **** 
 492:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 494:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC.c ****     *
 496:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC.c ****     *
 499:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC.c ****     *
 502:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC.c ****     *
 505:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC.c ****     {
 508:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC.c ****     }
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC.c **** 
 513:.\Generated_Source\PSoC4/ADC.c **** 
 514:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC.c **** *
 518:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC.c **** *
 521:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC.c **** *
 524:.\Generated_Source\PSoC4/ADC.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC.c **** *
 527:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC.c **** {
 464              		.loc 1 529 0
 465              		.cfi_startproc
 466              	.LVL25:
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 467              		.loc 1 530 0
 468 0000 054B     		ldr	r3, .L44
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 469              		.loc 1 531 0
 470 0002 0004     		lsl	r0, r0, #16
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 19


 471              	.LVL26:
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 472              		.loc 1 530 0
 473 0004 1A68     		ldr	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC.c **** }
 474              		.loc 1 532 0
 475              		@ sp needed for prologue
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 476              		.loc 1 530 0
 477 0006 110C     		lsr	r1, r2, #16
 478 0008 0A04     		lsl	r2, r1, #16
 479 000a 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 480              		.loc 1 531 0
 481 000c 1968     		ldr	r1, [r3]
 482 000e 020C     		lsr	r2, r0, #16
 483 0010 0A43     		orr	r2, r1
 484 0012 1A60     		str	r2, [r3]
 485              		.loc 1 532 0
 486 0014 7047     		bx	lr
 487              	.L45:
 488 0016 C046     		.align	2
 489              	.L44:
 490 0018 18001A40 		.word	1075445784
 491              		.cfi_endproc
 492              	.LFE9:
 493              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 494              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 495              		.align	2
 496              		.global	ADC_SetHighLimit
 497              		.code	16
 498              		.thumb_func
 499              		.type	ADC_SetHighLimit, %function
 500              	ADC_SetHighLimit:
 501              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC.c **** 
 534:.\Generated_Source\PSoC4/ADC.c **** 
 535:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC.c **** *
 539:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC.c **** *
 542:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 502              		.loc 1 550 0
 503              		.cfi_startproc
 504              	.LVL27:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 20


 505              		.loc 1 551 0
 506 0000 044B     		ldr	r3, .L47
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 507              		.loc 1 552 0
 508 0002 0004     		lsl	r0, r0, #16
 509              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 510              		.loc 1 551 0
 511 0004 1A68     		ldr	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC.c **** }
 512              		.loc 1 553 0
 513              		@ sp needed for prologue
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 514              		.loc 1 551 0
 515 0006 1104     		lsl	r1, r2, #16
 516 0008 0A0C     		lsr	r2, r1, #16
 517 000a 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 518              		.loc 1 552 0
 519 000c 1968     		ldr	r1, [r3]
 520 000e 0843     		orr	r0, r1
 521 0010 1860     		str	r0, [r3]
 522              		.loc 1 553 0
 523 0012 7047     		bx	lr
 524              	.L48:
 525              		.align	2
 526              	.L47:
 527 0014 18001A40 		.word	1075445784
 528              		.cfi_endproc
 529              	.LFE10:
 530              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 531              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 532              		.align	2
 533              		.global	ADC_SetLimitMask
 534              		.code	16
 535              		.thumb_func
 536              		.type	ADC_SetLimitMask, %function
 537              	ADC_SetLimitMask:
 538              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC.c **** 
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC.c **** *
 563:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 565:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC.c **** *
 569:.\Generated_Source\PSoC4/ADC.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC.c **** *  None.
 571:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 21


 572:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 573:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC.c **** {
 539              		.loc 1 574 0
 540              		.cfi_startproc
 541              	.LVL29:
 575:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 542              		.loc 1 575 0
 543 0000 0123     		mov	r3, #1
 544 0002 0249     		ldr	r1, .L50
 545 0004 1840     		and	r0, r3
 546              	.LVL30:
 547 0006 0860     		str	r0, [r1]
 576:.\Generated_Source\PSoC4/ADC.c **** }
 548              		.loc 1 576 0
 549              		@ sp needed for prologue
 550 0008 7047     		bx	lr
 551              	.L51:
 552 000a C046     		.align	2
 553              	.L50:
 554 000c 38021A40 		.word	1075446328
 555              		.cfi_endproc
 556              	.LFE11:
 557              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 558              		.section	.text.ADC_SetSatMask,"ax",%progbits
 559              		.align	2
 560              		.global	ADC_SetSatMask
 561              		.code	16
 562              		.thumb_func
 563              		.type	ADC_SetSatMask, %function
 564              	ADC_SetSatMask:
 565              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 588:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC.c **** *
 595:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC.c **** {
 566              		.loc 1 597 0
 567              		.cfi_startproc
 568              	.LVL31:
 598:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 22


 569              		.loc 1 598 0
 570 0000 0123     		mov	r3, #1
 571 0002 0249     		ldr	r1, .L53
 572 0004 1840     		and	r0, r3
 573              	.LVL32:
 574 0006 0860     		str	r0, [r1]
 599:.\Generated_Source\PSoC4/ADC.c **** }
 575              		.loc 1 599 0
 576              		@ sp needed for prologue
 577 0008 7047     		bx	lr
 578              	.L54:
 579 000a C046     		.align	2
 580              	.L53:
 581 000c 28021A40 		.word	1075446312
 582              		.cfi_endproc
 583              	.LFE12:
 584              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 585              		.section	.text.ADC_SetOffset,"ax",%progbits
 586              		.align	2
 587              		.global	ADC_SetOffset
 588              		.code	16
 589              		.thumb_func
 590              		.type	ADC_SetOffset, %function
 591              	ADC_SetOffset:
 592              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC.c **** 
 601:.\Generated_Source\PSoC4/ADC.c **** 
 602:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 604:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 605:.\Generated_Source\PSoC4/ADC.c **** *
 606:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC.c **** *
 612:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC.c **** *
 617:.\Generated_Source\PSoC4/ADC.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC.c **** *
 620:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC.c **** *
 623:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 625:.\Generated_Source\PSoC4/ADC.c **** {
 593              		.loc 1 625 0
 594              		.cfi_startproc
 595              	.LVL33:
 596 0000 38B5     		push	{r3, r4, r5, lr}
 597              	.LCFI5:
 598              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 23


 599              		.cfi_offset 3, -16
 600              		.cfi_offset 4, -12
 601              		.cfi_offset 5, -8
 602              		.cfi_offset 14, -4
 603              		.loc 1 625 0
 604 0002 041C     		mov	r4, r0
 605 0004 0D1C     		mov	r5, r1
 626:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 606              		.loc 1 627 0
 607 0006 0028     		cmp	r0, #0
 608 0008 02D0     		beq	.L56
 609              		.loc 1 627 0 is_stmt 0 discriminator 1
 610 000a 0020     		mov	r0, #0
 611              	.LVL34:
 612 000c FFF7FEFF 		bl	CyHalt
 613              	.LVL35:
 614              	.L56:
 628:.\Generated_Source\PSoC4/ADC.c **** 
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 615              		.loc 1 629 0 is_stmt 1
 616 0010 014B     		ldr	r3, .L60
 617 0012 6000     		lsl	r0, r4, #1
 618 0014 C552     		strh	r5, [r0, r3]
 630:.\Generated_Source\PSoC4/ADC.c **** }
 619              		.loc 1 630 0
 620              		@ sp needed for prologue
 621              	.LVL36:
 622 0016 38BD     		pop	{r3, r4, r5, pc}
 623              	.L61:
 624              		.align	2
 625              	.L60:
 626 0018 00000000 		.word	ADC_offset
 627              		.cfi_endproc
 628              	.LFE13:
 629              		.size	ADC_SetOffset, .-ADC_SetOffset
 630              		.section	.text.ADC_SetGain,"ax",%progbits
 631              		.align	2
 632              		.global	ADC_SetGain
 633              		.code	16
 634              		.thumb_func
 635              		.type	ADC_SetGain, %function
 636              	ADC_SetGain:
 637              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC.c **** 
 632:.\Generated_Source\PSoC4/ADC.c **** 
 633:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 635:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** *
 637:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 24


 644:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 645:.\Generated_Source\PSoC4/ADC.c **** *
 646:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC.c **** {
 638              		.loc 1 659 0
 639              		.cfi_startproc
 640              	.LVL37:
 641 0000 38B5     		push	{r3, r4, r5, lr}
 642              	.LCFI6:
 643              		.cfi_def_cfa_offset 16
 644              		.cfi_offset 3, -16
 645              		.cfi_offset 4, -12
 646              		.cfi_offset 5, -8
 647              		.cfi_offset 14, -4
 648              		.loc 1 659 0
 649 0002 041C     		mov	r4, r0
 650 0004 0D1C     		mov	r5, r1
 660:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 651              		.loc 1 661 0
 652 0006 0028     		cmp	r0, #0
 653 0008 02D0     		beq	.L63
 654              		.loc 1 661 0 is_stmt 0 discriminator 1
 655 000a 0020     		mov	r0, #0
 656              	.LVL38:
 657 000c FFF7FEFF 		bl	CyHalt
 658              	.LVL39:
 659              	.L63:
 662:.\Generated_Source\PSoC4/ADC.c **** 
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 660              		.loc 1 663 0 is_stmt 1
 661 0010 014B     		ldr	r3, .L67
 662 0012 A000     		lsl	r0, r4, #2
 663 0014 C550     		str	r5, [r0, r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 664              		.loc 1 664 0
 665              		@ sp needed for prologue
 666              	.LVL40:
 667              	.LVL41:
 668 0016 38BD     		pop	{r3, r4, r5, pc}
 669              	.L68:
 670              		.align	2
 671              	.L67:
 672 0018 00000000 		.word	ADC_countsPer10Volt
 673              		.cfi_endproc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 25


 674              	.LFE14:
 675              		.size	ADC_SetGain, .-ADC_SetGain
 676              		.global	__aeabi_idiv
 677              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 678              		.align	2
 679              		.global	ADC_CountsTo_mVolts
 680              		.code	16
 681              		.thumb_func
 682              		.type	ADC_CountsTo_mVolts, %function
 683              	ADC_CountsTo_mVolts:
 684              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 668:.\Generated_Source\PSoC4/ADC.c **** 
 669:.\Generated_Source\PSoC4/ADC.c **** 
 670:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC.c ****     *
 674:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC.c ****     *
 678:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC.c ****     *
 682:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC.c ****     *
 685:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC.c ****     *
 690:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC.c ****     {
 685              		.loc 1 692 0
 686              		.cfi_startproc
 687              	.LVL42:
 688 0000 38B5     		push	{r3, r4, r5, lr}
 689              	.LCFI7:
 690              		.cfi_def_cfa_offset 16
 691              		.cfi_offset 3, -16
 692              		.cfi_offset 4, -12
 693              		.cfi_offset 5, -8
 694              		.cfi_offset 14, -4
 695              		.loc 1 692 0
 696 0002 041C     		mov	r4, r0
 697 0004 0D1C     		mov	r5, r1
 693:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC.c **** 
 695:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 698              		.loc 1 696 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 26


 699 0006 0028     		cmp	r0, #0
 700 0008 1AD1     		bne	.L76
 701              	.LVL43:
 702              	.L70:
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 701:.\Generated_Source\PSoC4/ADC.c ****             {
 702:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 703:.\Generated_Source\PSoC4/ADC.c ****             }    
 704:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC.c **** 
 706:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 703              		.loc 1 707 0
 704 000a 0F4B     		ldr	r3, .L77
 705 000c 6200     		lsl	r2, r4, #1
 706 000e D15A     		ldrh	r1, [r2, r3]
 708:.\Generated_Source\PSoC4/ADC.c **** 
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 707              		.loc 1 709 0
 708 0010 0E4A     		ldr	r2, .L77+4
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 709              		.loc 1 707 0
 710 0012 681A     		sub	r0, r5, r1
 711 0014 05B2     		sxth	r5, r0
 712              	.LVL44:
 713              		.loc 1 709 0
 714 0016 6A43     		mul	r2, r5
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 715              		.loc 1 710 0
 716 0018 0D4B     		ldr	r3, .L77+8
 717 001a A400     		lsl	r4, r4, #2
 718              	.LVL45:
 719 001c 002D     		cmp	r5, #0
 720 001e 09DD     		ble	.L71
 721              		.loc 1 710 0 is_stmt 0 discriminator 1
 722 0020 1D59     		ldr	r5, [r3, r4]
 723 0022 E90F     		lsr	r1, r5, #31
 724 0024 4819     		add	r0, r1, r5
 725              	.LVL46:
 726 0026 4010     		asr	r0, r0, #1
 727              	.L72:
 711:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 728              		.loc 1 711 0 is_stmt 1
 729 0028 1959     		ldr	r1, [r3, r4]
 730              	.LVL47:
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 731              		.loc 1 709 0
 732 002a 1018     		add	r0, r2, r0
 733              	.LVL48:
 734              		.loc 1 711 0
 735 002c FFF7FEFF 		bl	__aeabi_idiv
 736              	.LVL49:
 712:.\Generated_Source\PSoC4/ADC.c **** 
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 27


 714:.\Generated_Source\PSoC4/ADC.c ****     }
 737              		.loc 1 714 0
 738              		@ sp needed for prologue
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 739              		.loc 1 713 0
 740 0030 00B2     		sxth	r0, r0
 741              		.loc 1 714 0
 742 0032 38BD     		pop	{r3, r4, r5, pc}
 743              	.LVL50:
 744              	.L71:
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 745              		.loc 1 710 0 discriminator 2
 746 0034 1959     		ldr	r1, [r3, r4]
 747 0036 C80F     		lsr	r0, r1, #31
 748              	.LVL51:
 749 0038 4518     		add	r5, r0, r1
 750              	.LVL52:
 751 003a 6910     		asr	r1, r5, #1
 752 003c 4842     		neg	r0, r1
 753 003e F3E7     		b	.L72
 754              	.LVL53:
 755              	.L76:
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 756              		.loc 1 696 0 discriminator 1
 757 0040 0020     		mov	r0, #0
 758              	.LVL54:
 759 0042 FFF7FEFF 		bl	CyHalt
 760              	.LVL55:
 761 0046 E0E7     		b	.L70
 762              	.L78:
 763              		.align	2
 764              	.L77:
 765 0048 00000000 		.word	ADC_offset
 766 004c 10270000 		.word	10000
 767 0050 00000000 		.word	ADC_countsPer10Volt
 768              		.cfi_endproc
 769              	.LFE15:
 770              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 771              		.global	__aeabi_lmul
 772              		.global	__aeabi_ldivmod
 773              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 774              		.align	2
 775              		.global	ADC_CountsTo_uVolts
 776              		.code	16
 777              		.thumb_func
 778              		.type	ADC_CountsTo_uVolts, %function
 779              	ADC_CountsTo_uVolts:
 780              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC.c **** 
 716:.\Generated_Source\PSoC4/ADC.c **** 
 717:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC.c ****     *
 721:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 723:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 28


 724:.\Generated_Source\PSoC4/ADC.c ****     *
 725:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC.c ****     *
 729:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC.c ****     *
 732:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC.c ****     *
 737:.\Generated_Source\PSoC4/ADC.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC.c ****     *
 744:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC.c ****     {
 781              		.loc 1 746 0
 782              		.cfi_startproc
 783              	.LVL56:
 784 0000 38B5     		push	{r3, r4, r5, lr}
 785              	.LCFI8:
 786              		.cfi_def_cfa_offset 16
 787              		.cfi_offset 3, -16
 788              		.cfi_offset 4, -12
 789              		.cfi_offset 5, -8
 790              		.cfi_offset 14, -4
 791              		.loc 1 746 0
 792 0002 041C     		mov	r4, r0
 793 0004 0D1C     		mov	r5, r1
 747:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 794              		.loc 1 750 0
 795 0006 0028     		cmp	r0, #0
 796 0008 02D0     		beq	.L80
 797              		.loc 1 750 0 is_stmt 0 discriminator 1
 798 000a 0020     		mov	r0, #0
 799              	.LVL57:
 800 000c FFF7FEFF 		bl	CyHalt
 801              	.LVL58:
 802              	.L80:
 751:.\Generated_Source\PSoC4/ADC.c **** 
 752:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 755:.\Generated_Source\PSoC4/ADC.c ****             {
 756:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 757:.\Generated_Source\PSoC4/ADC.c ****             }    
 758:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 29


 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 803              		.loc 1 761 0 is_stmt 1
 804 0010 0B4B     		ldr	r3, .L84+8
 805 0012 6200     		lsl	r2, r4, #1
 806 0014 D05A     		ldrh	r0, [r2, r3]
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 807              		.loc 1 763 0
 808 0016 A400     		lsl	r4, r4, #2
 809              	.LVL59:
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 810              		.loc 1 761 0
 811 0018 291A     		sub	r1, r5, r0
 812              	.LVL60:
 813              		.loc 1 763 0
 814 001a 0A4D     		ldr	r5, .L84+12
 815 001c 08B2     		sxth	r0, r1
 816 001e 6459     		ldr	r4, [r4, r5]
 817              	.LVL61:
 818 0020 064B     		ldr	r3, .L84+4
 819 0022 054A     		ldr	r2, .L84
 820 0024 C117     		asr	r1, r0, #31
 821              	.LVL62:
 822 0026 FFF7FEFF 		bl	__aeabi_lmul
 823              	.LVL63:
 824 002a E317     		asr	r3, r4, #31
 825 002c 221C     		mov	r2, r4
 826 002e FFF7FEFF 		bl	__aeabi_ldivmod
 827              	.LVL64:
 764:.\Generated_Source\PSoC4/ADC.c **** 
 765:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 766:.\Generated_Source\PSoC4/ADC.c ****     }
 828              		.loc 1 766 0
 829              		@ sp needed for prologue
 830 0032 38BD     		pop	{r3, r4, r5, pc}
 831              	.L85:
 832 0034 C046C046 		.align	3
 833              	.L84:
 834 0038 80969800 		.word	10000000
 835 003c 00000000 		.word	0
 836 0040 00000000 		.word	ADC_offset
 837 0044 00000000 		.word	ADC_countsPer10Volt
 838              		.cfi_endproc
 839              	.LFE16:
 840              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 841              		.global	__aeabi_i2f
 842              		.global	__aeabi_fmul
 843              		.global	__aeabi_fdiv
 844              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 845              		.align	2
 846              		.global	ADC_CountsTo_Volts
 847              		.code	16
 848              		.thumb_func
 849              		.type	ADC_CountsTo_Volts, %function
 850              	ADC_CountsTo_Volts:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 30


 851              	.LFB17:
 767:.\Generated_Source\PSoC4/ADC.c **** 
 768:.\Generated_Source\PSoC4/ADC.c **** 
 769:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC.c ****     *
 773:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC.c ****     *
 781:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC.c ****     *
 784:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC.c ****     *
 789:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC.c ****     {
 852              		.loc 1 791 0
 853              		.cfi_startproc
 854              	.LVL65:
 855 0000 38B5     		push	{r3, r4, r5, lr}
 856              	.LCFI9:
 857              		.cfi_def_cfa_offset 16
 858              		.cfi_offset 3, -16
 859              		.cfi_offset 4, -12
 860              		.cfi_offset 5, -8
 861              		.cfi_offset 14, -4
 862              		.loc 1 791 0
 863 0002 041C     		mov	r4, r0
 864 0004 0D1C     		mov	r5, r1
 792:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC.c **** 
 794:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 865              		.loc 1 795 0
 866 0006 0028     		cmp	r0, #0
 867 0008 02D0     		beq	.L87
 868              		.loc 1 795 0 is_stmt 0 discriminator 1
 869 000a 0020     		mov	r0, #0
 870              	.LVL66:
 871 000c FFF7FEFF 		bl	CyHalt
 872              	.LVL67:
 873              	.L87:
 796:.\Generated_Source\PSoC4/ADC.c **** 
 797:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 800:.\Generated_Source\PSoC4/ADC.c ****             {
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 31


 801:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 802:.\Generated_Source\PSoC4/ADC.c ****             }    
 803:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC.c **** 
 805:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 874              		.loc 1 806 0 is_stmt 1
 875 0010 0A4B     		ldr	r3, .L91
 876 0012 6200     		lsl	r2, r4, #1
 877 0014 D05A     		ldrh	r0, [r2, r3]
 807:.\Generated_Source\PSoC4/ADC.c **** 
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 878              		.loc 1 808 0
 879 0016 A400     		lsl	r4, r4, #2
 880              	.LVL68:
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 881              		.loc 1 806 0
 882 0018 291A     		sub	r1, r5, r0
 883              	.LVL69:
 884              		.loc 1 808 0
 885 001a 08B2     		sxth	r0, r1
 886 001c FFF7FEFF 		bl	__aeabi_i2f
 887              	.LVL70:
 888 0020 0749     		ldr	r1, .L91+4
 889 0022 FFF7FEFF 		bl	__aeabi_fmul
 890              	.LVL71:
 891 0026 074D     		ldr	r5, .L91+8
 809:.\Generated_Source\PSoC4/ADC.c **** 
 810:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 811:.\Generated_Source\PSoC4/ADC.c ****     }
 892              		.loc 1 811 0
 893              		@ sp needed for prologue
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 894              		.loc 1 808 0
 895 0028 6559     		ldr	r5, [r4, r5]
 896 002a 041C     		add	r4, r0, #0
 897 002c 281C     		mov	r0, r5
 898 002e FFF7FEFF 		bl	__aeabi_i2f
 899              	.LVL72:
 900 0032 011C     		add	r1, r0, #0
 901 0034 201C     		add	r0, r4, #0
 902 0036 FFF7FEFF 		bl	__aeabi_fdiv
 903              	.LVL73:
 904              		.loc 1 811 0
 905 003a 38BD     		pop	{r3, r4, r5, pc}
 906              	.L92:
 907              		.align	2
 908              	.L91:
 909 003c 00000000 		.word	ADC_offset
 910 0040 00002041 		.word	1092616192
 911 0044 00000000 		.word	ADC_countsPer10Volt
 912              		.cfi_endproc
 913              	.LFE17:
 914              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 915              		.comm	ADC_countsPer10Volt,4,4
 916              		.comm	ADC_offset,2,4
 917              		.global	ADC_initVar
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 32


 918              		.bss
 919              		.set	.LANCHOR0,. + 0
 920              		.type	ADC_initVar, %object
 921              		.size	ADC_initVar, 1
 922              	ADC_initVar:
 923 0000 00       		.space	1
 924              		.text
 925              	.Letext0:
 926              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 927              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 928              		.section	.debug_info,"",%progbits
 929              	.Ldebug_info0:
 930 0000 EF050000 		.4byte	0x5ef
 931 0004 0200     		.2byte	0x2
 932 0006 00000000 		.4byte	.Ldebug_abbrev0
 933 000a 04       		.byte	0x4
 934 000b 01       		.uleb128 0x1
 935 000c 59020000 		.4byte	.LASF62
 936 0010 01       		.byte	0x1
 937 0011 B9020000 		.4byte	.LASF63
 938 0015 49010000 		.4byte	.LASF64
 939 0019 00000000 		.4byte	.Ldebug_ranges0+0
 940 001d 00000000 		.4byte	0
 941 0021 00000000 		.4byte	0
 942 0025 00000000 		.4byte	.Ldebug_line0
 943 0029 02       		.uleb128 0x2
 944 002a 08       		.byte	0x8
 945 002b 07       		.byte	0x7
 946 002c 32000000 		.4byte	.LASF0
 947 0030 02       		.uleb128 0x2
 948 0031 08       		.byte	0x8
 949 0032 05       		.byte	0x5
 950 0033 5A000000 		.4byte	.LASF1
 951 0037 03       		.uleb128 0x3
 952 0038 04       		.byte	0x4
 953 0039 05       		.byte	0x5
 954 003a 696E7400 		.ascii	"int\000"
 955 003e 02       		.uleb128 0x2
 956 003f 02       		.byte	0x2
 957 0040 05       		.byte	0x5
 958 0041 F1020000 		.4byte	.LASF2
 959 0045 02       		.uleb128 0x2
 960 0046 01       		.byte	0x1
 961 0047 06       		.byte	0x6
 962 0048 68000000 		.4byte	.LASF3
 963 004c 02       		.uleb128 0x2
 964 004d 01       		.byte	0x1
 965 004e 08       		.byte	0x8
 966 004f D8020000 		.4byte	.LASF4
 967 0053 02       		.uleb128 0x2
 968 0054 02       		.byte	0x2
 969 0055 07       		.byte	0x7
 970 0056 84010000 		.4byte	.LASF5
 971 005a 02       		.uleb128 0x2
 972 005b 04       		.byte	0x4
 973 005c 05       		.byte	0x5
 974 005d 8B000000 		.4byte	.LASF6
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 33


 975 0061 02       		.uleb128 0x2
 976 0062 04       		.byte	0x4
 977 0063 07       		.byte	0x7
 978 0064 18010000 		.4byte	.LASF7
 979 0068 02       		.uleb128 0x2
 980 0069 04       		.byte	0x4
 981 006a 07       		.byte	0x7
 982 006b 04010000 		.4byte	.LASF8
 983 006f 04       		.uleb128 0x4
 984 0070 BC000000 		.4byte	.LASF9
 985 0074 02       		.byte	0x2
 986 0075 5B       		.byte	0x5b
 987 0076 4C000000 		.4byte	0x4c
 988 007a 04       		.uleb128 0x4
 989 007b 00000000 		.4byte	.LASF10
 990 007f 02       		.byte	0x2
 991 0080 5C       		.byte	0x5c
 992 0081 53000000 		.4byte	0x53
 993 0085 04       		.uleb128 0x4
 994 0086 D3000000 		.4byte	.LASF11
 995 008a 02       		.byte	0x2
 996 008b 5D       		.byte	0x5d
 997 008c 61000000 		.4byte	0x61
 998 0090 04       		.uleb128 0x4
 999 0091 50030000 		.4byte	.LASF12
 1000 0095 02       		.byte	0x2
 1001 0096 5F       		.byte	0x5f
 1002 0097 3E000000 		.4byte	0x3e
 1003 009b 04       		.uleb128 0x4
 1004 009c 7B000000 		.4byte	.LASF13
 1005 00a0 02       		.byte	0x2
 1006 00a1 60       		.byte	0x60
 1007 00a2 5A000000 		.4byte	0x5a
 1008 00a6 04       		.uleb128 0x4
 1009 00a7 C3010000 		.4byte	.LASF14
 1010 00ab 02       		.byte	0x2
 1011 00ac 61       		.byte	0x61
 1012 00ad B1000000 		.4byte	0xb1
 1013 00b1 02       		.uleb128 0x2
 1014 00b2 04       		.byte	0x4
 1015 00b3 04       		.byte	0x4
 1016 00b4 35020000 		.4byte	.LASF15
 1017 00b8 02       		.uleb128 0x2
 1018 00b9 08       		.byte	0x8
 1019 00ba 04       		.byte	0x4
 1020 00bb CC000000 		.4byte	.LASF16
 1021 00bf 04       		.uleb128 0x4
 1022 00c0 02020000 		.4byte	.LASF17
 1023 00c4 02       		.byte	0x2
 1024 00c5 66       		.byte	0x66
 1025 00c6 30000000 		.4byte	0x30
 1026 00ca 02       		.uleb128 0x2
 1027 00cb 01       		.byte	0x1
 1028 00cc 08       		.byte	0x8
 1029 00cd 0F030000 		.4byte	.LASF18
 1030 00d1 04       		.uleb128 0x4
 1031 00d2 BD010000 		.4byte	.LASF19
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 34


 1032 00d6 02       		.byte	0x2
 1033 00d7 F2       		.byte	0xf2
 1034 00d8 DC000000 		.4byte	0xdc
 1035 00dc 05       		.uleb128 0x5
 1036 00dd 85000000 		.4byte	0x85
 1037 00e1 06       		.uleb128 0x6
 1038 00e2 14030000 		.4byte	.LASF20
 1039 00e6 02       		.byte	0x2
 1040 00e7 0201     		.2byte	0x102
 1041 00e9 ED000000 		.4byte	0xed
 1042 00ed 07       		.uleb128 0x7
 1043 00ee 04       		.byte	0x4
 1044 00ef F3000000 		.4byte	0xf3
 1045 00f3 08       		.uleb128 0x8
 1046 00f4 01       		.byte	0x1
 1047 00f5 02       		.uleb128 0x2
 1048 00f6 04       		.byte	0x4
 1049 00f7 07       		.byte	0x7
 1050 00f8 CB010000 		.4byte	.LASF21
 1051 00fc 09       		.uleb128 0x9
 1052 00fd 01       		.byte	0x1
 1053 00fe 29000000 		.4byte	.LASF25
 1054 0102 01       		.byte	0x1
 1055 0103 5F       		.byte	0x5f
 1056 0104 01       		.byte	0x1
 1057 0105 00000000 		.4byte	.LFB1
 1058 0109 CC000000 		.4byte	.LFE1
 1059 010d 00000000 		.4byte	.LLST0
 1060 0111 01       		.byte	0x1
 1061 0112 69010000 		.4byte	0x169
 1062 0116 0A       		.uleb128 0xa
 1063 0117 04030000 		.4byte	.LASF22
 1064 011b 01       		.byte	0x1
 1065 011c 61       		.byte	0x61
 1066 011d 85000000 		.4byte	0x85
 1067 0121 20000000 		.4byte	.LLST1
 1068 0125 0A       		.uleb128 0xa
 1069 0126 3F010000 		.4byte	.LASF23
 1070 012a 01       		.byte	0x1
 1071 012b 62       		.byte	0x62
 1072 012c 85000000 		.4byte	0x85
 1073 0130 40000000 		.4byte	.LLST2
 1074 0134 0B       		.uleb128 0xb
 1075 0135 0F000000 		.4byte	.LASF24
 1076 0139 01       		.byte	0x1
 1077 013a 63       		.byte	0x63
 1078 013b 9B000000 		.4byte	0x9b
 1079 013f 0010     		.2byte	0x1000
 1080 0141 0C       		.uleb128 0xc
 1081 0142 0A000000 		.4byte	.LVL0
 1082 0146 98050000 		.4byte	0x598
 1083 014a 59010000 		.4byte	0x159
 1084 014e 0D       		.uleb128 0xd
 1085 014f 01       		.byte	0x1
 1086 0150 51       		.byte	0x51
 1087 0151 01       		.byte	0x1
 1088 0152 33       		.byte	0x33
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 35


 1089 0153 0D       		.uleb128 0xd
 1090 0154 01       		.byte	0x1
 1091 0155 50       		.byte	0x50
 1092 0156 01       		.byte	0x1
 1093 0157 3E       		.byte	0x3e
 1094 0158 00       		.byte	0
 1095 0159 0E       		.uleb128 0xe
 1096 015a 12000000 		.4byte	.LVL1
 1097 015e B1050000 		.4byte	0x5b1
 1098 0162 0D       		.uleb128 0xd
 1099 0163 01       		.byte	0x1
 1100 0164 50       		.byte	0x50
 1101 0165 01       		.byte	0x1
 1102 0166 3E       		.byte	0x3e
 1103 0167 00       		.byte	0
 1104 0168 00       		.byte	0
 1105 0169 0F       		.uleb128 0xf
 1106 016a 01       		.byte	0x1
 1107 016b 45030000 		.4byte	.LASF26
 1108 016f 01       		.byte	0x1
 1109 0170 1501     		.2byte	0x115
 1110 0172 01       		.byte	0x1
 1111 0173 00000000 		.4byte	.LFB2
 1112 0177 1C000000 		.4byte	.LFE2
 1113 017b 6C000000 		.4byte	.LLST3
 1114 017f 01       		.byte	0x1
 1115 0180 94010000 		.4byte	0x194
 1116 0184 0E       		.uleb128 0xe
 1117 0185 14000000 		.4byte	.LVL7
 1118 0189 CE050000 		.4byte	0x5ce
 1119 018d 0D       		.uleb128 0xd
 1120 018e 01       		.byte	0x1
 1121 018f 50       		.byte	0x50
 1122 0190 01       		.byte	0x1
 1123 0191 3A       		.byte	0x3a
 1124 0192 00       		.byte	0
 1125 0193 00       		.byte	0
 1126 0194 09       		.uleb128 0x9
 1127 0195 01       		.byte	0x1
 1128 0196 81000000 		.4byte	.LASF27
 1129 019a 01       		.byte	0x1
 1130 019b 40       		.byte	0x40
 1131 019c 01       		.byte	0x1
 1132 019d 00000000 		.4byte	.LFB0
 1133 01a1 1C000000 		.4byte	.LFE0
 1134 01a5 8C000000 		.4byte	.LLST4
 1135 01a9 01       		.byte	0x1
 1136 01aa C1010000 		.4byte	0x1c1
 1137 01ae 10       		.uleb128 0x10
 1138 01af 0E000000 		.4byte	.LVL8
 1139 01b3 FC000000 		.4byte	0xfc
 1140 01b7 10       		.uleb128 0x10
 1141 01b8 16000000 		.4byte	.LVL9
 1142 01bc 69010000 		.4byte	0x169
 1143 01c0 00       		.byte	0
 1144 01c1 11       		.uleb128 0x11
 1145 01c2 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 36


 1146 01c3 FB020000 		.4byte	.LASF28
 1147 01c7 01       		.byte	0x1
 1148 01c8 2C01     		.2byte	0x12c
 1149 01ca 01       		.byte	0x1
 1150 01cb 00000000 		.4byte	.LFB3
 1151 01cf 10000000 		.4byte	.LFE3
 1152 01d3 02       		.byte	0x2
 1153 01d4 7D       		.byte	0x7d
 1154 01d5 00       		.sleb128 0
 1155 01d6 01       		.byte	0x1
 1156 01d7 11       		.uleb128 0x11
 1157 01d8 01       		.byte	0x1
 1158 01d9 49000000 		.4byte	.LASF29
 1159 01dd 01       		.byte	0x1
 1160 01de 4601     		.2byte	0x146
 1161 01e0 01       		.byte	0x1
 1162 01e1 00000000 		.4byte	.LFB4
 1163 01e5 14000000 		.4byte	.LFE4
 1164 01e9 02       		.byte	0x2
 1165 01ea 7D       		.byte	0x7d
 1166 01eb 00       		.sleb128 0
 1167 01ec 01       		.byte	0x1
 1168 01ed 11       		.uleb128 0x11
 1169 01ee 01       		.byte	0x1
 1170 01ef A6010000 		.4byte	.LASF30
 1171 01f3 01       		.byte	0x1
 1172 01f4 5F01     		.2byte	0x15f
 1173 01f6 01       		.byte	0x1
 1174 01f7 00000000 		.4byte	.LFB5
 1175 01fb 14000000 		.4byte	.LFE5
 1176 01ff 02       		.byte	0x2
 1177 0200 7D       		.byte	0x7d
 1178 0201 00       		.sleb128 0
 1179 0202 01       		.byte	0x1
 1180 0203 12       		.uleb128 0x12
 1181 0204 01       		.byte	0x1
 1182 0205 EE010000 		.4byte	.LASF32
 1183 0209 01       		.byte	0x1
 1184 020a 8101     		.2byte	0x181
 1185 020c 01       		.byte	0x1
 1186 020d 85000000 		.4byte	0x85
 1187 0211 00000000 		.4byte	.LFB6
 1188 0215 2C000000 		.4byte	.LFE6
 1189 0219 AC000000 		.4byte	.LLST5
 1190 021d 01       		.byte	0x1
 1191 021e 43020000 		.4byte	0x243
 1192 0222 13       		.uleb128 0x13
 1193 0223 EB000000 		.4byte	.LASF34
 1194 0227 01       		.byte	0x1
 1195 0228 8101     		.2byte	0x181
 1196 022a 85000000 		.4byte	0x85
 1197 022e CC000000 		.4byte	.LLST6
 1198 0232 14       		.uleb128 0x14
 1199 0233 74000000 		.4byte	.LASF31
 1200 0237 01       		.byte	0x1
 1201 0238 8301     		.2byte	0x183
 1202 023a 85000000 		.4byte	0x85
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 37


 1203 023e F8000000 		.4byte	.LLST7
 1204 0242 00       		.byte	0
 1205 0243 12       		.uleb128 0x12
 1206 0244 01       		.byte	0x1
 1207 0245 6B030000 		.4byte	.LASF33
 1208 0249 01       		.byte	0x1
 1209 024a B701     		.2byte	0x1b7
 1210 024c 01       		.byte	0x1
 1211 024d 90000000 		.4byte	0x90
 1212 0251 00000000 		.4byte	.LFB7
 1213 0255 20000000 		.4byte	.LFE7
 1214 0259 22010000 		.4byte	.LLST8
 1215 025d 01       		.byte	0x1
 1216 025e 92020000 		.4byte	0x292
 1217 0262 13       		.uleb128 0x13
 1218 0263 0A030000 		.4byte	.LASF35
 1219 0267 01       		.byte	0x1
 1220 0268 B701     		.2byte	0x1b7
 1221 026a 85000000 		.4byte	0x85
 1222 026e 42010000 		.4byte	.LLST9
 1223 0272 14       		.uleb128 0x14
 1224 0273 64030000 		.4byte	.LASF36
 1225 0277 01       		.byte	0x1
 1226 0278 B901     		.2byte	0x1b9
 1227 027a 85000000 		.4byte	0x85
 1228 027e 7C010000 		.4byte	.LLST10
 1229 0282 0E       		.uleb128 0xe
 1230 0283 18000000 		.4byte	.LVL22
 1231 0287 E2050000 		.4byte	0x5e2
 1232 028b 0D       		.uleb128 0xd
 1233 028c 01       		.byte	0x1
 1234 028d 50       		.byte	0x50
 1235 028e 01       		.byte	0x1
 1236 028f 30       		.byte	0x30
 1237 0290 00       		.byte	0
 1238 0291 00       		.byte	0
 1239 0292 15       		.uleb128 0x15
 1240 0293 01       		.byte	0x1
 1241 0294 19020000 		.4byte	.LASF37
 1242 0298 01       		.byte	0x1
 1243 0299 E401     		.2byte	0x1e4
 1244 029b 01       		.byte	0x1
 1245 029c 00000000 		.4byte	.LFB8
 1246 02a0 10000000 		.4byte	.LFE8
 1247 02a4 02       		.byte	0x2
 1248 02a5 7D       		.byte	0x7d
 1249 02a6 00       		.sleb128 0
 1250 02a7 01       		.byte	0x1
 1251 02a8 BD020000 		.4byte	0x2bd
 1252 02ac 13       		.uleb128 0x13
 1253 02ad DA000000 		.4byte	.LASF38
 1254 02b1 01       		.byte	0x1
 1255 02b2 E401     		.2byte	0x1e4
 1256 02b4 85000000 		.4byte	0x85
 1257 02b8 95010000 		.4byte	.LLST11
 1258 02bc 00       		.byte	0
 1259 02bd 15       		.uleb128 0x15
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 38


 1260 02be 01       		.byte	0x1
 1261 02bf A2020000 		.4byte	.LASF39
 1262 02c3 01       		.byte	0x1
 1263 02c4 1002     		.2byte	0x210
 1264 02c6 01       		.byte	0x1
 1265 02c7 00000000 		.4byte	.LFB9
 1266 02cb 1C000000 		.4byte	.LFE9
 1267 02cf 02       		.byte	0x2
 1268 02d0 7D       		.byte	0x7d
 1269 02d1 00       		.sleb128 0
 1270 02d2 01       		.byte	0x1
 1271 02d3 E8020000 		.4byte	0x2e8
 1272 02d7 13       		.uleb128 0x13
 1273 02d8 D4010000 		.4byte	.LASF40
 1274 02dc 01       		.byte	0x1
 1275 02dd 1002     		.2byte	0x210
 1276 02df 85000000 		.4byte	0x85
 1277 02e3 B6010000 		.4byte	.LLST12
 1278 02e7 00       		.byte	0
 1279 02e8 15       		.uleb128 0x15
 1280 02e9 01       		.byte	0x1
 1281 02ea DD010000 		.4byte	.LASF41
 1282 02ee 01       		.byte	0x1
 1283 02ef 2502     		.2byte	0x225
 1284 02f1 01       		.byte	0x1
 1285 02f2 00000000 		.4byte	.LFB10
 1286 02f6 18000000 		.4byte	.LFE10
 1287 02fa 02       		.byte	0x2
 1288 02fb 7D       		.byte	0x7d
 1289 02fc 00       		.sleb128 0
 1290 02fd 01       		.byte	0x1
 1291 02fe 13030000 		.4byte	0x313
 1292 0302 13       		.uleb128 0x13
 1293 0303 3B020000 		.4byte	.LASF42
 1294 0307 01       		.byte	0x1
 1295 0308 2502     		.2byte	0x225
 1296 030a 85000000 		.4byte	0x85
 1297 030e D7010000 		.4byte	.LLST13
 1298 0312 00       		.byte	0
 1299 0313 15       		.uleb128 0x15
 1300 0314 01       		.byte	0x1
 1301 0315 F3000000 		.4byte	.LASF43
 1302 0319 01       		.byte	0x1
 1303 031a 3D02     		.2byte	0x23d
 1304 031c 01       		.byte	0x1
 1305 031d 00000000 		.4byte	.LFB11
 1306 0321 10000000 		.4byte	.LFE11
 1307 0325 02       		.byte	0x2
 1308 0326 7D       		.byte	0x7d
 1309 0327 00       		.sleb128 0
 1310 0328 01       		.byte	0x1
 1311 0329 3E030000 		.4byte	0x33e
 1312 032d 13       		.uleb128 0x13
 1313 032e DA000000 		.4byte	.LASF38
 1314 0332 01       		.byte	0x1
 1315 0333 3D02     		.2byte	0x23d
 1316 0335 85000000 		.4byte	0x85
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 39


 1317 0339 F8010000 		.4byte	.LLST14
 1318 033d 00       		.byte	0
 1319 033e 15       		.uleb128 0x15
 1320 033f 01       		.byte	0x1
 1321 0340 2A010000 		.4byte	.LASF44
 1322 0344 01       		.byte	0x1
 1323 0345 5402     		.2byte	0x254
 1324 0347 01       		.byte	0x1
 1325 0348 00000000 		.4byte	.LFB12
 1326 034c 10000000 		.4byte	.LFE12
 1327 0350 02       		.byte	0x2
 1328 0351 7D       		.byte	0x7d
 1329 0352 00       		.sleb128 0
 1330 0353 01       		.byte	0x1
 1331 0354 69030000 		.4byte	0x369
 1332 0358 13       		.uleb128 0x13
 1333 0359 DA000000 		.4byte	.LASF38
 1334 035d 01       		.byte	0x1
 1335 035e 5402     		.2byte	0x254
 1336 0360 85000000 		.4byte	0x85
 1337 0364 19020000 		.4byte	.LLST15
 1338 0368 00       		.byte	0
 1339 0369 0F       		.uleb128 0xf
 1340 036a 01       		.byte	0x1
 1341 036b 56030000 		.4byte	.LASF45
 1342 036f 01       		.byte	0x1
 1343 0370 7002     		.2byte	0x270
 1344 0372 01       		.byte	0x1
 1345 0373 00000000 		.4byte	.LFB13
 1346 0377 1C000000 		.4byte	.LFE13
 1347 037b 3A020000 		.4byte	.LLST16
 1348 037f 01       		.byte	0x1
 1349 0380 B4030000 		.4byte	0x3b4
 1350 0384 13       		.uleb128 0x13
 1351 0385 0A030000 		.4byte	.LASF35
 1352 0389 01       		.byte	0x1
 1353 038a 7002     		.2byte	0x270
 1354 038c 85000000 		.4byte	0x85
 1355 0390 5A020000 		.4byte	.LLST17
 1356 0394 13       		.uleb128 0x13
 1357 0395 34030000 		.4byte	.LASF46
 1358 0399 01       		.byte	0x1
 1359 039a 7002     		.2byte	0x270
 1360 039c 90000000 		.4byte	0x90
 1361 03a0 86020000 		.4byte	.LLST18
 1362 03a4 0E       		.uleb128 0xe
 1363 03a5 10000000 		.4byte	.LVL35
 1364 03a9 E2050000 		.4byte	0x5e2
 1365 03ad 0D       		.uleb128 0xd
 1366 03ae 01       		.byte	0x1
 1367 03af 50       		.byte	0x50
 1368 03b0 01       		.byte	0x1
 1369 03b1 30       		.byte	0x30
 1370 03b2 00       		.byte	0
 1371 03b3 00       		.byte	0
 1372 03b4 0F       		.uleb128 0xf
 1373 03b5 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 40


 1374 03b6 29020000 		.4byte	.LASF47
 1375 03ba 01       		.byte	0x1
 1376 03bb 9202     		.2byte	0x292
 1377 03bd 01       		.byte	0x1
 1378 03be 00000000 		.4byte	.LFB14
 1379 03c2 1C000000 		.4byte	.LFE14
 1380 03c6 A7020000 		.4byte	.LLST19
 1381 03ca 01       		.byte	0x1
 1382 03cb FF030000 		.4byte	0x3ff
 1383 03cf 13       		.uleb128 0x13
 1384 03d0 0A030000 		.4byte	.LASF35
 1385 03d4 01       		.byte	0x1
 1386 03d5 9202     		.2byte	0x292
 1387 03d7 85000000 		.4byte	0x85
 1388 03db C7020000 		.4byte	.LLST20
 1389 03df 13       		.uleb128 0x13
 1390 03e0 07000000 		.4byte	.LASF48
 1391 03e4 01       		.byte	0x1
 1392 03e5 9202     		.2byte	0x292
 1393 03e7 9B000000 		.4byte	0x9b
 1394 03eb F3020000 		.4byte	.LLST21
 1395 03ef 0E       		.uleb128 0xe
 1396 03f0 10000000 		.4byte	.LVL39
 1397 03f4 E2050000 		.4byte	0x5e2
 1398 03f8 0D       		.uleb128 0xd
 1399 03f9 01       		.byte	0x1
 1400 03fa 50       		.byte	0x50
 1401 03fb 01       		.byte	0x1
 1402 03fc 30       		.byte	0x30
 1403 03fd 00       		.byte	0
 1404 03fe 00       		.byte	0
 1405 03ff 16       		.uleb128 0x16
 1406 0400 01       		.byte	0x1
 1407 0401 45020000 		.4byte	.LASF49
 1408 0405 01       		.byte	0x1
 1409 0406 B302     		.2byte	0x2b3
 1410 0408 01       		.byte	0x1
 1411 0409 90000000 		.4byte	0x90
 1412 040d 00000000 		.4byte	.LFB15
 1413 0411 54000000 		.4byte	.LFE15
 1414 0415 20030000 		.4byte	.LLST22
 1415 0419 01       		.byte	0x1
 1416 041a 5E040000 		.4byte	0x45e
 1417 041e 13       		.uleb128 0x13
 1418 041f 0A030000 		.4byte	.LASF35
 1419 0423 01       		.byte	0x1
 1420 0424 B302     		.2byte	0x2b3
 1421 0426 85000000 		.4byte	0x85
 1422 042a 40030000 		.4byte	.LLST23
 1423 042e 13       		.uleb128 0x13
 1424 042f 3B030000 		.4byte	.LASF50
 1425 0433 01       		.byte	0x1
 1426 0434 B302     		.2byte	0x2b3
 1427 0436 90000000 		.4byte	0x90
 1428 043a 82030000 		.4byte	.LLST24
 1429 043e 14       		.uleb128 0x14
 1430 043f B6010000 		.4byte	.LASF51
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 41


 1431 0443 01       		.byte	0x1
 1432 0444 B502     		.2byte	0x2b5
 1433 0446 90000000 		.4byte	0x90
 1434 044a DD030000 		.4byte	.LLST25
 1435 044e 0E       		.uleb128 0xe
 1436 044f 46000000 		.4byte	.LVL55
 1437 0453 E2050000 		.4byte	0x5e2
 1438 0457 0D       		.uleb128 0xd
 1439 0458 01       		.byte	0x1
 1440 0459 50       		.byte	0x50
 1441 045a 01       		.byte	0x1
 1442 045b 30       		.byte	0x30
 1443 045c 00       		.byte	0
 1444 045d 00       		.byte	0
 1445 045e 16       		.uleb128 0x16
 1446 045f 01       		.byte	0x1
 1447 0460 94000000 		.4byte	.LASF52
 1448 0464 01       		.byte	0x1
 1449 0465 E902     		.2byte	0x2e9
 1450 0467 01       		.byte	0x1
 1451 0468 9B000000 		.4byte	0x9b
 1452 046c 00000000 		.4byte	.LFB16
 1453 0470 48000000 		.4byte	.LFE16
 1454 0474 F8030000 		.4byte	.LLST26
 1455 0478 01       		.byte	0x1
 1456 0479 BD040000 		.4byte	0x4bd
 1457 047d 13       		.uleb128 0x13
 1458 047e 0A030000 		.4byte	.LASF35
 1459 0482 01       		.byte	0x1
 1460 0483 E902     		.2byte	0x2e9
 1461 0485 85000000 		.4byte	0x85
 1462 0489 18040000 		.4byte	.LLST27
 1463 048d 13       		.uleb128 0x13
 1464 048e 3B030000 		.4byte	.LASF50
 1465 0492 01       		.byte	0x1
 1466 0493 E902     		.2byte	0x2e9
 1467 0495 90000000 		.4byte	0x90
 1468 0499 44040000 		.4byte	.LLST28
 1469 049d 14       		.uleb128 0x14
 1470 049e 11010000 		.4byte	.LASF53
 1471 04a2 01       		.byte	0x1
 1472 04a3 EB02     		.2byte	0x2eb
 1473 04a5 BF000000 		.4byte	0xbf
 1474 04a9 70040000 		.4byte	.LLST29
 1475 04ad 0E       		.uleb128 0xe
 1476 04ae 10000000 		.4byte	.LVL58
 1477 04b2 E2050000 		.4byte	0x5e2
 1478 04b6 0D       		.uleb128 0xd
 1479 04b7 01       		.byte	0x1
 1480 04b8 50       		.byte	0x50
 1481 04b9 01       		.byte	0x1
 1482 04ba 30       		.byte	0x30
 1483 04bb 00       		.byte	0
 1484 04bc 00       		.byte	0
 1485 04bd 16       		.uleb128 0x16
 1486 04be 01       		.byte	0x1
 1487 04bf 16000000 		.4byte	.LASF54
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 42


 1488 04c3 01       		.byte	0x1
 1489 04c4 1603     		.2byte	0x316
 1490 04c6 01       		.byte	0x1
 1491 04c7 A6000000 		.4byte	0xa6
 1492 04cb 00000000 		.4byte	.LFB17
 1493 04cf 48000000 		.4byte	.LFE17
 1494 04d3 9C040000 		.4byte	.LLST30
 1495 04d7 01       		.byte	0x1
 1496 04d8 18050000 		.4byte	0x518
 1497 04dc 13       		.uleb128 0x13
 1498 04dd 0A030000 		.4byte	.LASF35
 1499 04e1 01       		.byte	0x1
 1500 04e2 1603     		.2byte	0x316
 1501 04e4 85000000 		.4byte	0x85
 1502 04e8 BC040000 		.4byte	.LLST31
 1503 04ec 13       		.uleb128 0x13
 1504 04ed 3B030000 		.4byte	.LASF50
 1505 04f1 01       		.byte	0x1
 1506 04f2 1603     		.2byte	0x316
 1507 04f4 90000000 		.4byte	0x90
 1508 04f8 E8040000 		.4byte	.LLST32
 1509 04fc 17       		.uleb128 0x17
 1510 04fd 39010000 		.4byte	.LASF55
 1511 0501 01       		.byte	0x1
 1512 0502 1803     		.2byte	0x318
 1513 0504 A6000000 		.4byte	0xa6
 1514 0508 0E       		.uleb128 0xe
 1515 0509 10000000 		.4byte	.LVL67
 1516 050d E2050000 		.4byte	0x5e2
 1517 0511 0D       		.uleb128 0xd
 1518 0512 01       		.byte	0x1
 1519 0513 50       		.byte	0x50
 1520 0514 01       		.byte	0x1
 1521 0515 30       		.byte	0x30
 1522 0516 00       		.byte	0
 1523 0517 00       		.byte	0
 1524 0518 18       		.uleb128 0x18
 1525 0519 85000000 		.4byte	0x85
 1526 051d 28050000 		.4byte	0x528
 1527 0521 19       		.uleb128 0x19
 1528 0522 F5000000 		.4byte	0xf5
 1529 0526 00       		.byte	0
 1530 0527 00       		.byte	0
 1531 0528 1A       		.uleb128 0x1a
 1532 0529 21030000 		.4byte	.LASF56
 1533 052d 01       		.byte	0x1
 1534 052e 22       		.byte	0x22
 1535 052f 33050000 		.4byte	0x533
 1536 0533 1B       		.uleb128 0x1b
 1537 0534 18050000 		.4byte	0x518
 1538 0538 1C       		.uleb128 0x1c
 1539 0539 DF000000 		.4byte	.LASF57
 1540 053d 01       		.byte	0x1
 1541 053e 19       		.byte	0x19
 1542 053f 6F000000 		.4byte	0x6f
 1543 0543 01       		.byte	0x1
 1544 0544 05       		.byte	0x5
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 43


 1545 0545 03       		.byte	0x3
 1546 0546 00000000 		.4byte	ADC_initVar
 1547 054a 18       		.uleb128 0x18
 1548 054b 90000000 		.4byte	0x90
 1549 054f 5A050000 		.4byte	0x55a
 1550 0553 19       		.uleb128 0x19
 1551 0554 F5000000 		.4byte	0xf5
 1552 0558 00       		.byte	0
 1553 0559 00       		.byte	0
 1554 055a 1C       		.uleb128 0x1c
 1555 055b E6020000 		.4byte	.LASF58
 1556 055f 01       		.byte	0x1
 1557 0560 1A       		.byte	0x1a
 1558 0561 6C050000 		.4byte	0x56c
 1559 0565 01       		.byte	0x1
 1560 0566 05       		.byte	0x5
 1561 0567 03       		.byte	0x3
 1562 0568 00000000 		.4byte	ADC_offset
 1563 056c 05       		.uleb128 0x5
 1564 056d 4A050000 		.4byte	0x54a
 1565 0571 18       		.uleb128 0x18
 1566 0572 9B000000 		.4byte	0x9b
 1567 0576 81050000 		.4byte	0x581
 1568 057a 19       		.uleb128 0x19
 1569 057b F5000000 		.4byte	0xf5
 1570 057f 00       		.byte	0
 1571 0580 00       		.byte	0
 1572 0581 1C       		.uleb128 0x1c
 1573 0582 A8000000 		.4byte	.LASF59
 1574 0586 01       		.byte	0x1
 1575 0587 1B       		.byte	0x1b
 1576 0588 93050000 		.4byte	0x593
 1577 058c 01       		.byte	0x1
 1578 058d 05       		.byte	0x5
 1579 058e 03       		.byte	0x3
 1580 058f 00000000 		.4byte	ADC_countsPer10Volt
 1581 0593 05       		.uleb128 0x5
 1582 0594 71050000 		.4byte	0x571
 1583 0598 1D       		.uleb128 0x1d
 1584 0599 01       		.byte	0x1
 1585 059a 08020000 		.4byte	.LASF60
 1586 059e 03       		.byte	0x3
 1587 059f 5B       		.byte	0x5b
 1588 05a0 01       		.byte	0x1
 1589 05a1 01       		.byte	0x1
 1590 05a2 B1050000 		.4byte	0x5b1
 1591 05a6 1E       		.uleb128 0x1e
 1592 05a7 6F000000 		.4byte	0x6f
 1593 05ab 1E       		.uleb128 0x1e
 1594 05ac 6F000000 		.4byte	0x6f
 1595 05b0 00       		.byte	0
 1596 05b1 1F       		.uleb128 0x1f
 1597 05b2 01       		.byte	0x1
 1598 05b3 97010000 		.4byte	.LASF65
 1599 05b7 03       		.byte	0x3
 1600 05b8 58       		.byte	0x58
 1601 05b9 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 44


 1602 05ba E1000000 		.4byte	0xe1
 1603 05be 01       		.byte	0x1
 1604 05bf CE050000 		.4byte	0x5ce
 1605 05c3 1E       		.uleb128 0x1e
 1606 05c4 6F000000 		.4byte	0x6f
 1607 05c8 1E       		.uleb128 0x1e
 1608 05c9 E1000000 		.4byte	0xe1
 1609 05cd 00       		.byte	0
 1610 05ce 1D       		.uleb128 0x1d
 1611 05cf 01       		.byte	0x1
 1612 05d0 C2000000 		.4byte	.LASF61
 1613 05d4 03       		.byte	0x3
 1614 05d5 6A       		.byte	0x6a
 1615 05d6 01       		.byte	0x1
 1616 05d7 01       		.byte	0x1
 1617 05d8 E2050000 		.4byte	0x5e2
 1618 05dc 1E       		.uleb128 0x1e
 1619 05dd 7A000000 		.4byte	0x7a
 1620 05e1 00       		.byte	0
 1621 05e2 20       		.uleb128 0x20
 1622 05e3 01       		.byte	0x1
 1623 05e4 B2020000 		.4byte	.LASF66
 1624 05e8 03       		.byte	0x3
 1625 05e9 72       		.byte	0x72
 1626 05ea 01       		.byte	0x1
 1627 05eb 01       		.byte	0x1
 1628 05ec 1E       		.uleb128 0x1e
 1629 05ed 6F000000 		.4byte	0x6f
 1630 05f1 00       		.byte	0
 1631 05f2 00       		.byte	0
 1632              		.section	.debug_abbrev,"",%progbits
 1633              	.Ldebug_abbrev0:
 1634 0000 01       		.uleb128 0x1
 1635 0001 11       		.uleb128 0x11
 1636 0002 01       		.byte	0x1
 1637 0003 25       		.uleb128 0x25
 1638 0004 0E       		.uleb128 0xe
 1639 0005 13       		.uleb128 0x13
 1640 0006 0B       		.uleb128 0xb
 1641 0007 03       		.uleb128 0x3
 1642 0008 0E       		.uleb128 0xe
 1643 0009 1B       		.uleb128 0x1b
 1644 000a 0E       		.uleb128 0xe
 1645 000b 55       		.uleb128 0x55
 1646 000c 06       		.uleb128 0x6
 1647 000d 11       		.uleb128 0x11
 1648 000e 01       		.uleb128 0x1
 1649 000f 52       		.uleb128 0x52
 1650 0010 01       		.uleb128 0x1
 1651 0011 10       		.uleb128 0x10
 1652 0012 06       		.uleb128 0x6
 1653 0013 00       		.byte	0
 1654 0014 00       		.byte	0
 1655 0015 02       		.uleb128 0x2
 1656 0016 24       		.uleb128 0x24
 1657 0017 00       		.byte	0
 1658 0018 0B       		.uleb128 0xb
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 45


 1659 0019 0B       		.uleb128 0xb
 1660 001a 3E       		.uleb128 0x3e
 1661 001b 0B       		.uleb128 0xb
 1662 001c 03       		.uleb128 0x3
 1663 001d 0E       		.uleb128 0xe
 1664 001e 00       		.byte	0
 1665 001f 00       		.byte	0
 1666 0020 03       		.uleb128 0x3
 1667 0021 24       		.uleb128 0x24
 1668 0022 00       		.byte	0
 1669 0023 0B       		.uleb128 0xb
 1670 0024 0B       		.uleb128 0xb
 1671 0025 3E       		.uleb128 0x3e
 1672 0026 0B       		.uleb128 0xb
 1673 0027 03       		.uleb128 0x3
 1674 0028 08       		.uleb128 0x8
 1675 0029 00       		.byte	0
 1676 002a 00       		.byte	0
 1677 002b 04       		.uleb128 0x4
 1678 002c 16       		.uleb128 0x16
 1679 002d 00       		.byte	0
 1680 002e 03       		.uleb128 0x3
 1681 002f 0E       		.uleb128 0xe
 1682 0030 3A       		.uleb128 0x3a
 1683 0031 0B       		.uleb128 0xb
 1684 0032 3B       		.uleb128 0x3b
 1685 0033 0B       		.uleb128 0xb
 1686 0034 49       		.uleb128 0x49
 1687 0035 13       		.uleb128 0x13
 1688 0036 00       		.byte	0
 1689 0037 00       		.byte	0
 1690 0038 05       		.uleb128 0x5
 1691 0039 35       		.uleb128 0x35
 1692 003a 00       		.byte	0
 1693 003b 49       		.uleb128 0x49
 1694 003c 13       		.uleb128 0x13
 1695 003d 00       		.byte	0
 1696 003e 00       		.byte	0
 1697 003f 06       		.uleb128 0x6
 1698 0040 16       		.uleb128 0x16
 1699 0041 00       		.byte	0
 1700 0042 03       		.uleb128 0x3
 1701 0043 0E       		.uleb128 0xe
 1702 0044 3A       		.uleb128 0x3a
 1703 0045 0B       		.uleb128 0xb
 1704 0046 3B       		.uleb128 0x3b
 1705 0047 05       		.uleb128 0x5
 1706 0048 49       		.uleb128 0x49
 1707 0049 13       		.uleb128 0x13
 1708 004a 00       		.byte	0
 1709 004b 00       		.byte	0
 1710 004c 07       		.uleb128 0x7
 1711 004d 0F       		.uleb128 0xf
 1712 004e 00       		.byte	0
 1713 004f 0B       		.uleb128 0xb
 1714 0050 0B       		.uleb128 0xb
 1715 0051 49       		.uleb128 0x49
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 46


 1716 0052 13       		.uleb128 0x13
 1717 0053 00       		.byte	0
 1718 0054 00       		.byte	0
 1719 0055 08       		.uleb128 0x8
 1720 0056 15       		.uleb128 0x15
 1721 0057 00       		.byte	0
 1722 0058 27       		.uleb128 0x27
 1723 0059 0C       		.uleb128 0xc
 1724 005a 00       		.byte	0
 1725 005b 00       		.byte	0
 1726 005c 09       		.uleb128 0x9
 1727 005d 2E       		.uleb128 0x2e
 1728 005e 01       		.byte	0x1
 1729 005f 3F       		.uleb128 0x3f
 1730 0060 0C       		.uleb128 0xc
 1731 0061 03       		.uleb128 0x3
 1732 0062 0E       		.uleb128 0xe
 1733 0063 3A       		.uleb128 0x3a
 1734 0064 0B       		.uleb128 0xb
 1735 0065 3B       		.uleb128 0x3b
 1736 0066 0B       		.uleb128 0xb
 1737 0067 27       		.uleb128 0x27
 1738 0068 0C       		.uleb128 0xc
 1739 0069 11       		.uleb128 0x11
 1740 006a 01       		.uleb128 0x1
 1741 006b 12       		.uleb128 0x12
 1742 006c 01       		.uleb128 0x1
 1743 006d 40       		.uleb128 0x40
 1744 006e 06       		.uleb128 0x6
 1745 006f 9742     		.uleb128 0x2117
 1746 0071 0C       		.uleb128 0xc
 1747 0072 01       		.uleb128 0x1
 1748 0073 13       		.uleb128 0x13
 1749 0074 00       		.byte	0
 1750 0075 00       		.byte	0
 1751 0076 0A       		.uleb128 0xa
 1752 0077 34       		.uleb128 0x34
 1753 0078 00       		.byte	0
 1754 0079 03       		.uleb128 0x3
 1755 007a 0E       		.uleb128 0xe
 1756 007b 3A       		.uleb128 0x3a
 1757 007c 0B       		.uleb128 0xb
 1758 007d 3B       		.uleb128 0x3b
 1759 007e 0B       		.uleb128 0xb
 1760 007f 49       		.uleb128 0x49
 1761 0080 13       		.uleb128 0x13
 1762 0081 02       		.uleb128 0x2
 1763 0082 06       		.uleb128 0x6
 1764 0083 00       		.byte	0
 1765 0084 00       		.byte	0
 1766 0085 0B       		.uleb128 0xb
 1767 0086 34       		.uleb128 0x34
 1768 0087 00       		.byte	0
 1769 0088 03       		.uleb128 0x3
 1770 0089 0E       		.uleb128 0xe
 1771 008a 3A       		.uleb128 0x3a
 1772 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 47


 1773 008c 3B       		.uleb128 0x3b
 1774 008d 0B       		.uleb128 0xb
 1775 008e 49       		.uleb128 0x49
 1776 008f 13       		.uleb128 0x13
 1777 0090 1C       		.uleb128 0x1c
 1778 0091 05       		.uleb128 0x5
 1779 0092 00       		.byte	0
 1780 0093 00       		.byte	0
 1781 0094 0C       		.uleb128 0xc
 1782 0095 898201   		.uleb128 0x4109
 1783 0098 01       		.byte	0x1
 1784 0099 11       		.uleb128 0x11
 1785 009a 01       		.uleb128 0x1
 1786 009b 31       		.uleb128 0x31
 1787 009c 13       		.uleb128 0x13
 1788 009d 01       		.uleb128 0x1
 1789 009e 13       		.uleb128 0x13
 1790 009f 00       		.byte	0
 1791 00a0 00       		.byte	0
 1792 00a1 0D       		.uleb128 0xd
 1793 00a2 8A8201   		.uleb128 0x410a
 1794 00a5 00       		.byte	0
 1795 00a6 02       		.uleb128 0x2
 1796 00a7 0A       		.uleb128 0xa
 1797 00a8 9142     		.uleb128 0x2111
 1798 00aa 0A       		.uleb128 0xa
 1799 00ab 00       		.byte	0
 1800 00ac 00       		.byte	0
 1801 00ad 0E       		.uleb128 0xe
 1802 00ae 898201   		.uleb128 0x4109
 1803 00b1 01       		.byte	0x1
 1804 00b2 11       		.uleb128 0x11
 1805 00b3 01       		.uleb128 0x1
 1806 00b4 31       		.uleb128 0x31
 1807 00b5 13       		.uleb128 0x13
 1808 00b6 00       		.byte	0
 1809 00b7 00       		.byte	0
 1810 00b8 0F       		.uleb128 0xf
 1811 00b9 2E       		.uleb128 0x2e
 1812 00ba 01       		.byte	0x1
 1813 00bb 3F       		.uleb128 0x3f
 1814 00bc 0C       		.uleb128 0xc
 1815 00bd 03       		.uleb128 0x3
 1816 00be 0E       		.uleb128 0xe
 1817 00bf 3A       		.uleb128 0x3a
 1818 00c0 0B       		.uleb128 0xb
 1819 00c1 3B       		.uleb128 0x3b
 1820 00c2 05       		.uleb128 0x5
 1821 00c3 27       		.uleb128 0x27
 1822 00c4 0C       		.uleb128 0xc
 1823 00c5 11       		.uleb128 0x11
 1824 00c6 01       		.uleb128 0x1
 1825 00c7 12       		.uleb128 0x12
 1826 00c8 01       		.uleb128 0x1
 1827 00c9 40       		.uleb128 0x40
 1828 00ca 06       		.uleb128 0x6
 1829 00cb 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 48


 1830 00cd 0C       		.uleb128 0xc
 1831 00ce 01       		.uleb128 0x1
 1832 00cf 13       		.uleb128 0x13
 1833 00d0 00       		.byte	0
 1834 00d1 00       		.byte	0
 1835 00d2 10       		.uleb128 0x10
 1836 00d3 898201   		.uleb128 0x4109
 1837 00d6 00       		.byte	0
 1838 00d7 11       		.uleb128 0x11
 1839 00d8 01       		.uleb128 0x1
 1840 00d9 31       		.uleb128 0x31
 1841 00da 13       		.uleb128 0x13
 1842 00db 00       		.byte	0
 1843 00dc 00       		.byte	0
 1844 00dd 11       		.uleb128 0x11
 1845 00de 2E       		.uleb128 0x2e
 1846 00df 00       		.byte	0
 1847 00e0 3F       		.uleb128 0x3f
 1848 00e1 0C       		.uleb128 0xc
 1849 00e2 03       		.uleb128 0x3
 1850 00e3 0E       		.uleb128 0xe
 1851 00e4 3A       		.uleb128 0x3a
 1852 00e5 0B       		.uleb128 0xb
 1853 00e6 3B       		.uleb128 0x3b
 1854 00e7 05       		.uleb128 0x5
 1855 00e8 27       		.uleb128 0x27
 1856 00e9 0C       		.uleb128 0xc
 1857 00ea 11       		.uleb128 0x11
 1858 00eb 01       		.uleb128 0x1
 1859 00ec 12       		.uleb128 0x12
 1860 00ed 01       		.uleb128 0x1
 1861 00ee 40       		.uleb128 0x40
 1862 00ef 0A       		.uleb128 0xa
 1863 00f0 9742     		.uleb128 0x2117
 1864 00f2 0C       		.uleb128 0xc
 1865 00f3 00       		.byte	0
 1866 00f4 00       		.byte	0
 1867 00f5 12       		.uleb128 0x12
 1868 00f6 2E       		.uleb128 0x2e
 1869 00f7 01       		.byte	0x1
 1870 00f8 3F       		.uleb128 0x3f
 1871 00f9 0C       		.uleb128 0xc
 1872 00fa 03       		.uleb128 0x3
 1873 00fb 0E       		.uleb128 0xe
 1874 00fc 3A       		.uleb128 0x3a
 1875 00fd 0B       		.uleb128 0xb
 1876 00fe 3B       		.uleb128 0x3b
 1877 00ff 05       		.uleb128 0x5
 1878 0100 27       		.uleb128 0x27
 1879 0101 0C       		.uleb128 0xc
 1880 0102 49       		.uleb128 0x49
 1881 0103 13       		.uleb128 0x13
 1882 0104 11       		.uleb128 0x11
 1883 0105 01       		.uleb128 0x1
 1884 0106 12       		.uleb128 0x12
 1885 0107 01       		.uleb128 0x1
 1886 0108 40       		.uleb128 0x40
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 49


 1887 0109 06       		.uleb128 0x6
 1888 010a 9742     		.uleb128 0x2117
 1889 010c 0C       		.uleb128 0xc
 1890 010d 01       		.uleb128 0x1
 1891 010e 13       		.uleb128 0x13
 1892 010f 00       		.byte	0
 1893 0110 00       		.byte	0
 1894 0111 13       		.uleb128 0x13
 1895 0112 05       		.uleb128 0x5
 1896 0113 00       		.byte	0
 1897 0114 03       		.uleb128 0x3
 1898 0115 0E       		.uleb128 0xe
 1899 0116 3A       		.uleb128 0x3a
 1900 0117 0B       		.uleb128 0xb
 1901 0118 3B       		.uleb128 0x3b
 1902 0119 05       		.uleb128 0x5
 1903 011a 49       		.uleb128 0x49
 1904 011b 13       		.uleb128 0x13
 1905 011c 02       		.uleb128 0x2
 1906 011d 06       		.uleb128 0x6
 1907 011e 00       		.byte	0
 1908 011f 00       		.byte	0
 1909 0120 14       		.uleb128 0x14
 1910 0121 34       		.uleb128 0x34
 1911 0122 00       		.byte	0
 1912 0123 03       		.uleb128 0x3
 1913 0124 0E       		.uleb128 0xe
 1914 0125 3A       		.uleb128 0x3a
 1915 0126 0B       		.uleb128 0xb
 1916 0127 3B       		.uleb128 0x3b
 1917 0128 05       		.uleb128 0x5
 1918 0129 49       		.uleb128 0x49
 1919 012a 13       		.uleb128 0x13
 1920 012b 02       		.uleb128 0x2
 1921 012c 06       		.uleb128 0x6
 1922 012d 00       		.byte	0
 1923 012e 00       		.byte	0
 1924 012f 15       		.uleb128 0x15
 1925 0130 2E       		.uleb128 0x2e
 1926 0131 01       		.byte	0x1
 1927 0132 3F       		.uleb128 0x3f
 1928 0133 0C       		.uleb128 0xc
 1929 0134 03       		.uleb128 0x3
 1930 0135 0E       		.uleb128 0xe
 1931 0136 3A       		.uleb128 0x3a
 1932 0137 0B       		.uleb128 0xb
 1933 0138 3B       		.uleb128 0x3b
 1934 0139 05       		.uleb128 0x5
 1935 013a 27       		.uleb128 0x27
 1936 013b 0C       		.uleb128 0xc
 1937 013c 11       		.uleb128 0x11
 1938 013d 01       		.uleb128 0x1
 1939 013e 12       		.uleb128 0x12
 1940 013f 01       		.uleb128 0x1
 1941 0140 40       		.uleb128 0x40
 1942 0141 0A       		.uleb128 0xa
 1943 0142 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 50


 1944 0144 0C       		.uleb128 0xc
 1945 0145 01       		.uleb128 0x1
 1946 0146 13       		.uleb128 0x13
 1947 0147 00       		.byte	0
 1948 0148 00       		.byte	0
 1949 0149 16       		.uleb128 0x16
 1950 014a 2E       		.uleb128 0x2e
 1951 014b 01       		.byte	0x1
 1952 014c 3F       		.uleb128 0x3f
 1953 014d 0C       		.uleb128 0xc
 1954 014e 03       		.uleb128 0x3
 1955 014f 0E       		.uleb128 0xe
 1956 0150 3A       		.uleb128 0x3a
 1957 0151 0B       		.uleb128 0xb
 1958 0152 3B       		.uleb128 0x3b
 1959 0153 05       		.uleb128 0x5
 1960 0154 27       		.uleb128 0x27
 1961 0155 0C       		.uleb128 0xc
 1962 0156 49       		.uleb128 0x49
 1963 0157 13       		.uleb128 0x13
 1964 0158 11       		.uleb128 0x11
 1965 0159 01       		.uleb128 0x1
 1966 015a 12       		.uleb128 0x12
 1967 015b 01       		.uleb128 0x1
 1968 015c 40       		.uleb128 0x40
 1969 015d 06       		.uleb128 0x6
 1970 015e 9642     		.uleb128 0x2116
 1971 0160 0C       		.uleb128 0xc
 1972 0161 01       		.uleb128 0x1
 1973 0162 13       		.uleb128 0x13
 1974 0163 00       		.byte	0
 1975 0164 00       		.byte	0
 1976 0165 17       		.uleb128 0x17
 1977 0166 34       		.uleb128 0x34
 1978 0167 00       		.byte	0
 1979 0168 03       		.uleb128 0x3
 1980 0169 0E       		.uleb128 0xe
 1981 016a 3A       		.uleb128 0x3a
 1982 016b 0B       		.uleb128 0xb
 1983 016c 3B       		.uleb128 0x3b
 1984 016d 05       		.uleb128 0x5
 1985 016e 49       		.uleb128 0x49
 1986 016f 13       		.uleb128 0x13
 1987 0170 00       		.byte	0
 1988 0171 00       		.byte	0
 1989 0172 18       		.uleb128 0x18
 1990 0173 01       		.uleb128 0x1
 1991 0174 01       		.byte	0x1
 1992 0175 49       		.uleb128 0x49
 1993 0176 13       		.uleb128 0x13
 1994 0177 01       		.uleb128 0x1
 1995 0178 13       		.uleb128 0x13
 1996 0179 00       		.byte	0
 1997 017a 00       		.byte	0
 1998 017b 19       		.uleb128 0x19
 1999 017c 21       		.uleb128 0x21
 2000 017d 00       		.byte	0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 51


 2001 017e 49       		.uleb128 0x49
 2002 017f 13       		.uleb128 0x13
 2003 0180 2F       		.uleb128 0x2f
 2004 0181 0B       		.uleb128 0xb
 2005 0182 00       		.byte	0
 2006 0183 00       		.byte	0
 2007 0184 1A       		.uleb128 0x1a
 2008 0185 34       		.uleb128 0x34
 2009 0186 00       		.byte	0
 2010 0187 03       		.uleb128 0x3
 2011 0188 0E       		.uleb128 0xe
 2012 0189 3A       		.uleb128 0x3a
 2013 018a 0B       		.uleb128 0xb
 2014 018b 3B       		.uleb128 0x3b
 2015 018c 0B       		.uleb128 0xb
 2016 018d 49       		.uleb128 0x49
 2017 018e 13       		.uleb128 0x13
 2018 018f 00       		.byte	0
 2019 0190 00       		.byte	0
 2020 0191 1B       		.uleb128 0x1b
 2021 0192 26       		.uleb128 0x26
 2022 0193 00       		.byte	0
 2023 0194 49       		.uleb128 0x49
 2024 0195 13       		.uleb128 0x13
 2025 0196 00       		.byte	0
 2026 0197 00       		.byte	0
 2027 0198 1C       		.uleb128 0x1c
 2028 0199 34       		.uleb128 0x34
 2029 019a 00       		.byte	0
 2030 019b 03       		.uleb128 0x3
 2031 019c 0E       		.uleb128 0xe
 2032 019d 3A       		.uleb128 0x3a
 2033 019e 0B       		.uleb128 0xb
 2034 019f 3B       		.uleb128 0x3b
 2035 01a0 0B       		.uleb128 0xb
 2036 01a1 49       		.uleb128 0x49
 2037 01a2 13       		.uleb128 0x13
 2038 01a3 3F       		.uleb128 0x3f
 2039 01a4 0C       		.uleb128 0xc
 2040 01a5 02       		.uleb128 0x2
 2041 01a6 0A       		.uleb128 0xa
 2042 01a7 00       		.byte	0
 2043 01a8 00       		.byte	0
 2044 01a9 1D       		.uleb128 0x1d
 2045 01aa 2E       		.uleb128 0x2e
 2046 01ab 01       		.byte	0x1
 2047 01ac 3F       		.uleb128 0x3f
 2048 01ad 0C       		.uleb128 0xc
 2049 01ae 03       		.uleb128 0x3
 2050 01af 0E       		.uleb128 0xe
 2051 01b0 3A       		.uleb128 0x3a
 2052 01b1 0B       		.uleb128 0xb
 2053 01b2 3B       		.uleb128 0x3b
 2054 01b3 0B       		.uleb128 0xb
 2055 01b4 27       		.uleb128 0x27
 2056 01b5 0C       		.uleb128 0xc
 2057 01b6 3C       		.uleb128 0x3c
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 52


 2058 01b7 0C       		.uleb128 0xc
 2059 01b8 01       		.uleb128 0x1
 2060 01b9 13       		.uleb128 0x13
 2061 01ba 00       		.byte	0
 2062 01bb 00       		.byte	0
 2063 01bc 1E       		.uleb128 0x1e
 2064 01bd 05       		.uleb128 0x5
 2065 01be 00       		.byte	0
 2066 01bf 49       		.uleb128 0x49
 2067 01c0 13       		.uleb128 0x13
 2068 01c1 00       		.byte	0
 2069 01c2 00       		.byte	0
 2070 01c3 1F       		.uleb128 0x1f
 2071 01c4 2E       		.uleb128 0x2e
 2072 01c5 01       		.byte	0x1
 2073 01c6 3F       		.uleb128 0x3f
 2074 01c7 0C       		.uleb128 0xc
 2075 01c8 03       		.uleb128 0x3
 2076 01c9 0E       		.uleb128 0xe
 2077 01ca 3A       		.uleb128 0x3a
 2078 01cb 0B       		.uleb128 0xb
 2079 01cc 3B       		.uleb128 0x3b
 2080 01cd 0B       		.uleb128 0xb
 2081 01ce 27       		.uleb128 0x27
 2082 01cf 0C       		.uleb128 0xc
 2083 01d0 49       		.uleb128 0x49
 2084 01d1 13       		.uleb128 0x13
 2085 01d2 3C       		.uleb128 0x3c
 2086 01d3 0C       		.uleb128 0xc
 2087 01d4 01       		.uleb128 0x1
 2088 01d5 13       		.uleb128 0x13
 2089 01d6 00       		.byte	0
 2090 01d7 00       		.byte	0
 2091 01d8 20       		.uleb128 0x20
 2092 01d9 2E       		.uleb128 0x2e
 2093 01da 01       		.byte	0x1
 2094 01db 3F       		.uleb128 0x3f
 2095 01dc 0C       		.uleb128 0xc
 2096 01dd 03       		.uleb128 0x3
 2097 01de 0E       		.uleb128 0xe
 2098 01df 3A       		.uleb128 0x3a
 2099 01e0 0B       		.uleb128 0xb
 2100 01e1 3B       		.uleb128 0x3b
 2101 01e2 0B       		.uleb128 0xb
 2102 01e3 27       		.uleb128 0x27
 2103 01e4 0C       		.uleb128 0xc
 2104 01e5 3C       		.uleb128 0x3c
 2105 01e6 0C       		.uleb128 0xc
 2106 01e7 00       		.byte	0
 2107 01e8 00       		.byte	0
 2108 01e9 00       		.byte	0
 2109              		.section	.debug_loc,"",%progbits
 2110              	.Ldebug_loc0:
 2111              	.LLST0:
 2112 0000 00000000 		.4byte	.LFB1
 2113 0004 02000000 		.4byte	.LCFI0
 2114 0008 0200     		.2byte	0x2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 53


 2115 000a 7D       		.byte	0x7d
 2116 000b 00       		.sleb128 0
 2117 000c 02000000 		.4byte	.LCFI0
 2118 0010 CC000000 		.4byte	.LFE1
 2119 0014 0200     		.2byte	0x2
 2120 0016 7D       		.byte	0x7d
 2121 0017 08       		.sleb128 8
 2122 0018 00000000 		.4byte	0
 2123 001c 00000000 		.4byte	0
 2124              	.LLST1:
 2125 0020 60000000 		.4byte	.LVL4
 2126 0024 72000000 		.4byte	.LVL6
 2127 0028 0200     		.2byte	0x2
 2128 002a 30       		.byte	0x30
 2129 002b 9F       		.byte	0x9f
 2130 002c 72000000 		.4byte	.LVL6
 2131 0030 CC000000 		.4byte	.LFE1
 2132 0034 0200     		.2byte	0x2
 2133 0036 31       		.byte	0x31
 2134 0037 9F       		.byte	0x9f
 2135 0038 00000000 		.4byte	0
 2136 003c 00000000 		.4byte	0
 2137              	.LLST2:
 2138 0040 5C000000 		.4byte	.LVL2
 2139 0044 5E000000 		.4byte	.LVL3
 2140 0048 0100     		.2byte	0x1
 2141 004a 50       		.byte	0x50
 2142 004b 5E000000 		.4byte	.LVL3
 2143 004f 60000000 		.4byte	.LVL4
 2144 0053 0100     		.2byte	0x1
 2145 0055 52       		.byte	0x52
 2146 0056 60000000 		.4byte	.LVL4
 2147 005a CC000000 		.4byte	.LFE1
 2148 005e 0400     		.2byte	0x4
 2149 0060 0A       		.byte	0xa
 2150 0061 0004     		.2byte	0x400
 2151 0063 9F       		.byte	0x9f
 2152 0064 00000000 		.4byte	0
 2153 0068 00000000 		.4byte	0
 2154              	.LLST3:
 2155 006c 00000000 		.4byte	.LFB2
 2156 0070 02000000 		.4byte	.LCFI1
 2157 0074 0200     		.2byte	0x2
 2158 0076 7D       		.byte	0x7d
 2159 0077 00       		.sleb128 0
 2160 0078 02000000 		.4byte	.LCFI1
 2161 007c 1C000000 		.4byte	.LFE2
 2162 0080 0200     		.2byte	0x2
 2163 0082 7D       		.byte	0x7d
 2164 0083 08       		.sleb128 8
 2165 0084 00000000 		.4byte	0
 2166 0088 00000000 		.4byte	0
 2167              	.LLST4:
 2168 008c 00000000 		.4byte	.LFB0
 2169 0090 02000000 		.4byte	.LCFI2
 2170 0094 0200     		.2byte	0x2
 2171 0096 7D       		.byte	0x7d
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 54


 2172 0097 00       		.sleb128 0
 2173 0098 02000000 		.4byte	.LCFI2
 2174 009c 1C000000 		.4byte	.LFE0
 2175 00a0 0200     		.2byte	0x2
 2176 00a2 7D       		.byte	0x7d
 2177 00a3 08       		.sleb128 8
 2178 00a4 00000000 		.4byte	0
 2179 00a8 00000000 		.4byte	0
 2180              	.LLST5:
 2181 00ac 00000000 		.4byte	.LFB6
 2182 00b0 04000000 		.4byte	.LCFI3
 2183 00b4 0200     		.2byte	0x2
 2184 00b6 7D       		.byte	0x7d
 2185 00b7 00       		.sleb128 0
 2186 00b8 04000000 		.4byte	.LCFI3
 2187 00bc 2C000000 		.4byte	.LFE6
 2188 00c0 0200     		.2byte	0x2
 2189 00c2 7D       		.byte	0x7d
 2190 00c3 04       		.sleb128 4
 2191 00c4 00000000 		.4byte	0
 2192 00c8 00000000 		.4byte	0
 2193              	.LLST6:
 2194 00cc 00000000 		.4byte	.LVL10
 2195 00d0 06000000 		.4byte	.LVL11
 2196 00d4 0100     		.2byte	0x1
 2197 00d6 50       		.byte	0x50
 2198 00d7 06000000 		.4byte	.LVL11
 2199 00db 12000000 		.4byte	.LVL12
 2200 00df 0100     		.2byte	0x1
 2201 00e1 51       		.byte	0x51
 2202 00e2 12000000 		.4byte	.LVL12
 2203 00e6 2C000000 		.4byte	.LFE6
 2204 00ea 0400     		.2byte	0x4
 2205 00ec F3       		.byte	0xf3
 2206 00ed 01       		.uleb128 0x1
 2207 00ee 50       		.byte	0x50
 2208 00ef 9F       		.byte	0x9f
 2209 00f0 00000000 		.4byte	0
 2210 00f4 00000000 		.4byte	0
 2211              	.LLST7:
 2212 00f8 00000000 		.4byte	.LVL10
 2213 00fc 14000000 		.4byte	.LVL13
 2214 0100 0200     		.2byte	0x2
 2215 0102 30       		.byte	0x30
 2216 0103 9F       		.byte	0x9f
 2217 0104 14000000 		.4byte	.LVL13
 2218 0108 18000000 		.4byte	.LVL14
 2219 010c 0100     		.2byte	0x1
 2220 010e 50       		.byte	0x50
 2221 010f 1C000000 		.4byte	.LVL15
 2222 0113 26000000 		.4byte	.LVL16
 2223 0117 0100     		.2byte	0x1
 2224 0119 50       		.byte	0x50
 2225 011a 00000000 		.4byte	0
 2226 011e 00000000 		.4byte	0
 2227              	.LLST8:
 2228 0122 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 55


 2229 0126 02000000 		.4byte	.LCFI4
 2230 012a 0200     		.2byte	0x2
 2231 012c 7D       		.byte	0x7d
 2232 012d 00       		.sleb128 0
 2233 012e 02000000 		.4byte	.LCFI4
 2234 0132 20000000 		.4byte	.LFE7
 2235 0136 0200     		.2byte	0x2
 2236 0138 7D       		.byte	0x7d
 2237 0139 08       		.sleb128 8
 2238 013a 00000000 		.4byte	0
 2239 013e 00000000 		.4byte	0
 2240              	.LLST9:
 2241 0142 00000000 		.4byte	.LVL17
 2242 0146 0A000000 		.4byte	.LVL18
 2243 014a 0100     		.2byte	0x1
 2244 014c 50       		.byte	0x50
 2245 014d 0A000000 		.4byte	.LVL18
 2246 0151 12000000 		.4byte	.LVL20
 2247 0155 0400     		.2byte	0x4
 2248 0157 F3       		.byte	0xf3
 2249 0158 01       		.uleb128 0x1
 2250 0159 50       		.byte	0x50
 2251 015a 9F       		.byte	0x9f
 2252 015b 12000000 		.4byte	.LVL20
 2253 015f 14000000 		.4byte	.LVL21
 2254 0163 0100     		.2byte	0x1
 2255 0165 50       		.byte	0x50
 2256 0166 14000000 		.4byte	.LVL21
 2257 016a 20000000 		.4byte	.LFE7
 2258 016e 0400     		.2byte	0x4
 2259 0170 F3       		.byte	0xf3
 2260 0171 01       		.uleb128 0x1
 2261 0172 50       		.byte	0x50
 2262 0173 9F       		.byte	0x9f
 2263 0174 00000000 		.4byte	0
 2264 0178 00000000 		.4byte	0
 2265              	.LLST10:
 2266 017c 0A000000 		.4byte	.LVL18
 2267 0180 0E000000 		.4byte	.LVL19
 2268 0184 0700     		.2byte	0x7
 2269 0186 70       		.byte	0x70
 2270 0187 00       		.sleb128 0
 2271 0188 0A       		.byte	0xa
 2272 0189 FFFF     		.2byte	0xffff
 2273 018b 1A       		.byte	0x1a
 2274 018c 9F       		.byte	0x9f
 2275 018d 00000000 		.4byte	0
 2276 0191 00000000 		.4byte	0
 2277              	.LLST11:
 2278 0195 00000000 		.4byte	.LVL23
 2279 0199 06000000 		.4byte	.LVL24
 2280 019d 0100     		.2byte	0x1
 2281 019f 50       		.byte	0x50
 2282 01a0 06000000 		.4byte	.LVL24
 2283 01a4 10000000 		.4byte	.LFE8
 2284 01a8 0400     		.2byte	0x4
 2285 01aa F3       		.byte	0xf3
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 56


 2286 01ab 01       		.uleb128 0x1
 2287 01ac 50       		.byte	0x50
 2288 01ad 9F       		.byte	0x9f
 2289 01ae 00000000 		.4byte	0
 2290 01b2 00000000 		.4byte	0
 2291              	.LLST12:
 2292 01b6 00000000 		.4byte	.LVL25
 2293 01ba 04000000 		.4byte	.LVL26
 2294 01be 0100     		.2byte	0x1
 2295 01c0 50       		.byte	0x50
 2296 01c1 04000000 		.4byte	.LVL26
 2297 01c5 1C000000 		.4byte	.LFE9
 2298 01c9 0400     		.2byte	0x4
 2299 01cb F3       		.byte	0xf3
 2300 01cc 01       		.uleb128 0x1
 2301 01cd 50       		.byte	0x50
 2302 01ce 9F       		.byte	0x9f
 2303 01cf 00000000 		.4byte	0
 2304 01d3 00000000 		.4byte	0
 2305              	.LLST13:
 2306 01d7 00000000 		.4byte	.LVL27
 2307 01db 04000000 		.4byte	.LVL28
 2308 01df 0100     		.2byte	0x1
 2309 01e1 50       		.byte	0x50
 2310 01e2 04000000 		.4byte	.LVL28
 2311 01e6 18000000 		.4byte	.LFE10
 2312 01ea 0400     		.2byte	0x4
 2313 01ec F3       		.byte	0xf3
 2314 01ed 01       		.uleb128 0x1
 2315 01ee 50       		.byte	0x50
 2316 01ef 9F       		.byte	0x9f
 2317 01f0 00000000 		.4byte	0
 2318 01f4 00000000 		.4byte	0
 2319              	.LLST14:
 2320 01f8 00000000 		.4byte	.LVL29
 2321 01fc 06000000 		.4byte	.LVL30
 2322 0200 0100     		.2byte	0x1
 2323 0202 50       		.byte	0x50
 2324 0203 06000000 		.4byte	.LVL30
 2325 0207 10000000 		.4byte	.LFE11
 2326 020b 0400     		.2byte	0x4
 2327 020d F3       		.byte	0xf3
 2328 020e 01       		.uleb128 0x1
 2329 020f 50       		.byte	0x50
 2330 0210 9F       		.byte	0x9f
 2331 0211 00000000 		.4byte	0
 2332 0215 00000000 		.4byte	0
 2333              	.LLST15:
 2334 0219 00000000 		.4byte	.LVL31
 2335 021d 06000000 		.4byte	.LVL32
 2336 0221 0100     		.2byte	0x1
 2337 0223 50       		.byte	0x50
 2338 0224 06000000 		.4byte	.LVL32
 2339 0228 10000000 		.4byte	.LFE12
 2340 022c 0400     		.2byte	0x4
 2341 022e F3       		.byte	0xf3
 2342 022f 01       		.uleb128 0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 57


 2343 0230 50       		.byte	0x50
 2344 0231 9F       		.byte	0x9f
 2345 0232 00000000 		.4byte	0
 2346 0236 00000000 		.4byte	0
 2347              	.LLST16:
 2348 023a 00000000 		.4byte	.LFB13
 2349 023e 02000000 		.4byte	.LCFI5
 2350 0242 0200     		.2byte	0x2
 2351 0244 7D       		.byte	0x7d
 2352 0245 00       		.sleb128 0
 2353 0246 02000000 		.4byte	.LCFI5
 2354 024a 1C000000 		.4byte	.LFE13
 2355 024e 0200     		.2byte	0x2
 2356 0250 7D       		.byte	0x7d
 2357 0251 10       		.sleb128 16
 2358 0252 00000000 		.4byte	0
 2359 0256 00000000 		.4byte	0
 2360              	.LLST17:
 2361 025a 00000000 		.4byte	.LVL33
 2362 025e 0C000000 		.4byte	.LVL34
 2363 0262 0100     		.2byte	0x1
 2364 0264 50       		.byte	0x50
 2365 0265 0C000000 		.4byte	.LVL34
 2366 0269 16000000 		.4byte	.LVL36
 2367 026d 0100     		.2byte	0x1
 2368 026f 54       		.byte	0x54
 2369 0270 16000000 		.4byte	.LVL36
 2370 0274 1C000000 		.4byte	.LFE13
 2371 0278 0400     		.2byte	0x4
 2372 027a F3       		.byte	0xf3
 2373 027b 01       		.uleb128 0x1
 2374 027c 50       		.byte	0x50
 2375 027d 9F       		.byte	0x9f
 2376 027e 00000000 		.4byte	0
 2377 0282 00000000 		.4byte	0
 2378              	.LLST18:
 2379 0286 00000000 		.4byte	.LVL33
 2380 028a 0F000000 		.4byte	.LVL35-1
 2381 028e 0100     		.2byte	0x1
 2382 0290 51       		.byte	0x51
 2383 0291 0F000000 		.4byte	.LVL35-1
 2384 0295 1C000000 		.4byte	.LFE13
 2385 0299 0400     		.2byte	0x4
 2386 029b F3       		.byte	0xf3
 2387 029c 01       		.uleb128 0x1
 2388 029d 51       		.byte	0x51
 2389 029e 9F       		.byte	0x9f
 2390 029f 00000000 		.4byte	0
 2391 02a3 00000000 		.4byte	0
 2392              	.LLST19:
 2393 02a7 00000000 		.4byte	.LFB14
 2394 02ab 02000000 		.4byte	.LCFI6
 2395 02af 0200     		.2byte	0x2
 2396 02b1 7D       		.byte	0x7d
 2397 02b2 00       		.sleb128 0
 2398 02b3 02000000 		.4byte	.LCFI6
 2399 02b7 1C000000 		.4byte	.LFE14
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 58


 2400 02bb 0200     		.2byte	0x2
 2401 02bd 7D       		.byte	0x7d
 2402 02be 10       		.sleb128 16
 2403 02bf 00000000 		.4byte	0
 2404 02c3 00000000 		.4byte	0
 2405              	.LLST20:
 2406 02c7 00000000 		.4byte	.LVL37
 2407 02cb 0C000000 		.4byte	.LVL38
 2408 02cf 0100     		.2byte	0x1
 2409 02d1 50       		.byte	0x50
 2410 02d2 0C000000 		.4byte	.LVL38
 2411 02d6 16000000 		.4byte	.LVL40
 2412 02da 0100     		.2byte	0x1
 2413 02dc 54       		.byte	0x54
 2414 02dd 16000000 		.4byte	.LVL40
 2415 02e1 1C000000 		.4byte	.LFE14
 2416 02e5 0400     		.2byte	0x4
 2417 02e7 F3       		.byte	0xf3
 2418 02e8 01       		.uleb128 0x1
 2419 02e9 50       		.byte	0x50
 2420 02ea 9F       		.byte	0x9f
 2421 02eb 00000000 		.4byte	0
 2422 02ef 00000000 		.4byte	0
 2423              	.LLST21:
 2424 02f3 00000000 		.4byte	.LVL37
 2425 02f7 0F000000 		.4byte	.LVL39-1
 2426 02fb 0100     		.2byte	0x1
 2427 02fd 51       		.byte	0x51
 2428 02fe 0F000000 		.4byte	.LVL39-1
 2429 0302 16000000 		.4byte	.LVL41
 2430 0306 0100     		.2byte	0x1
 2431 0308 55       		.byte	0x55
 2432 0309 16000000 		.4byte	.LVL41
 2433 030d 1C000000 		.4byte	.LFE14
 2434 0311 0500     		.2byte	0x5
 2435 0313 73       		.byte	0x73
 2436 0314 00       		.sleb128 0
 2437 0315 70       		.byte	0x70
 2438 0316 00       		.sleb128 0
 2439 0317 22       		.byte	0x22
 2440 0318 00000000 		.4byte	0
 2441 031c 00000000 		.4byte	0
 2442              	.LLST22:
 2443 0320 00000000 		.4byte	.LFB15
 2444 0324 02000000 		.4byte	.LCFI7
 2445 0328 0200     		.2byte	0x2
 2446 032a 7D       		.byte	0x7d
 2447 032b 00       		.sleb128 0
 2448 032c 02000000 		.4byte	.LCFI7
 2449 0330 54000000 		.4byte	.LFE15
 2450 0334 0200     		.2byte	0x2
 2451 0336 7D       		.byte	0x7d
 2452 0337 10       		.sleb128 16
 2453 0338 00000000 		.4byte	0
 2454 033c 00000000 		.4byte	0
 2455              	.LLST23:
 2456 0340 00000000 		.4byte	.LVL42
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 59


 2457 0344 0A000000 		.4byte	.LVL43
 2458 0348 0100     		.2byte	0x1
 2459 034a 50       		.byte	0x50
 2460 034b 0A000000 		.4byte	.LVL43
 2461 034f 1C000000 		.4byte	.LVL45
 2462 0353 0100     		.2byte	0x1
 2463 0355 54       		.byte	0x54
 2464 0356 1C000000 		.4byte	.LVL45
 2465 035a 40000000 		.4byte	.LVL53
 2466 035e 0400     		.2byte	0x4
 2467 0360 F3       		.byte	0xf3
 2468 0361 01       		.uleb128 0x1
 2469 0362 50       		.byte	0x50
 2470 0363 9F       		.byte	0x9f
 2471 0364 40000000 		.4byte	.LVL53
 2472 0368 42000000 		.4byte	.LVL54
 2473 036c 0100     		.2byte	0x1
 2474 036e 50       		.byte	0x50
 2475 036f 42000000 		.4byte	.LVL54
 2476 0373 54000000 		.4byte	.LFE15
 2477 0377 0100     		.2byte	0x1
 2478 0379 54       		.byte	0x54
 2479 037a 00000000 		.4byte	0
 2480 037e 00000000 		.4byte	0
 2481              	.LLST24:
 2482 0382 00000000 		.4byte	.LVL42
 2483 0386 0A000000 		.4byte	.LVL43
 2484 038a 0100     		.2byte	0x1
 2485 038c 51       		.byte	0x51
 2486 038d 0A000000 		.4byte	.LVL43
 2487 0391 16000000 		.4byte	.LVL44
 2488 0395 0400     		.2byte	0x4
 2489 0397 F3       		.byte	0xf3
 2490 0398 01       		.uleb128 0x1
 2491 0399 51       		.byte	0x51
 2492 039a 9F       		.byte	0x9f
 2493 039b 16000000 		.4byte	.LVL44
 2494 039f 26000000 		.4byte	.LVL46
 2495 03a3 0100     		.2byte	0x1
 2496 03a5 50       		.byte	0x50
 2497 03a6 34000000 		.4byte	.LVL50
 2498 03aa 38000000 		.4byte	.LVL51
 2499 03ae 0100     		.2byte	0x1
 2500 03b0 50       		.byte	0x50
 2501 03b1 38000000 		.4byte	.LVL51
 2502 03b5 3A000000 		.4byte	.LVL52
 2503 03b9 0100     		.2byte	0x1
 2504 03bb 55       		.byte	0x55
 2505 03bc 40000000 		.4byte	.LVL53
 2506 03c0 45000000 		.4byte	.LVL55-1
 2507 03c4 0100     		.2byte	0x1
 2508 03c6 51       		.byte	0x51
 2509 03c7 45000000 		.4byte	.LVL55-1
 2510 03cb 54000000 		.4byte	.LFE15
 2511 03cf 0400     		.2byte	0x4
 2512 03d1 F3       		.byte	0xf3
 2513 03d2 01       		.uleb128 0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 60


 2514 03d3 51       		.byte	0x51
 2515 03d4 9F       		.byte	0x9f
 2516 03d5 00000000 		.4byte	0
 2517 03d9 00000000 		.4byte	0
 2518              	.LLST25:
 2519 03dd 2A000000 		.4byte	.LVL47
 2520 03e1 2C000000 		.4byte	.LVL48
 2521 03e5 0900     		.2byte	0x9
 2522 03e7 72       		.byte	0x72
 2523 03e8 00       		.sleb128 0
 2524 03e9 70       		.byte	0x70
 2525 03ea 00       		.sleb128 0
 2526 03eb 22       		.byte	0x22
 2527 03ec 71       		.byte	0x71
 2528 03ed 00       		.sleb128 0
 2529 03ee 1B       		.byte	0x1b
 2530 03ef 9F       		.byte	0x9f
 2531 03f0 00000000 		.4byte	0
 2532 03f4 00000000 		.4byte	0
 2533              	.LLST26:
 2534 03f8 00000000 		.4byte	.LFB16
 2535 03fc 02000000 		.4byte	.LCFI8
 2536 0400 0200     		.2byte	0x2
 2537 0402 7D       		.byte	0x7d
 2538 0403 00       		.sleb128 0
 2539 0404 02000000 		.4byte	.LCFI8
 2540 0408 48000000 		.4byte	.LFE16
 2541 040c 0200     		.2byte	0x2
 2542 040e 7D       		.byte	0x7d
 2543 040f 10       		.sleb128 16
 2544 0410 00000000 		.4byte	0
 2545 0414 00000000 		.4byte	0
 2546              	.LLST27:
 2547 0418 00000000 		.4byte	.LVL56
 2548 041c 0C000000 		.4byte	.LVL57
 2549 0420 0100     		.2byte	0x1
 2550 0422 50       		.byte	0x50
 2551 0423 0C000000 		.4byte	.LVL57
 2552 0427 18000000 		.4byte	.LVL59
 2553 042b 0100     		.2byte	0x1
 2554 042d 54       		.byte	0x54
 2555 042e 18000000 		.4byte	.LVL59
 2556 0432 48000000 		.4byte	.LFE16
 2557 0436 0400     		.2byte	0x4
 2558 0438 F3       		.byte	0xf3
 2559 0439 01       		.uleb128 0x1
 2560 043a 50       		.byte	0x50
 2561 043b 9F       		.byte	0x9f
 2562 043c 00000000 		.4byte	0
 2563 0440 00000000 		.4byte	0
 2564              	.LLST28:
 2565 0444 00000000 		.4byte	.LVL56
 2566 0448 0F000000 		.4byte	.LVL58-1
 2567 044c 0100     		.2byte	0x1
 2568 044e 51       		.byte	0x51
 2569 044f 0F000000 		.4byte	.LVL58-1
 2570 0453 1A000000 		.4byte	.LVL60
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 61


 2571 0457 0400     		.2byte	0x4
 2572 0459 F3       		.byte	0xf3
 2573 045a 01       		.uleb128 0x1
 2574 045b 51       		.byte	0x51
 2575 045c 9F       		.byte	0x9f
 2576 045d 1A000000 		.4byte	.LVL60
 2577 0461 26000000 		.4byte	.LVL62
 2578 0465 0100     		.2byte	0x1
 2579 0467 51       		.byte	0x51
 2580 0468 00000000 		.4byte	0
 2581 046c 00000000 		.4byte	0
 2582              	.LLST29:
 2583 0470 20000000 		.4byte	.LVL61
 2584 0474 26000000 		.4byte	.LVL62
 2585 0478 1A00     		.2byte	0x1a
 2586 047a 71       		.byte	0x71
 2587 047b 00       		.sleb128 0
 2588 047c F7       		.byte	0xf7
 2589 047d 3E       		.uleb128 0x3e
 2590 047e F7       		.byte	0xf7
 2591 047f 29       		.uleb128 0x29
 2592 0480 0C       		.byte	0xc
 2593 0481 80969800 		.4byte	0x989680
 2594 0485 F7       		.byte	0xf7
 2595 0486 29       		.uleb128 0x29
 2596 0487 1E       		.byte	0x1e
 2597 0488 F7       		.byte	0xf7
 2598 0489 30       		.uleb128 0x30
 2599 048a 74       		.byte	0x74
 2600 048b 00       		.sleb128 0
 2601 048c F7       		.byte	0xf7
 2602 048d 37       		.uleb128 0x37
 2603 048e F7       		.byte	0xf7
 2604 048f 30       		.uleb128 0x30
 2605 0490 1B       		.byte	0x1b
 2606 0491 F7       		.byte	0xf7
 2607 0492 29       		.uleb128 0x29
 2608 0493 9F       		.byte	0x9f
 2609 0494 00000000 		.4byte	0
 2610 0498 00000000 		.4byte	0
 2611              	.LLST30:
 2612 049c 00000000 		.4byte	.LFB17
 2613 04a0 02000000 		.4byte	.LCFI9
 2614 04a4 0200     		.2byte	0x2
 2615 04a6 7D       		.byte	0x7d
 2616 04a7 00       		.sleb128 0
 2617 04a8 02000000 		.4byte	.LCFI9
 2618 04ac 48000000 		.4byte	.LFE17
 2619 04b0 0200     		.2byte	0x2
 2620 04b2 7D       		.byte	0x7d
 2621 04b3 10       		.sleb128 16
 2622 04b4 00000000 		.4byte	0
 2623 04b8 00000000 		.4byte	0
 2624              	.LLST31:
 2625 04bc 00000000 		.4byte	.LVL65
 2626 04c0 0C000000 		.4byte	.LVL66
 2627 04c4 0100     		.2byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 62


 2628 04c6 50       		.byte	0x50
 2629 04c7 0C000000 		.4byte	.LVL66
 2630 04cb 18000000 		.4byte	.LVL68
 2631 04cf 0100     		.2byte	0x1
 2632 04d1 54       		.byte	0x54
 2633 04d2 18000000 		.4byte	.LVL68
 2634 04d6 48000000 		.4byte	.LFE17
 2635 04da 0400     		.2byte	0x4
 2636 04dc F3       		.byte	0xf3
 2637 04dd 01       		.uleb128 0x1
 2638 04de 50       		.byte	0x50
 2639 04df 9F       		.byte	0x9f
 2640 04e0 00000000 		.4byte	0
 2641 04e4 00000000 		.4byte	0
 2642              	.LLST32:
 2643 04e8 00000000 		.4byte	.LVL65
 2644 04ec 0F000000 		.4byte	.LVL67-1
 2645 04f0 0100     		.2byte	0x1
 2646 04f2 51       		.byte	0x51
 2647 04f3 0F000000 		.4byte	.LVL67-1
 2648 04f7 1A000000 		.4byte	.LVL69
 2649 04fb 0400     		.2byte	0x4
 2650 04fd F3       		.byte	0xf3
 2651 04fe 01       		.uleb128 0x1
 2652 04ff 51       		.byte	0x51
 2653 0500 9F       		.byte	0x9f
 2654 0501 1A000000 		.4byte	.LVL69
 2655 0505 1F000000 		.4byte	.LVL70-1
 2656 0509 0100     		.2byte	0x1
 2657 050b 51       		.byte	0x51
 2658 050c 00000000 		.4byte	0
 2659 0510 00000000 		.4byte	0
 2660              		.section	.debug_aranges,"",%progbits
 2661 0000 A4000000 		.4byte	0xa4
 2662 0004 0200     		.2byte	0x2
 2663 0006 00000000 		.4byte	.Ldebug_info0
 2664 000a 04       		.byte	0x4
 2665 000b 00       		.byte	0
 2666 000c 0000     		.2byte	0
 2667 000e 0000     		.2byte	0
 2668 0010 00000000 		.4byte	.LFB1
 2669 0014 CC000000 		.4byte	.LFE1-.LFB1
 2670 0018 00000000 		.4byte	.LFB2
 2671 001c 1C000000 		.4byte	.LFE2-.LFB2
 2672 0020 00000000 		.4byte	.LFB0
 2673 0024 1C000000 		.4byte	.LFE0-.LFB0
 2674 0028 00000000 		.4byte	.LFB3
 2675 002c 10000000 		.4byte	.LFE3-.LFB3
 2676 0030 00000000 		.4byte	.LFB4
 2677 0034 14000000 		.4byte	.LFE4-.LFB4
 2678 0038 00000000 		.4byte	.LFB5
 2679 003c 14000000 		.4byte	.LFE5-.LFB5
 2680 0040 00000000 		.4byte	.LFB6
 2681 0044 2C000000 		.4byte	.LFE6-.LFB6
 2682 0048 00000000 		.4byte	.LFB7
 2683 004c 20000000 		.4byte	.LFE7-.LFB7
 2684 0050 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 63


 2685 0054 10000000 		.4byte	.LFE8-.LFB8
 2686 0058 00000000 		.4byte	.LFB9
 2687 005c 1C000000 		.4byte	.LFE9-.LFB9
 2688 0060 00000000 		.4byte	.LFB10
 2689 0064 18000000 		.4byte	.LFE10-.LFB10
 2690 0068 00000000 		.4byte	.LFB11
 2691 006c 10000000 		.4byte	.LFE11-.LFB11
 2692 0070 00000000 		.4byte	.LFB12
 2693 0074 10000000 		.4byte	.LFE12-.LFB12
 2694 0078 00000000 		.4byte	.LFB13
 2695 007c 1C000000 		.4byte	.LFE13-.LFB13
 2696 0080 00000000 		.4byte	.LFB14
 2697 0084 1C000000 		.4byte	.LFE14-.LFB14
 2698 0088 00000000 		.4byte	.LFB15
 2699 008c 54000000 		.4byte	.LFE15-.LFB15
 2700 0090 00000000 		.4byte	.LFB16
 2701 0094 48000000 		.4byte	.LFE16-.LFB16
 2702 0098 00000000 		.4byte	.LFB17
 2703 009c 48000000 		.4byte	.LFE17-.LFB17
 2704 00a0 00000000 		.4byte	0
 2705 00a4 00000000 		.4byte	0
 2706              		.section	.debug_ranges,"",%progbits
 2707              	.Ldebug_ranges0:
 2708 0000 00000000 		.4byte	.LFB1
 2709 0004 CC000000 		.4byte	.LFE1
 2710 0008 00000000 		.4byte	.LFB2
 2711 000c 1C000000 		.4byte	.LFE2
 2712 0010 00000000 		.4byte	.LFB0
 2713 0014 1C000000 		.4byte	.LFE0
 2714 0018 00000000 		.4byte	.LFB3
 2715 001c 10000000 		.4byte	.LFE3
 2716 0020 00000000 		.4byte	.LFB4
 2717 0024 14000000 		.4byte	.LFE4
 2718 0028 00000000 		.4byte	.LFB5
 2719 002c 14000000 		.4byte	.LFE5
 2720 0030 00000000 		.4byte	.LFB6
 2721 0034 2C000000 		.4byte	.LFE6
 2722 0038 00000000 		.4byte	.LFB7
 2723 003c 20000000 		.4byte	.LFE7
 2724 0040 00000000 		.4byte	.LFB8
 2725 0044 10000000 		.4byte	.LFE8
 2726 0048 00000000 		.4byte	.LFB9
 2727 004c 1C000000 		.4byte	.LFE9
 2728 0050 00000000 		.4byte	.LFB10
 2729 0054 18000000 		.4byte	.LFE10
 2730 0058 00000000 		.4byte	.LFB11
 2731 005c 10000000 		.4byte	.LFE11
 2732 0060 00000000 		.4byte	.LFB12
 2733 0064 10000000 		.4byte	.LFE12
 2734 0068 00000000 		.4byte	.LFB13
 2735 006c 1C000000 		.4byte	.LFE13
 2736 0070 00000000 		.4byte	.LFB14
 2737 0074 1C000000 		.4byte	.LFE14
 2738 0078 00000000 		.4byte	.LFB15
 2739 007c 54000000 		.4byte	.LFE15
 2740 0080 00000000 		.4byte	.LFB16
 2741 0084 48000000 		.4byte	.LFE16
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 64


 2742 0088 00000000 		.4byte	.LFB17
 2743 008c 48000000 		.4byte	.LFE17
 2744 0090 00000000 		.4byte	0
 2745 0094 00000000 		.4byte	0
 2746              		.section	.debug_line,"",%progbits
 2747              	.Ldebug_line0:
 2748 0000 49020000 		.section	.debug_str,"MS",%progbits,1
 2748      02004D00 
 2748      00000201 
 2748      FB0E0D00 
 2748      01010101 
 2749              	.LASF10:
 2750 0000 75696E74 		.ascii	"uint16\000"
 2750      313600
 2751              	.LASF48:
 2752 0007 61646347 		.ascii	"adcGain\000"
 2752      61696E00 
 2753              	.LASF24:
 2754 000f 636F756E 		.ascii	"counts\000"
 2754      747300
 2755              	.LASF54:
 2756 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2756      436F756E 
 2756      7473546F 
 2756      5F566F6C 
 2756      747300
 2757              	.LASF25:
 2758 0029 4144435F 		.ascii	"ADC_Init\000"
 2758      496E6974 
 2758      00
 2759              	.LASF0:
 2760 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2760      206C6F6E 
 2760      6720756E 
 2760      7369676E 
 2760      65642069 
 2761              	.LASF29:
 2762 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2762      53746172 
 2762      74436F6E 
 2762      76657274 
 2762      00
 2763              	.LASF1:
 2764 005a 6C6F6E67 		.ascii	"long long int\000"
 2764      206C6F6E 
 2764      6720696E 
 2764      7400
 2765              	.LASF3:
 2766 0068 7369676E 		.ascii	"signed char\000"
 2766      65642063 
 2766      68617200 
 2767              	.LASF31:
 2768 0074 73746174 		.ascii	"status\000"
 2768      757300
 2769              	.LASF13:
 2770 007b 696E7433 		.ascii	"int32\000"
 2770      3200
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 65


 2771              	.LASF27:
 2772 0081 4144435F 		.ascii	"ADC_Start\000"
 2772      53746172 
 2772      7400
 2773              	.LASF6:
 2774 008b 6C6F6E67 		.ascii	"long int\000"
 2774      20696E74 
 2774      00
 2775              	.LASF52:
 2776 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2776      436F756E 
 2776      7473546F 
 2776      5F75566F 
 2776      6C747300 
 2777              	.LASF59:
 2778 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2778      636F756E 
 2778      74735065 
 2778      72313056 
 2778      6F6C7400 
 2779              	.LASF9:
 2780 00bc 75696E74 		.ascii	"uint8\000"
 2780      3800
 2781              	.LASF61:
 2782 00c2 43794465 		.ascii	"CyDelayUs\000"
 2782      6C617955 
 2782      7300
 2783              	.LASF16:
 2784 00cc 646F7562 		.ascii	"double\000"
 2784      6C6500
 2785              	.LASF11:
 2786 00d3 75696E74 		.ascii	"uint32\000"
 2786      333200
 2787              	.LASF38:
 2788 00da 6D61736B 		.ascii	"mask\000"
 2788      00
 2789              	.LASF57:
 2790 00df 4144435F 		.ascii	"ADC_initVar\000"
 2790      696E6974 
 2790      56617200 
 2791              	.LASF34:
 2792 00eb 7265744D 		.ascii	"retMode\000"
 2792      6F646500 
 2793              	.LASF43:
 2794 00f3 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2794      5365744C 
 2794      696D6974 
 2794      4D61736B 
 2794      00
 2795              	.LASF8:
 2796 0104 756E7369 		.ascii	"unsigned int\000"
 2796      676E6564 
 2796      20696E74 
 2796      00
 2797              	.LASF53:
 2798 0111 75566F6C 		.ascii	"uVolts\000"
 2798      747300
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 66


 2799              	.LASF7:
 2800 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2800      20756E73 
 2800      69676E65 
 2800      6420696E 
 2800      7400
 2801              	.LASF44:
 2802 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 2802      53657453 
 2802      61744D61 
 2802      736B00
 2803              	.LASF55:
 2804 0139 766F6C74 		.ascii	"volts\000"
 2804      7300
 2805              	.LASF23:
 2806 013f 746D7052 		.ascii	"tmpRegVal\000"
 2806      65675661 
 2806      6C00
 2807              	.LASF64:
 2808 0149 433A5C55 		.ascii	"C:\\Users\\Steve\\Documents\\Git\\GlowTime\\RGB_LED"
 2808      73657273 
 2808      5C537465 
 2808      76655C44 
 2808      6F63756D 
 2809 0176 5F4D6174 		.ascii	"_Matrix.cydsn\000"
 2809      7269782E 
 2809      63796473 
 2809      6E00
 2810              	.LASF5:
 2811 0184 73686F72 		.ascii	"short unsigned int\000"
 2811      7420756E 
 2811      7369676E 
 2811      65642069 
 2811      6E7400
 2812              	.LASF65:
 2813 0197 4379496E 		.ascii	"CyIntSetVector\000"
 2813      74536574 
 2813      56656374 
 2813      6F7200
 2814              	.LASF30:
 2815 01a6 4144435F 		.ascii	"ADC_StopConvert\000"
 2815      53746F70 
 2815      436F6E76 
 2815      65727400 
 2816              	.LASF51:
 2817 01b6 6D566F6C 		.ascii	"mVolts\000"
 2817      747300
 2818              	.LASF19:
 2819 01bd 72656733 		.ascii	"reg32\000"
 2819      3200
 2820              	.LASF14:
 2821 01c3 666C6F61 		.ascii	"float32\000"
 2821      74333200 
 2822              	.LASF21:
 2823 01cb 73697A65 		.ascii	"sizetype\000"
 2823      74797065 
 2823      00
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 67


 2824              	.LASF40:
 2825 01d4 6C6F774C 		.ascii	"lowLimit\000"
 2825      696D6974 
 2825      00
 2826              	.LASF41:
 2827 01dd 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2827      53657448 
 2827      6967684C 
 2827      696D6974 
 2827      00
 2828              	.LASF32:
 2829 01ee 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2829      4973456E 
 2829      64436F6E 
 2829      76657273 
 2829      696F6E00 
 2830              	.LASF17:
 2831 0202 696E7436 		.ascii	"int64\000"
 2831      3400
 2832              	.LASF60:
 2833 0208 4379496E 		.ascii	"CyIntSetPriority\000"
 2833      74536574 
 2833      5072696F 
 2833      72697479 
 2833      00
 2834              	.LASF37:
 2835 0219 4144435F 		.ascii	"ADC_SetChanMask\000"
 2835      53657443 
 2835      68616E4D 
 2835      61736B00 
 2836              	.LASF47:
 2837 0229 4144435F 		.ascii	"ADC_SetGain\000"
 2837      53657447 
 2837      61696E00 
 2838              	.LASF15:
 2839 0235 666C6F61 		.ascii	"float\000"
 2839      7400
 2840              	.LASF42:
 2841 023b 68696768 		.ascii	"highLimit\000"
 2841      4C696D69 
 2841      7400
 2842              	.LASF49:
 2843 0245 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2843      436F756E 
 2843      7473546F 
 2843      5F6D566F 
 2843      6C747300 
 2844              	.LASF62:
 2845 0259 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2845      4320342E 
 2845      372E3320 
 2845      32303133 
 2845      30333132 
 2846 028c 616E6368 		.ascii	"anch revision 196615]\000"
 2846      20726576 
 2846      6973696F 
 2846      6E203139 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 68


 2846      36363135 
 2847              	.LASF39:
 2848 02a2 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2848      5365744C 
 2848      6F774C69 
 2848      6D697400 
 2849              	.LASF66:
 2850 02b2 43794861 		.ascii	"CyHalt\000"
 2850      6C7400
 2851              	.LASF63:
 2852 02b9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2852      6E657261 
 2852      7465645F 
 2852      536F7572 
 2852      63655C50 
 2853              	.LASF4:
 2854 02d8 756E7369 		.ascii	"unsigned char\000"
 2854      676E6564 
 2854      20636861 
 2854      7200
 2855              	.LASF58:
 2856 02e6 4144435F 		.ascii	"ADC_offset\000"
 2856      6F666673 
 2856      657400
 2857              	.LASF2:
 2858 02f1 73686F72 		.ascii	"short int\000"
 2858      7420696E 
 2858      7400
 2859              	.LASF28:
 2860 02fb 4144435F 		.ascii	"ADC_Stop\000"
 2860      53746F70 
 2860      00
 2861              	.LASF22:
 2862 0304 63684E75 		.ascii	"chNum\000"
 2862      6D00
 2863              	.LASF35:
 2864 030a 6368616E 		.ascii	"chan\000"
 2864      00
 2865              	.LASF18:
 2866 030f 63686172 		.ascii	"char\000"
 2866      00
 2867              	.LASF20:
 2868 0314 63796973 		.ascii	"cyisraddress\000"
 2868      72616464 
 2868      72657373 
 2868      00
 2869              	.LASF56:
 2870 0321 4144435F 		.ascii	"ADC_channelsConfig\000"
 2870      6368616E 
 2870      6E656C73 
 2870      436F6E66 
 2870      696700
 2871              	.LASF46:
 2872 0334 6F666673 		.ascii	"offset\000"
 2872      657400
 2873              	.LASF50:
 2874 033b 61646343 		.ascii	"adcCounts\000"
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccdswkPZ.s 			page 69


 2874      6F756E74 
 2874      7300
 2875              	.LASF26:
 2876 0345 4144435F 		.ascii	"ADC_Enable\000"
 2876      456E6162 
 2876      6C6500
 2877              	.LASF12:
 2878 0350 696E7431 		.ascii	"int16\000"
 2878      3600
 2879              	.LASF45:
 2880 0356 4144435F 		.ascii	"ADC_SetOffset\000"
 2880      5365744F 
 2880      66667365 
 2880      7400
 2881              	.LASF36:
 2882 0364 72657375 		.ascii	"result\000"
 2882      6C7400
 2883              	.LASF33:
 2884 036b 4144435F 		.ascii	"ADC_GetResult16\000"
 2884      47657452 
 2884      6573756C 
 2884      74313600 
 2885              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
