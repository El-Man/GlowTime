ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_Init, %function
  23              	ADC_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC.c"
   1:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:.\Generated_Source\PSoC4/ADC.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC.c **** *
   5:.\Generated_Source\PSoC4/ADC.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC.c **** *
   9:.\Generated_Source\PSoC4/ADC.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC.c **** *
  11:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC.c **** 
  18:.\Generated_Source\PSoC4/ADC.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  20:.\Generated_Source\PSoC4/ADC.c **** 
  21:.\Generated_Source\PSoC4/ADC.c **** 
  22:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  28:.\Generated_Source\PSoC4/ADC.c **** 
  29:.\Generated_Source\PSoC4/ADC.c **** 
  30:.\Generated_Source\PSoC4/ADC.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC.c **** ***************************************/
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 2


  33:.\Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000400u };
  35:.\Generated_Source\PSoC4/ADC.c **** 
  36:.\Generated_Source\PSoC4/ADC.c **** 
  37:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  39:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC.c **** *
  41:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC.c **** *
  46:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC.c **** *
  49:.\Generated_Source\PSoC4/ADC.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC.c **** *
  52:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  58:.\Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  62:.\Generated_Source\PSoC4/ADC.c **** *
  63:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  65:.\Generated_Source\PSoC4/ADC.c **** {
  66:.\Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  68:.\Generated_Source\PSoC4/ADC.c ****     {
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  71:.\Generated_Source\PSoC4/ADC.c ****     }
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  73:.\Generated_Source\PSoC4/ADC.c **** }
  74:.\Generated_Source\PSoC4/ADC.c **** 
  75:.\Generated_Source\PSoC4/ADC.c **** 
  76:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  78:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC.c **** *
  80:.\Generated_Source\PSoC4/ADC.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  84:.\Generated_Source\PSoC4/ADC.c **** *
  85:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC.c **** *
  88:.\Generated_Source\PSoC4/ADC.c **** * Return:
  89:.\Generated_Source\PSoC4/ADC.c **** *  None.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 3


  90:.\Generated_Source\PSoC4/ADC.c **** *
  91:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC.c **** *
  94:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  96:.\Generated_Source\PSoC4/ADC.c **** {
  26              		.loc 1 96 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  97:.\Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC.c **** 
 101:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC.c ****         {
 104:.\Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 132:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC.c ****         };
 137:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC.c **** 
 139:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 4


 140:.\Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  33              		.loc 1 141 0
  34 0002 0E20     		mov	r0, #14
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 142:.\Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
  38              		.loc 1 142 0
  39 000a 1B49     		ldr	r1, .L2
  40 000c 0E20     		mov	r0, #14
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 143:.\Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC.c **** 
 145:.\Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  43              		.loc 1 146 0
  44 0012 1A4B     		ldr	r3, .L2+4
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  45              		.loc 1 147 0
  46 0014 1A49     		ldr	r1, .L2+8
  47 0016 1B48     		ldr	r0, .L2+12
 146:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
  48              		.loc 1 146 0
  49 0018 0122     		mov	r2, #1
  50 001a 1A60     		str	r2, [r3]
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  51              		.loc 1 148 0
  52 001c 1A4C     		ldr	r4, .L2+16
 147:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG = ADC_DEFAULT_CTRL_REG_CFG;
  53              		.loc 1 147 0
  54 001e 0160     		str	r1, [r0]
  55              		.loc 1 148 0
  56 0020 1A4B     		ldr	r3, .L2+20
 149:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
  57              		.loc 1 149 0
  58 0022 1B49     		ldr	r1, .L2+24
  59 0024 1B48     		ldr	r0, .L2+28
 148:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
  60              		.loc 1 148 0
  61 0026 1C60     		str	r4, [r3]
  62              		.loc 1 149 0
  63 0028 0160     		str	r1, [r0]
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  64              		.loc 1 150 0
  65 002a 1B4C     		ldr	r4, .L2+32
 151:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
  66              		.loc 1 151 0
  67 002c 1B48     		ldr	r0, .L2+36
  68 002e 1C49     		ldr	r1, .L2+40
 150:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
  69              		.loc 1 150 0
  70 0030 0023     		mov	r3, #0
  71 0032 2360     		str	r3, [r4]
  72              		.loc 1 151 0
  73 0034 0860     		str	r0, [r1]
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 5


 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  74              		.loc 1 152 0
  75 0036 1B4C     		ldr	r4, .L2+44
  76 0038 1B48     		ldr	r0, .L2+48
 153:.\Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0; 
  77              		.loc 1 155 0
  78 003a 1C49     		ldr	r1, .L2+52
 152:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
  79              		.loc 1 152 0
  80 003c 0460     		str	r4, [r0]
  81              		.loc 1 155 0
  82 003e 0C68     		ldr	r4, [r1]
  83 0040 8020     		mov	r0, #128
  84 0042 4002     		lsl	r0, r0, #9
  85 0044 2043     		orr	r0, r4
  86 0046 0860     		str	r0, [r1]
 156:.\Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0; 
 159:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC.c **** 
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  87              		.loc 1 162 0
  88 0048 1949     		ldr	r1, .L2+56
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  89              		.loc 1 163 0
  90 004a 1A4C     		ldr	r4, .L2+60
 162:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
  91              		.loc 1 162 0
  92 004c 0B60     		str	r3, [r1]
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
  93              		.loc 1 164 0
  94 004e 1A48     		ldr	r0, .L2+64
 165:.\Generated_Source\PSoC4/ADC.c ****     ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
  95              		.loc 1 165 0
  96 0050 1A49     		ldr	r1, .L2+68
 163:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
  97              		.loc 1 163 0
  98 0052 2360     		str	r3, [r4]
  99              		.loc 1 165 0
 100 0054 0224     		mov	r4, #2
 164:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 101              		.loc 1 164 0
 102 0056 0260     		str	r2, [r0]
 103              		.loc 1 165 0
 104 0058 0C60     		str	r4, [r1]
 166:.\Generated_Source\PSoC4/ADC.c ****     
 167:.\Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 105              		.loc 1 168 0
 106 005a 194C     		ldr	r4, .L2+72
 169:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal &= (uint32)~ADC_DCEN;
 171:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 6


 172:.\Generated_Source\PSoC4/ADC.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 174:.\Generated_Source\PSoC4/ADC.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 176:.\Generated_Source\PSoC4/ADC.c ****     
 177:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 178:.\Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 179:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC.c **** 
 181:.\Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 182:.\Generated_Source\PSoC4/ADC.c ****     {
 183:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 184:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 186:.\Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC.c ****         */
 191:.\Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC.c **** 
 196:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 198:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC.c ****         {
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 201:.\Generated_Source\PSoC4/ADC.c **** 
 202:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 203:.\Generated_Source\PSoC4/ADC.c ****             {
 204:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 205:.\Generated_Source\PSoC4/ADC.c ****             }
 206:.\Generated_Source\PSoC4/ADC.c **** 
 207:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 208:.\Generated_Source\PSoC4/ADC.c ****             {
 209:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 210:.\Generated_Source\PSoC4/ADC.c ****             }
 211:.\Generated_Source\PSoC4/ADC.c ****         }
 212:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC.c ****             else
 214:.\Generated_Source\PSoC4/ADC.c ****             {
 215:.\Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
 216:.\Generated_Source\PSoC4/ADC.c **** 
 217:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC.c ****                 {
 219:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC.c ****                 }
 221:.\Generated_Source\PSoC4/ADC.c **** 
 222:.\Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 223:.\Generated_Source\PSoC4/ADC.c ****                 {
 224:.\Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC.c ****                 }
 226:.\Generated_Source\PSoC4/ADC.c ****             }
 227:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 7


 229:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 230:.\Generated_Source\PSoC4/ADC.c ****         {
 231:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 232:.\Generated_Source\PSoC4/ADC.c ****         }
 233:.\Generated_Source\PSoC4/ADC.c ****         else
 234:.\Generated_Source\PSoC4/ADC.c ****         {
 235:.\Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 236:.\Generated_Source\PSoC4/ADC.c ****         }
 237:.\Generated_Source\PSoC4/ADC.c **** 
 238:.\Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 239:.\Generated_Source\PSoC4/ADC.c ****         {  
 240:.\Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 242:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 246:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */    
 247:.\Generated_Source\PSoC4/ADC.c ****         }
 248:.\Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC.c ****         {
 250:.\Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 253:.\Generated_Source\PSoC4/ADC.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 255:.\Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */    
 256:.\Generated_Source\PSoC4/ADC.c ****         }
 257:.\Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 259:.\Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 260:.\Generated_Source\PSoC4/ADC.c ****     }
 261:.\Generated_Source\PSoC4/ADC.c **** }
 107              		.loc 1 261 0
 108              		@ sp needed for prologue
 168:.\Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 109              		.loc 1 168 0
 110 005c 2068     		ldr	r0, [r4]
 111              	.LVL2:
 173:.\Generated_Source\PSoC4/ADC.c ****         tmpRegVal |= ADC_DLY_INC;
 112              		.loc 1 173 0
 113 005e 0243     		orr	r2, r0
 114              	.LVL3:
 175:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 115              		.loc 1 175 0
 116 0060 2260     		str	r2, [r4]
 117              	.LVL4:
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 118              		.loc 1 245 0
 119 0062 1848     		ldr	r0, .L2+76
 200:.\Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 120              		.loc 1 200 0
 121 0064 8022     		mov	r2, #128
 122 0066 184C     		ldr	r4, .L2+80
 123 0068 D100     		lsl	r1, r2, #3
 124 006a 2160     		str	r1, [r4]
 125              	.LVL5:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 8


 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 126              		.loc 1 258 0
 127 006c 174A     		ldr	r2, .L2+84
 245:.\Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 128              		.loc 1 245 0
 129 006e 0380     		strh	r3, [r0]
 258:.\Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) + 
 130              		.loc 1 258 0
 131 0070 174B     		ldr	r3, .L2+88
 132 0072 1A60     		str	r2, [r3]
 133              	.LVL6:
 134              		.loc 1 261 0
 135 0074 10BD     		pop	{r4, pc}
 136              	.L3:
 137 0076 C046     		.align	2
 138              	.L2:
 139 0078 00000000 		.word	ADC_ISR
 140 007c 20001A40 		.word	1075445792
 141 0080 70020053 		.word	1392509552
 142 0084 00001A40 		.word	1075445760
 143 0088 A4000080 		.word	-2147483484
 144 008c 04001A40 		.word	1075445764
 145 0090 0000FF0F 		.word	268369920
 146 0094 18001A40 		.word	1075445784
 147 0098 1C001A40 		.word	1075445788
 148 009c 06000400 		.word	262150
 149 00a0 10001A40 		.word	1075445776
 150 00a4 04000400 		.word	262148
 151 00a8 14001A40 		.word	1075445780
 152 00ac 00031A40 		.word	1075446528
 153 00b0 28021A40 		.word	1075446312
 154 00b4 38021A40 		.word	1075446328
 155 00b8 18021A40 		.word	1075446296
 156 00bc 000F1A40 		.word	1075449600
 157 00c0 30001A40 		.word	1075445808
 158 00c4 00000000 		.word	ADC_offset
 159 00c8 80001A40 		.word	1075445888
 160 00cc 3E180000 		.word	6206
 161 00d0 00000000 		.word	ADC_countsPer10Volt
 162              		.cfi_endproc
 163              	.LFE1:
 164              		.size	ADC_Init, .-ADC_Init
 165              		.section	.text.ADC_Enable,"ax",%progbits
 166              		.align	2
 167              		.global	ADC_Enable
 168              		.code	16
 169              		.thumb_func
 170              		.type	ADC_Enable, %function
 171              	ADC_Enable:
 172              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC.c **** 
 263:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC.c **** *
 267:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 9


 269:.\Generated_Source\PSoC4/ADC.c **** *
 270:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC.c **** *
 273:.\Generated_Source\PSoC4/ADC.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC.c **** *
 276:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 277:.\Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 278:.\Generated_Source\PSoC4/ADC.c **** {
 173              		.loc 1 278 0
 174              		.cfi_startproc
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI1:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 279:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_ENABLE;
 180              		.loc 1 279 0
 181 0002 054B     		ldr	r3, .L5
 182 0004 8022     		mov	r2, #128
 183 0006 1968     		ldr	r1, [r3]
 184 0008 1006     		lsl	r0, r2, #24
 185 000a 0843     		orr	r0, r1
 186 000c 1860     		str	r0, [r3]
 280:.\Generated_Source\PSoC4/ADC.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC.c ****     CyDelayUs(ADC_10US_DELAY);
 187              		.loc 1 281 0
 188 000e 0A20     		mov	r0, #10
 189 0010 FFF7FEFF 		bl	CyDelayUs
 190              	.LVL7:
 282:.\Generated_Source\PSoC4/ADC.c **** }
 191              		.loc 1 282 0
 192              		@ sp needed for prologue
 193 0014 08BD     		pop	{r3, pc}
 194              	.L6:
 195 0016 C046     		.align	2
 196              	.L5:
 197 0018 00001A40 		.word	1075445760
 198              		.cfi_endproc
 199              	.LFE2:
 200              		.size	ADC_Enable, .-ADC_Enable
 201              		.section	.text.ADC_Start,"ax",%progbits
 202              		.align	2
 203              		.global	ADC_Start
 204              		.code	16
 205              		.thumb_func
 206              		.type	ADC_Start, %function
 207              	ADC_Start:
 208              	.LFB0:
  65:.\Generated_Source\PSoC4/ADC.c **** {
 209              		.loc 1 65 0
 210              		.cfi_startproc
 211 0000 10B5     		push	{r4, lr}
 212              	.LCFI2:
 213              		.cfi_def_cfa_offset 8
 214              		.cfi_offset 4, -8
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 10


 215              		.cfi_offset 14, -4
  67:.\Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
 216              		.loc 1 67 0
 217 0002 054C     		ldr	r4, .L10
 218 0004 2378     		ldrb	r3, [r4]
 219 0006 002B     		cmp	r3, #0
 220 0008 03D1     		bne	.L8
  69:.\Generated_Source\PSoC4/ADC.c ****         ADC_Init();
 221              		.loc 1 69 0
 222 000a FFF7FEFF 		bl	ADC_Init
 223              	.LVL8:
  70:.\Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
 224              		.loc 1 70 0
 225 000e 0120     		mov	r0, #1
 226 0010 2070     		strb	r0, [r4]
 227              	.L8:
  72:.\Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
 228              		.loc 1 72 0
 229 0012 FFF7FEFF 		bl	ADC_Enable
 230              	.LVL9:
  73:.\Generated_Source\PSoC4/ADC.c **** }
 231              		.loc 1 73 0
 232              		@ sp needed for prologue
 233 0016 10BD     		pop	{r4, pc}
 234              	.L11:
 235              		.align	2
 236              	.L10:
 237 0018 00000000 		.word	.LANCHOR0
 238              		.cfi_endproc
 239              	.LFE0:
 240              		.size	ADC_Start, .-ADC_Start
 241              		.section	.text.ADC_Stop,"ax",%progbits
 242              		.align	2
 243              		.global	ADC_Stop
 244              		.code	16
 245              		.thumb_func
 246              		.type	ADC_Stop, %function
 247              	ADC_Stop:
 248              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC.c **** 
 284:.\Generated_Source\PSoC4/ADC.c **** 
 285:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 287:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC.c **** *
 289:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC.c **** *
 293:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC.c **** *
 296:.\Generated_Source\PSoC4/ADC.c **** * Return:
 297:.\Generated_Source\PSoC4/ADC.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC.c **** *
 299:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 11


 301:.\Generated_Source\PSoC4/ADC.c **** {
 249              		.loc 1 301 0
 250              		.cfi_startproc
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 251              		.loc 1 302 0
 252 0000 024B     		ldr	r3, .L13
 303:.\Generated_Source\PSoC4/ADC.c **** }
 253              		.loc 1 303 0
 254              		@ sp needed for prologue
 302:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 255              		.loc 1 302 0
 256 0002 1A68     		ldr	r2, [r3]
 257 0004 5000     		lsl	r0, r2, #1
 258 0006 4108     		lsr	r1, r0, #1
 259 0008 1960     		str	r1, [r3]
 260              		.loc 1 303 0
 261 000a 7047     		bx	lr
 262              	.L14:
 263              		.align	2
 264              	.L13:
 265 000c 00001A40 		.word	1075445760
 266              		.cfi_endproc
 267              	.LFE3:
 268              		.size	ADC_Stop, .-ADC_Stop
 269              		.section	.text.ADC_StartConvert,"ax",%progbits
 270              		.align	2
 271              		.global	ADC_StartConvert
 272              		.code	16
 273              		.thumb_func
 274              		.type	ADC_StartConvert, %function
 275              	ADC_StartConvert:
 276              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC.c **** 
 305:.\Generated_Source\PSoC4/ADC.c **** 
 306:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 308:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC.c **** *
 310:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC.c **** *
 315:.\Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 318:.\Generated_Source\PSoC4/ADC.c **** *
 319:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC.c **** *
 322:.\Generated_Source\PSoC4/ADC.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC.c **** *
 325:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC.c **** {
 277              		.loc 1 327 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 12


 278              		.cfi_startproc
 328:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 279              		.loc 1 329 0
 280 0000 034B     		ldr	r3, .L16
 281 0002 8022     		mov	r2, #128
 282 0004 1968     		ldr	r1, [r3]
 283 0006 5002     		lsl	r0, r2, #9
 284 0008 0843     		orr	r0, r1
 285 000a 1860     		str	r0, [r3]
 330:.\Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 332:.\Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC.c **** 
 334:.\Generated_Source\PSoC4/ADC.c **** }
 286              		.loc 1 334 0
 287              		@ sp needed for prologue
 288 000c 7047     		bx	lr
 289              	.L17:
 290 000e C046     		.align	2
 291              	.L16:
 292 0010 04001A40 		.word	1075445764
 293              		.cfi_endproc
 294              	.LFE4:
 295              		.size	ADC_StartConvert, .-ADC_StartConvert
 296              		.section	.text.ADC_StopConvert,"ax",%progbits
 297              		.align	2
 298              		.global	ADC_StopConvert
 299              		.code	16
 300              		.thumb_func
 301              		.type	ADC_StopConvert, %function
 302              	ADC_StopConvert:
 303              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC.c **** 
 336:.\Generated_Source\PSoC4/ADC.c **** 
 337:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 339:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC.c **** *
 341:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC.c **** *
 344:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC.c **** *
 347:.\Generated_Source\PSoC4/ADC.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC.c **** *
 350:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC.c **** {
 304              		.loc 1 352 0
 305              		.cfi_startproc
 353:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 306              		.loc 1 354 0
 307 0000 024B     		ldr	r3, .L19
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 13


 308 0002 034A     		ldr	r2, .L19+4
 309 0004 1968     		ldr	r1, [r3]
 355:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC.c **** }
 310              		.loc 1 356 0
 311              		@ sp needed for prologue
 354:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 312              		.loc 1 354 0
 313 0006 0A40     		and	r2, r1
 314 0008 1A60     		str	r2, [r3]
 315              		.loc 1 356 0
 316 000a 7047     		bx	lr
 317              	.L20:
 318              		.align	2
 319              	.L19:
 320 000c 04001A40 		.word	1075445764
 321 0010 FFFFFEFF 		.word	-65537
 322              		.cfi_endproc
 323              	.LFE5:
 324              		.size	ADC_StopConvert, .-ADC_StopConvert
 325              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 326              		.align	2
 327              		.global	ADC_IsEndConversion
 328              		.code	16
 329              		.thumb_func
 330              		.type	ADC_IsEndConversion, %function
 331              	ADC_IsEndConversion:
 332              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC.c **** 
 358:.\Generated_Source\PSoC4/ADC.c **** 
 359:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC.c **** *
 363:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC.c **** *
 372:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC.c **** *
 380:.\Generated_Source\PSoC4/ADC.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC.c **** *
 384:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 14


 386:.\Generated_Source\PSoC4/ADC.c **** {
 333              		.loc 1 386 0
 334              		.cfi_startproc
 335              	.LVL10:
 336 0000 011C     		mov	r1, r0
 337 0002 00B5     		push	{lr}
 338              	.LCFI3:
 339              		.cfi_def_cfa_offset 4
 340              		.cfi_offset 14, -4
 387:.\Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 341              		.loc 1 387 0
 342 0004 0020     		mov	r0, #0
 343              	.LVL11:
 388:.\Generated_Source\PSoC4/ADC.c **** 
 389:.\Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 344              		.loc 1 389 0
 345 0006 8B07     		lsl	r3, r1, #30
 346 0008 0DD0     		beq	.L26
 390:.\Generated_Source\PSoC4/ADC.c ****     {
 391:.\Generated_Source\PSoC4/ADC.c ****         do
 392:.\Generated_Source\PSoC4/ADC.c ****         {
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 394:.\Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 347              		.loc 1 394 0
 348 000a 0220     		mov	r0, #2
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 349              		.loc 1 393 0
 350 000c 064A     		ldr	r2, .L31
 351 000e 0123     		mov	r3, #1
 352              		.loc 1 394 0
 353 0010 0140     		and	r1, r0
 354              	.LVL12:
 355 0012 01E0     		b	.L27
 356              	.LVL13:
 357              	.L30:
 358              		.loc 1 394 0 is_stmt 0 discriminator 1
 359 0014 0029     		cmp	r1, #0
 360 0016 06D0     		beq	.L26
 361              	.LVL14:
 362              	.L27:
 393:.\Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 363              		.loc 1 393 0 is_stmt 1
 364 0018 1068     		ldr	r0, [r2]
 365 001a 1840     		and	r0, r3
 366              	.LVL15:
 367              		.loc 1 394 0
 368 001c FAD0     		beq	.L30
 395:.\Generated_Source\PSoC4/ADC.c **** 
 396:.\Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 397:.\Generated_Source\PSoC4/ADC.c ****         {
 398:.\Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 369              		.loc 1 399 0
 370 001e 024A     		ldr	r2, .L31
 371 0020 0121     		mov	r1, #1
 372 0022 1160     		str	r1, [r2]
 373 0024 0120     		mov	r0, #1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 15


 374              	.LVL16:
 375              	.L26:
 400:.\Generated_Source\PSoC4/ADC.c ****         }
 401:.\Generated_Source\PSoC4/ADC.c ****     }
 402:.\Generated_Source\PSoC4/ADC.c **** 
 403:.\Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 405:.\Generated_Source\PSoC4/ADC.c ****         {
 406:.\Generated_Source\PSoC4/ADC.c ****             do
 407:.\Generated_Source\PSoC4/ADC.c ****             {
 408:.\Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC.c **** 
 412:.\Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC.c ****             {
 414:.\Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 415:.\Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC.c ****             }
 417:.\Generated_Source\PSoC4/ADC.c ****         }
 418:.\Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC.c **** 
 420:.\Generated_Source\PSoC4/ADC.c ****     return (status);
 421:.\Generated_Source\PSoC4/ADC.c **** }
 376              		.loc 1 421 0
 377              		@ sp needed for prologue
 378 0026 00BD     		pop	{pc}
 379              	.L32:
 380              		.align	2
 381              	.L31:
 382 0028 10021A40 		.word	1075446288
 383              		.cfi_endproc
 384              	.LFE6:
 385              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 386              		.section	.text.ADC_GetResult16,"ax",%progbits
 387              		.align	2
 388              		.global	ADC_GetResult16
 389              		.code	16
 390              		.thumb_func
 391              		.type	ADC_GetResult16, %function
 392              	ADC_GetResult16:
 393              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC.c **** 
 423:.\Generated_Source\PSoC4/ADC.c **** 
 424:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 426:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC.c **** *
 428:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC.c **** *
 431:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 434:.\Generated_Source\PSoC4/ADC.c **** *
 435:.\Generated_Source\PSoC4/ADC.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 16


 437:.\Generated_Source\PSoC4/ADC.c **** *
 438:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC.c **** {
 394              		.loc 1 440 0
 395              		.cfi_startproc
 396              	.LVL17:
 397 0000 08B5     		push	{r3, lr}
 398              	.LCFI4:
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 3, -8
 401              		.cfi_offset 14, -4
 441:.\Generated_Source\PSoC4/ADC.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC.c **** 
 443:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 402              		.loc 1 444 0
 403 0002 0028     		cmp	r0, #0
 404 0004 05D1     		bne	.L37
 445:.\Generated_Source\PSoC4/ADC.c **** 
 446:.\Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 447:.\Generated_Source\PSoC4/ADC.c ****     {
 448:.\Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 405              		.loc 1 448 0
 406 0006 054B     		ldr	r3, .L38
 407 0008 1868     		ldr	r0, [r3]
 408              	.LVL18:
 409 000a 0104     		lsl	r1, r0, #16
 410 000c 0A0C     		lsr	r2, r1, #16
 411              	.LVL19:
 412              	.L35:
 449:.\Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC.c ****     }
 451:.\Generated_Source\PSoC4/ADC.c ****     else
 452:.\Generated_Source\PSoC4/ADC.c ****     {
 453:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 454:.\Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC.c ****         #else
 456:.\Generated_Source\PSoC4/ADC.c ****             result = 0u;
 457:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC.c ****     }
 459:.\Generated_Source\PSoC4/ADC.c **** 
 460:.\Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 413              		.loc 1 460 0
 414 000e 10B2     		sxth	r0, r2
 461:.\Generated_Source\PSoC4/ADC.c **** }
 415              		.loc 1 461 0
 416              		@ sp needed for prologue
 417 0010 08BD     		pop	{r3, pc}
 418              	.LVL20:
 419              	.L37:
 444:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 420              		.loc 1 444 0 discriminator 1
 421 0012 0020     		mov	r0, #0
 422              	.LVL21:
 423 0014 FFF7FEFF 		bl	CyHalt
 424              	.LVL22:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 17


 425 0018 0022     		mov	r2, #0
 426 001a F8E7     		b	.L35
 427              	.L39:
 428              		.align	2
 429              	.L38:
 430 001c 80011A40 		.word	1075446144
 431              		.cfi_endproc
 432              	.LFE7:
 433              		.size	ADC_GetResult16, .-ADC_GetResult16
 434              		.section	.text.ADC_SetChanMask,"ax",%progbits
 435              		.align	2
 436              		.global	ADC_SetChanMask
 437              		.code	16
 438              		.thumb_func
 439              		.type	ADC_SetChanMask, %function
 440              	ADC_SetChanMask:
 441              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC.c **** 
 463:.\Generated_Source\PSoC4/ADC.c **** 
 464:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 466:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC.c **** *
 468:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC.c **** *
 471:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC.c **** *
 480:.\Generated_Source\PSoC4/ADC.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC.c **** *  None.
 482:.\Generated_Source\PSoC4/ADC.c **** *
 483:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC.c **** {
 442              		.loc 1 485 0
 443              		.cfi_startproc
 444              	.LVL23:
 486:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 445              		.loc 1 486 0
 446 0000 0123     		mov	r3, #1
 447 0002 0249     		ldr	r1, .L41
 448 0004 1840     		and	r0, r3
 449              	.LVL24:
 450 0006 0860     		str	r0, [r1]
 487:.\Generated_Source\PSoC4/ADC.c **** }
 451              		.loc 1 487 0
 452              		@ sp needed for prologue
 453 0008 7047     		bx	lr
 454              	.L42:
 455 000a C046     		.align	2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 18


 456              	.L41:
 457 000c 20001A40 		.word	1075445792
 458              		.cfi_endproc
 459              	.LFE8:
 460              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 461              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 462              		.align	2
 463              		.global	ADC_SetLowLimit
 464              		.code	16
 465              		.thumb_func
 466              		.type	ADC_SetLowLimit, %function
 467              	ADC_SetLowLimit:
 468              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC.c **** 
 489:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC.c **** 
 491:.\Generated_Source\PSoC4/ADC.c **** 
 492:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 494:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC.c ****     *
 496:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC.c ****     *
 499:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC.c ****     *
 502:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC.c ****     *
 505:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC.c ****     {
 508:.\Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC.c ****     }
 510:.\Generated_Source\PSoC4/ADC.c **** 
 511:.\Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC.c **** 
 513:.\Generated_Source\PSoC4/ADC.c **** 
 514:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC.c **** *
 518:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC.c **** *
 521:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC.c **** *
 524:.\Generated_Source\PSoC4/ADC.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC.c **** *
 527:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC.c **** {
 469              		.loc 1 529 0
 470              		.cfi_startproc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 19


 471              	.LVL25:
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 472              		.loc 1 530 0
 473 0000 054B     		ldr	r3, .L44
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 474              		.loc 1 531 0
 475 0002 0004     		lsl	r0, r0, #16
 476              	.LVL26:
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 477              		.loc 1 530 0
 478 0004 1A68     		ldr	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC.c **** }
 479              		.loc 1 532 0
 480              		@ sp needed for prologue
 530:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 481              		.loc 1 530 0
 482 0006 110C     		lsr	r1, r2, #16
 483 0008 0A04     		lsl	r2, r1, #16
 484 000a 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 485              		.loc 1 531 0
 486 000c 1968     		ldr	r1, [r3]
 487 000e 020C     		lsr	r2, r0, #16
 488 0010 0A43     		orr	r2, r1
 489 0012 1A60     		str	r2, [r3]
 490              		.loc 1 532 0
 491 0014 7047     		bx	lr
 492              	.L45:
 493 0016 C046     		.align	2
 494              	.L44:
 495 0018 18001A40 		.word	1075445784
 496              		.cfi_endproc
 497              	.LFE9:
 498              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 499              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 500              		.align	2
 501              		.global	ADC_SetHighLimit
 502              		.code	16
 503              		.thumb_func
 504              		.type	ADC_SetHighLimit, %function
 505              	ADC_SetHighLimit:
 506              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC.c **** 
 534:.\Generated_Source\PSoC4/ADC.c **** 
 535:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC.c **** *
 539:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC.c **** *
 542:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC.c **** *
 545:.\Generated_Source\PSoC4/ADC.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 20


 548:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC.c **** {
 507              		.loc 1 550 0
 508              		.cfi_startproc
 509              	.LVL27:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 510              		.loc 1 551 0
 511 0000 044B     		ldr	r3, .L47
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 512              		.loc 1 552 0
 513 0002 0004     		lsl	r0, r0, #16
 514              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 515              		.loc 1 551 0
 516 0004 1A68     		ldr	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC.c **** }
 517              		.loc 1 553 0
 518              		@ sp needed for prologue
 551:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 519              		.loc 1 551 0
 520 0006 1104     		lsl	r1, r2, #16
 521 0008 0A0C     		lsr	r2, r1, #16
 522 000a 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 523              		.loc 1 552 0
 524 000c 1968     		ldr	r1, [r3]
 525 000e 0843     		orr	r0, r1
 526 0010 1860     		str	r0, [r3]
 527              		.loc 1 553 0
 528 0012 7047     		bx	lr
 529              	.L48:
 530              		.align	2
 531              	.L47:
 532 0014 18001A40 		.word	1075445784
 533              		.cfi_endproc
 534              	.LFE10:
 535              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 536              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 537              		.align	2
 538              		.global	ADC_SetLimitMask
 539              		.code	16
 540              		.thumb_func
 541              		.type	ADC_SetLimitMask, %function
 542              	ADC_SetLimitMask:
 543              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC.c **** 
 555:.\Generated_Source\PSoC4/ADC.c **** 
 556:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC.c **** *
 560:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC.c **** *
 563:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 21


 565:.\Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC.c **** *
 569:.\Generated_Source\PSoC4/ADC.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC.c **** *  None.
 571:.\Generated_Source\PSoC4/ADC.c **** *
 572:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 573:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC.c **** {
 544              		.loc 1 574 0
 545              		.cfi_startproc
 546              	.LVL29:
 575:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 547              		.loc 1 575 0
 548 0000 0123     		mov	r3, #1
 549 0002 0249     		ldr	r1, .L50
 550 0004 1840     		and	r0, r3
 551              	.LVL30:
 552 0006 0860     		str	r0, [r1]
 576:.\Generated_Source\PSoC4/ADC.c **** }
 553              		.loc 1 576 0
 554              		@ sp needed for prologue
 555 0008 7047     		bx	lr
 556              	.L51:
 557 000a C046     		.align	2
 558              	.L50:
 559 000c 38021A40 		.word	1075446328
 560              		.cfi_endproc
 561              	.LFE11:
 562              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 563              		.section	.text.ADC_SetSatMask,"ax",%progbits
 564              		.align	2
 565              		.global	ADC_SetSatMask
 566              		.code	16
 567              		.thumb_func
 568              		.type	ADC_SetSatMask, %function
 569              	ADC_SetSatMask:
 570              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC.c **** 
 578:.\Generated_Source\PSoC4/ADC.c **** 
 579:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 581:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC.c **** *
 583:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC.c **** *
 586:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 588:.\Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC.c **** *
 592:.\Generated_Source\PSoC4/ADC.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 22


 595:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC.c **** {
 571              		.loc 1 597 0
 572              		.cfi_startproc
 573              	.LVL31:
 598:.\Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 574              		.loc 1 598 0
 575 0000 0123     		mov	r3, #1
 576 0002 0249     		ldr	r1, .L53
 577 0004 1840     		and	r0, r3
 578              	.LVL32:
 579 0006 0860     		str	r0, [r1]
 599:.\Generated_Source\PSoC4/ADC.c **** }
 580              		.loc 1 599 0
 581              		@ sp needed for prologue
 582 0008 7047     		bx	lr
 583              	.L54:
 584 000a C046     		.align	2
 585              	.L53:
 586 000c 28021A40 		.word	1075446312
 587              		.cfi_endproc
 588              	.LFE12:
 589              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 590              		.section	.text.ADC_SetOffset,"ax",%progbits
 591              		.align	2
 592              		.global	ADC_SetOffset
 593              		.code	16
 594              		.thumb_func
 595              		.type	ADC_SetOffset, %function
 596              	ADC_SetOffset:
 597              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC.c **** 
 601:.\Generated_Source\PSoC4/ADC.c **** 
 602:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 604:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 605:.\Generated_Source\PSoC4/ADC.c **** *
 606:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC.c **** *
 612:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC.c **** *
 617:.\Generated_Source\PSoC4/ADC.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC.c **** *
 620:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC.c **** *
 623:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 23


 625:.\Generated_Source\PSoC4/ADC.c **** {
 598              		.loc 1 625 0
 599              		.cfi_startproc
 600              	.LVL33:
 601 0000 38B5     		push	{r3, r4, r5, lr}
 602              	.LCFI5:
 603              		.cfi_def_cfa_offset 16
 604              		.cfi_offset 3, -16
 605              		.cfi_offset 4, -12
 606              		.cfi_offset 5, -8
 607              		.cfi_offset 14, -4
 608              		.loc 1 625 0
 609 0002 041C     		mov	r4, r0
 610 0004 0D1C     		mov	r5, r1
 626:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 611              		.loc 1 627 0
 612 0006 0028     		cmp	r0, #0
 613 0008 02D0     		beq	.L56
 614              		.loc 1 627 0 is_stmt 0 discriminator 1
 615 000a 0020     		mov	r0, #0
 616              	.LVL34:
 617 000c FFF7FEFF 		bl	CyHalt
 618              	.LVL35:
 619              	.L56:
 628:.\Generated_Source\PSoC4/ADC.c **** 
 629:.\Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 620              		.loc 1 629 0 is_stmt 1
 621 0010 014B     		ldr	r3, .L60
 622 0012 6000     		lsl	r0, r4, #1
 623 0014 C552     		strh	r5, [r0, r3]
 630:.\Generated_Source\PSoC4/ADC.c **** }
 624              		.loc 1 630 0
 625              		@ sp needed for prologue
 626              	.LVL36:
 627 0016 38BD     		pop	{r3, r4, r5, pc}
 628              	.L61:
 629              		.align	2
 630              	.L60:
 631 0018 00000000 		.word	ADC_offset
 632              		.cfi_endproc
 633              	.LFE13:
 634              		.size	ADC_SetOffset, .-ADC_SetOffset
 635              		.section	.text.ADC_SetGain,"ax",%progbits
 636              		.align	2
 637              		.global	ADC_SetGain
 638              		.code	16
 639              		.thumb_func
 640              		.type	ADC_SetGain, %function
 641              	ADC_SetGain:
 642              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC.c **** 
 632:.\Generated_Source\PSoC4/ADC.c **** 
 633:.\Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 635:.\Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 24


 637:.\Generated_Source\PSoC4/ADC.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 644:.\Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 645:.\Generated_Source\PSoC4/ADC.c **** *
 646:.\Generated_Source\PSoC4/ADC.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC.c **** *
 650:.\Generated_Source\PSoC4/ADC.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC.c **** *
 653:.\Generated_Source\PSoC4/ADC.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC.c **** *
 657:.\Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC.c **** {
 643              		.loc 1 659 0
 644              		.cfi_startproc
 645              	.LVL37:
 646 0000 38B5     		push	{r3, r4, r5, lr}
 647              	.LCFI6:
 648              		.cfi_def_cfa_offset 16
 649              		.cfi_offset 3, -16
 650              		.cfi_offset 4, -12
 651              		.cfi_offset 5, -8
 652              		.cfi_offset 14, -4
 653              		.loc 1 659 0
 654 0002 041C     		mov	r4, r0
 655 0004 0D1C     		mov	r5, r1
 660:.\Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 656              		.loc 1 661 0
 657 0006 0028     		cmp	r0, #0
 658 0008 02D0     		beq	.L63
 659              		.loc 1 661 0 is_stmt 0 discriminator 1
 660 000a 0020     		mov	r0, #0
 661              	.LVL38:
 662 000c FFF7FEFF 		bl	CyHalt
 663              	.LVL39:
 664              	.L63:
 662:.\Generated_Source\PSoC4/ADC.c **** 
 663:.\Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 665              		.loc 1 663 0 is_stmt 1
 666 0010 014B     		ldr	r3, .L67
 667 0012 A000     		lsl	r0, r4, #2
 668 0014 C550     		str	r5, [r0, r3]
 664:.\Generated_Source\PSoC4/ADC.c **** }
 669              		.loc 1 664 0
 670              		@ sp needed for prologue
 671              	.LVL40:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 25


 672              	.LVL41:
 673 0016 38BD     		pop	{r3, r4, r5, pc}
 674              	.L68:
 675              		.align	2
 676              	.L67:
 677 0018 00000000 		.word	ADC_countsPer10Volt
 678              		.cfi_endproc
 679              	.LFE14:
 680              		.size	ADC_SetGain, .-ADC_SetGain
 681              		.global	__aeabi_idiv
 682              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 683              		.align	2
 684              		.global	ADC_CountsTo_mVolts
 685              		.code	16
 686              		.thumb_func
 687              		.type	ADC_CountsTo_mVolts, %function
 688              	ADC_CountsTo_mVolts:
 689              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC.c **** 
 666:.\Generated_Source\PSoC4/ADC.c **** 
 667:.\Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 668:.\Generated_Source\PSoC4/ADC.c **** 
 669:.\Generated_Source\PSoC4/ADC.c **** 
 670:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC.c ****     *
 674:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC.c ****     *
 678:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC.c ****     *
 682:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC.c ****     *
 685:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC.c ****     *
 690:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC.c ****     {
 690              		.loc 1 692 0
 691              		.cfi_startproc
 692              	.LVL42:
 693 0000 38B5     		push	{r3, r4, r5, lr}
 694              	.LCFI7:
 695              		.cfi_def_cfa_offset 16
 696              		.cfi_offset 3, -16
 697              		.cfi_offset 4, -12
 698              		.cfi_offset 5, -8
 699              		.cfi_offset 14, -4
 700              		.loc 1 692 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 26


 701 0002 041C     		mov	r4, r0
 702 0004 0D1C     		mov	r5, r1
 693:.\Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC.c **** 
 695:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 703              		.loc 1 696 0
 704 0006 0028     		cmp	r0, #0
 705 0008 1AD1     		bne	.L76
 706              	.LVL43:
 707              	.L70:
 697:.\Generated_Source\PSoC4/ADC.c **** 
 698:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 701:.\Generated_Source\PSoC4/ADC.c ****             {
 702:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 703:.\Generated_Source\PSoC4/ADC.c ****             }    
 704:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC.c **** 
 706:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 708              		.loc 1 707 0
 709 000a 0F4B     		ldr	r3, .L77
 710 000c 6200     		lsl	r2, r4, #1
 711 000e D15A     		ldrh	r1, [r2, r3]
 708:.\Generated_Source\PSoC4/ADC.c **** 
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 712              		.loc 1 709 0
 713 0010 0E4A     		ldr	r2, .L77+4
 707:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 714              		.loc 1 707 0
 715 0012 681A     		sub	r0, r5, r1
 716 0014 05B2     		sxth	r5, r0
 717              	.LVL44:
 718              		.loc 1 709 0
 719 0016 6A43     		mul	r2, r5
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 720              		.loc 1 710 0
 721 0018 0D4B     		ldr	r3, .L77+8
 722 001a A400     		lsl	r4, r4, #2
 723              	.LVL45:
 724 001c 002D     		cmp	r5, #0
 725 001e 09DD     		ble	.L71
 726              		.loc 1 710 0 is_stmt 0 discriminator 1
 727 0020 1D59     		ldr	r5, [r3, r4]
 728 0022 E90F     		lsr	r1, r5, #31
 729 0024 4819     		add	r0, r1, r5
 730              	.LVL46:
 731 0026 4010     		asr	r0, r0, #1
 732              	.L72:
 711:.\Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 733              		.loc 1 711 0 is_stmt 1
 734 0028 1959     		ldr	r1, [r3, r4]
 735              	.LVL47:
 709:.\Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ? 
 736              		.loc 1 709 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 27


 737 002a 1018     		add	r0, r2, r0
 738              	.LVL48:
 739              		.loc 1 711 0
 740 002c FFF7FEFF 		bl	__aeabi_idiv
 741              	.LVL49:
 712:.\Generated_Source\PSoC4/ADC.c **** 
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 714:.\Generated_Source\PSoC4/ADC.c ****     }
 742              		.loc 1 714 0
 743              		@ sp needed for prologue
 713:.\Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 744              		.loc 1 713 0
 745 0030 00B2     		sxth	r0, r0
 746              		.loc 1 714 0
 747 0032 38BD     		pop	{r3, r4, r5, pc}
 748              	.LVL50:
 749              	.L71:
 710:.\Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) )) 
 750              		.loc 1 710 0 discriminator 2
 751 0034 1959     		ldr	r1, [r3, r4]
 752 0036 C80F     		lsr	r0, r1, #31
 753              	.LVL51:
 754 0038 4518     		add	r5, r0, r1
 755              	.LVL52:
 756 003a 6910     		asr	r1, r5, #1
 757 003c 4842     		neg	r0, r1
 758 003e F3E7     		b	.L72
 759              	.LVL53:
 760              	.L76:
 696:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 761              		.loc 1 696 0 discriminator 1
 762 0040 0020     		mov	r0, #0
 763              	.LVL54:
 764 0042 FFF7FEFF 		bl	CyHalt
 765              	.LVL55:
 766 0046 E0E7     		b	.L70
 767              	.L78:
 768              		.align	2
 769              	.L77:
 770 0048 00000000 		.word	ADC_offset
 771 004c 10270000 		.word	10000
 772 0050 00000000 		.word	ADC_countsPer10Volt
 773              		.cfi_endproc
 774              	.LFE15:
 775              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 776              		.global	__aeabi_lmul
 777              		.global	__aeabi_ldivmod
 778              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 779              		.align	2
 780              		.global	ADC_CountsTo_uVolts
 781              		.code	16
 782              		.thumb_func
 783              		.type	ADC_CountsTo_uVolts, %function
 784              	ADC_CountsTo_uVolts:
 785              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC.c **** 
 716:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 28


 717:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC.c ****     *
 721:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 723:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 724:.\Generated_Source\PSoC4/ADC.c ****     *
 725:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC.c ****     *
 729:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC.c ****     *
 732:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC.c ****     *
 737:.\Generated_Source\PSoC4/ADC.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC.c ****     *
 744:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC.c ****     {
 786              		.loc 1 746 0
 787              		.cfi_startproc
 788              	.LVL56:
 789 0000 38B5     		push	{r3, r4, r5, lr}
 790              	.LCFI8:
 791              		.cfi_def_cfa_offset 16
 792              		.cfi_offset 3, -16
 793              		.cfi_offset 4, -12
 794              		.cfi_offset 5, -8
 795              		.cfi_offset 14, -4
 796              		.loc 1 746 0
 797 0002 041C     		mov	r4, r0
 798 0004 0D1C     		mov	r5, r1
 747:.\Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC.c **** 
 749:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 799              		.loc 1 750 0
 800 0006 0028     		cmp	r0, #0
 801 0008 02D0     		beq	.L80
 802              		.loc 1 750 0 is_stmt 0 discriminator 1
 803 000a 0020     		mov	r0, #0
 804              	.LVL57:
 805 000c FFF7FEFF 		bl	CyHalt
 806              	.LVL58:
 807              	.L80:
 751:.\Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 29


 752:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 755:.\Generated_Source\PSoC4/ADC.c ****             {
 756:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 757:.\Generated_Source\PSoC4/ADC.c ****             }    
 758:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 759:.\Generated_Source\PSoC4/ADC.c **** 
 760:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 808              		.loc 1 761 0 is_stmt 1
 809 0010 0B4B     		ldr	r3, .L84+8
 810 0012 6200     		lsl	r2, r4, #1
 811 0014 D05A     		ldrh	r0, [r2, r3]
 762:.\Generated_Source\PSoC4/ADC.c **** 
 763:.\Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 812              		.loc 1 763 0
 813 0016 A400     		lsl	r4, r4, #2
 814              	.LVL59:
 761:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 815              		.loc 1 761 0
 816 0018 291A     		sub	r1, r5, r0
 817              	.LVL60:
 818              		.loc 1 763 0
 819 001a 0A4D     		ldr	r5, .L84+12
 820 001c 08B2     		sxth	r0, r1
 821 001e 6459     		ldr	r4, [r4, r5]
 822              	.LVL61:
 823 0020 064B     		ldr	r3, .L84+4
 824 0022 054A     		ldr	r2, .L84
 825 0024 C117     		asr	r1, r0, #31
 826              	.LVL62:
 827 0026 FFF7FEFF 		bl	__aeabi_lmul
 828              	.LVL63:
 829 002a E317     		asr	r3, r4, #31
 830 002c 221C     		mov	r2, r4
 831 002e FFF7FEFF 		bl	__aeabi_ldivmod
 832              	.LVL64:
 764:.\Generated_Source\PSoC4/ADC.c **** 
 765:.\Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 766:.\Generated_Source\PSoC4/ADC.c ****     }
 833              		.loc 1 766 0
 834              		@ sp needed for prologue
 835 0032 38BD     		pop	{r3, r4, r5, pc}
 836              	.L85:
 837 0034 C046C046 		.align	3
 838              	.L84:
 839 0038 80969800 		.word	10000000
 840 003c 00000000 		.word	0
 841 0040 00000000 		.word	ADC_offset
 842 0044 00000000 		.word	ADC_countsPer10Volt
 843              		.cfi_endproc
 844              	.LFE16:
 845              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 846              		.global	__aeabi_i2f
 847              		.global	__aeabi_fmul
 848              		.global	__aeabi_fdiv
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 30


 849              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 850              		.align	2
 851              		.global	ADC_CountsTo_Volts
 852              		.code	16
 853              		.thumb_func
 854              		.type	ADC_CountsTo_Volts, %function
 855              	ADC_CountsTo_Volts:
 856              	.LFB17:
 767:.\Generated_Source\PSoC4/ADC.c **** 
 768:.\Generated_Source\PSoC4/ADC.c **** 
 769:.\Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC.c ****     *
 773:.\Generated_Source\PSoC4/ADC.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC.c ****     *
 777:.\Generated_Source\PSoC4/ADC.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC.c ****     *
 781:.\Generated_Source\PSoC4/ADC.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC.c ****     *
 784:.\Generated_Source\PSoC4/ADC.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC.c ****     *
 789:.\Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC.c ****     {
 857              		.loc 1 791 0
 858              		.cfi_startproc
 859              	.LVL65:
 860 0000 38B5     		push	{r3, r4, r5, lr}
 861              	.LCFI9:
 862              		.cfi_def_cfa_offset 16
 863              		.cfi_offset 3, -16
 864              		.cfi_offset 4, -12
 865              		.cfi_offset 5, -8
 866              		.cfi_offset 14, -4
 867              		.loc 1 791 0
 868 0002 041C     		mov	r4, r0
 869 0004 0D1C     		mov	r5, r1
 792:.\Generated_Source\PSoC4/ADC.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC.c **** 
 794:.\Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 870              		.loc 1 795 0
 871 0006 0028     		cmp	r0, #0
 872 0008 02D0     		beq	.L87
 873              		.loc 1 795 0 is_stmt 0 discriminator 1
 874 000a 0020     		mov	r0, #0
 875              	.LVL66:
 876 000c FFF7FEFF 		bl	CyHalt
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 31


 877              	.LVL67:
 878              	.L87:
 796:.\Generated_Source\PSoC4/ADC.c **** 
 797:.\Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 800:.\Generated_Source\PSoC4/ADC.c ****             {
 801:.\Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 802:.\Generated_Source\PSoC4/ADC.c ****             }    
 803:.\Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC.c **** 
 805:.\Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 879              		.loc 1 806 0 is_stmt 1
 880 0010 0A4B     		ldr	r3, .L91
 881 0012 6200     		lsl	r2, r4, #1
 882 0014 D05A     		ldrh	r0, [r2, r3]
 807:.\Generated_Source\PSoC4/ADC.c **** 
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 883              		.loc 1 808 0
 884 0016 A400     		lsl	r4, r4, #2
 885              	.LVL68:
 806:.\Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 886              		.loc 1 806 0
 887 0018 291A     		sub	r1, r5, r0
 888              	.LVL69:
 889              		.loc 1 808 0
 890 001a 08B2     		sxth	r0, r1
 891 001c FFF7FEFF 		bl	__aeabi_i2f
 892              	.LVL70:
 893 0020 0749     		ldr	r1, .L91+4
 894 0022 FFF7FEFF 		bl	__aeabi_fmul
 895              	.LVL71:
 896 0026 074D     		ldr	r5, .L91+8
 809:.\Generated_Source\PSoC4/ADC.c **** 
 810:.\Generated_Source\PSoC4/ADC.c ****         return( volts );
 811:.\Generated_Source\PSoC4/ADC.c ****     }
 897              		.loc 1 811 0
 898              		@ sp needed for prologue
 808:.\Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 899              		.loc 1 808 0
 900 0028 6559     		ldr	r5, [r4, r5]
 901 002a 041C     		add	r4, r0, #0
 902 002c 281C     		mov	r0, r5
 903 002e FFF7FEFF 		bl	__aeabi_i2f
 904              	.LVL72:
 905 0032 011C     		add	r1, r0, #0
 906 0034 201C     		add	r0, r4, #0
 907 0036 FFF7FEFF 		bl	__aeabi_fdiv
 908              	.LVL73:
 909              		.loc 1 811 0
 910 003a 38BD     		pop	{r3, r4, r5, pc}
 911              	.L92:
 912              		.align	2
 913              	.L91:
 914 003c 00000000 		.word	ADC_offset
 915 0040 00002041 		.word	1092616192
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 32


 916 0044 00000000 		.word	ADC_countsPer10Volt
 917              		.cfi_endproc
 918              	.LFE17:
 919              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 920              		.comm	ADC_countsPer10Volt,4,4
 921              		.comm	ADC_offset,2,4
 922              		.global	ADC_initVar
 923              		.bss
 924              		.set	.LANCHOR0,. + 0
 925              		.type	ADC_initVar, %object
 926              		.size	ADC_initVar, 1
 927              	ADC_initVar:
 928 0000 00       		.space	1
 929              		.text
 930              	.Letext0:
 931              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 932              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 933              		.section	.debug_info,"",%progbits
 934              	.Ldebug_info0:
 935 0000 EF050000 		.4byte	0x5ef
 936 0004 0200     		.2byte	0x2
 937 0006 00000000 		.4byte	.Ldebug_abbrev0
 938 000a 04       		.byte	0x4
 939 000b 01       		.uleb128 0x1
 940 000c 59020000 		.4byte	.LASF62
 941 0010 01       		.byte	0x1
 942 0011 B9020000 		.4byte	.LASF63
 943 0015 49010000 		.4byte	.LASF64
 944 0019 00000000 		.4byte	.Ldebug_ranges0+0
 945 001d 00000000 		.4byte	0
 946 0021 00000000 		.4byte	0
 947 0025 00000000 		.4byte	.Ldebug_line0
 948 0029 02       		.uleb128 0x2
 949 002a 08       		.byte	0x8
 950 002b 07       		.byte	0x7
 951 002c 32000000 		.4byte	.LASF0
 952 0030 02       		.uleb128 0x2
 953 0031 08       		.byte	0x8
 954 0032 05       		.byte	0x5
 955 0033 5A000000 		.4byte	.LASF1
 956 0037 03       		.uleb128 0x3
 957 0038 04       		.byte	0x4
 958 0039 05       		.byte	0x5
 959 003a 696E7400 		.ascii	"int\000"
 960 003e 02       		.uleb128 0x2
 961 003f 02       		.byte	0x2
 962 0040 05       		.byte	0x5
 963 0041 F1020000 		.4byte	.LASF2
 964 0045 02       		.uleb128 0x2
 965 0046 01       		.byte	0x1
 966 0047 06       		.byte	0x6
 967 0048 68000000 		.4byte	.LASF3
 968 004c 02       		.uleb128 0x2
 969 004d 01       		.byte	0x1
 970 004e 08       		.byte	0x8
 971 004f D8020000 		.4byte	.LASF4
 972 0053 02       		.uleb128 0x2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 33


 973 0054 02       		.byte	0x2
 974 0055 07       		.byte	0x7
 975 0056 84010000 		.4byte	.LASF5
 976 005a 02       		.uleb128 0x2
 977 005b 04       		.byte	0x4
 978 005c 05       		.byte	0x5
 979 005d 8B000000 		.4byte	.LASF6
 980 0061 02       		.uleb128 0x2
 981 0062 04       		.byte	0x4
 982 0063 07       		.byte	0x7
 983 0064 18010000 		.4byte	.LASF7
 984 0068 02       		.uleb128 0x2
 985 0069 04       		.byte	0x4
 986 006a 07       		.byte	0x7
 987 006b 04010000 		.4byte	.LASF8
 988 006f 04       		.uleb128 0x4
 989 0070 BC000000 		.4byte	.LASF9
 990 0074 02       		.byte	0x2
 991 0075 5B       		.byte	0x5b
 992 0076 4C000000 		.4byte	0x4c
 993 007a 04       		.uleb128 0x4
 994 007b 00000000 		.4byte	.LASF10
 995 007f 02       		.byte	0x2
 996 0080 5C       		.byte	0x5c
 997 0081 53000000 		.4byte	0x53
 998 0085 04       		.uleb128 0x4
 999 0086 D3000000 		.4byte	.LASF11
 1000 008a 02       		.byte	0x2
 1001 008b 5D       		.byte	0x5d
 1002 008c 61000000 		.4byte	0x61
 1003 0090 04       		.uleb128 0x4
 1004 0091 50030000 		.4byte	.LASF12
 1005 0095 02       		.byte	0x2
 1006 0096 5F       		.byte	0x5f
 1007 0097 3E000000 		.4byte	0x3e
 1008 009b 04       		.uleb128 0x4
 1009 009c 7B000000 		.4byte	.LASF13
 1010 00a0 02       		.byte	0x2
 1011 00a1 60       		.byte	0x60
 1012 00a2 5A000000 		.4byte	0x5a
 1013 00a6 04       		.uleb128 0x4
 1014 00a7 C3010000 		.4byte	.LASF14
 1015 00ab 02       		.byte	0x2
 1016 00ac 61       		.byte	0x61
 1017 00ad B1000000 		.4byte	0xb1
 1018 00b1 02       		.uleb128 0x2
 1019 00b2 04       		.byte	0x4
 1020 00b3 04       		.byte	0x4
 1021 00b4 35020000 		.4byte	.LASF15
 1022 00b8 02       		.uleb128 0x2
 1023 00b9 08       		.byte	0x8
 1024 00ba 04       		.byte	0x4
 1025 00bb CC000000 		.4byte	.LASF16
 1026 00bf 04       		.uleb128 0x4
 1027 00c0 02020000 		.4byte	.LASF17
 1028 00c4 02       		.byte	0x2
 1029 00c5 66       		.byte	0x66
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 34


 1030 00c6 30000000 		.4byte	0x30
 1031 00ca 02       		.uleb128 0x2
 1032 00cb 01       		.byte	0x1
 1033 00cc 08       		.byte	0x8
 1034 00cd 0F030000 		.4byte	.LASF18
 1035 00d1 04       		.uleb128 0x4
 1036 00d2 BD010000 		.4byte	.LASF19
 1037 00d6 02       		.byte	0x2
 1038 00d7 F2       		.byte	0xf2
 1039 00d8 DC000000 		.4byte	0xdc
 1040 00dc 05       		.uleb128 0x5
 1041 00dd 85000000 		.4byte	0x85
 1042 00e1 06       		.uleb128 0x6
 1043 00e2 14030000 		.4byte	.LASF20
 1044 00e6 02       		.byte	0x2
 1045 00e7 0201     		.2byte	0x102
 1046 00e9 ED000000 		.4byte	0xed
 1047 00ed 07       		.uleb128 0x7
 1048 00ee 04       		.byte	0x4
 1049 00ef F3000000 		.4byte	0xf3
 1050 00f3 08       		.uleb128 0x8
 1051 00f4 01       		.byte	0x1
 1052 00f5 02       		.uleb128 0x2
 1053 00f6 04       		.byte	0x4
 1054 00f7 07       		.byte	0x7
 1055 00f8 CB010000 		.4byte	.LASF21
 1056 00fc 09       		.uleb128 0x9
 1057 00fd 01       		.byte	0x1
 1058 00fe 29000000 		.4byte	.LASF25
 1059 0102 01       		.byte	0x1
 1060 0103 5F       		.byte	0x5f
 1061 0104 01       		.byte	0x1
 1062 0105 00000000 		.4byte	.LFB1
 1063 0109 D4000000 		.4byte	.LFE1
 1064 010d 00000000 		.4byte	.LLST0
 1065 0111 01       		.byte	0x1
 1066 0112 69010000 		.4byte	0x169
 1067 0116 0A       		.uleb128 0xa
 1068 0117 04030000 		.4byte	.LASF22
 1069 011b 01       		.byte	0x1
 1070 011c 61       		.byte	0x61
 1071 011d 85000000 		.4byte	0x85
 1072 0121 20000000 		.4byte	.LLST1
 1073 0125 0A       		.uleb128 0xa
 1074 0126 3F010000 		.4byte	.LASF23
 1075 012a 01       		.byte	0x1
 1076 012b 62       		.byte	0x62
 1077 012c 85000000 		.4byte	0x85
 1078 0130 40000000 		.4byte	.LLST2
 1079 0134 0B       		.uleb128 0xb
 1080 0135 0F000000 		.4byte	.LASF24
 1081 0139 01       		.byte	0x1
 1082 013a 63       		.byte	0x63
 1083 013b 9B000000 		.4byte	0x9b
 1084 013f 0010     		.2byte	0x1000
 1085 0141 0C       		.uleb128 0xc
 1086 0142 0A000000 		.4byte	.LVL0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 35


 1087 0146 98050000 		.4byte	0x598
 1088 014a 59010000 		.4byte	0x159
 1089 014e 0D       		.uleb128 0xd
 1090 014f 01       		.byte	0x1
 1091 0150 51       		.byte	0x51
 1092 0151 01       		.byte	0x1
 1093 0152 33       		.byte	0x33
 1094 0153 0D       		.uleb128 0xd
 1095 0154 01       		.byte	0x1
 1096 0155 50       		.byte	0x50
 1097 0156 01       		.byte	0x1
 1098 0157 3E       		.byte	0x3e
 1099 0158 00       		.byte	0
 1100 0159 0E       		.uleb128 0xe
 1101 015a 12000000 		.4byte	.LVL1
 1102 015e B1050000 		.4byte	0x5b1
 1103 0162 0D       		.uleb128 0xd
 1104 0163 01       		.byte	0x1
 1105 0164 50       		.byte	0x50
 1106 0165 01       		.byte	0x1
 1107 0166 3E       		.byte	0x3e
 1108 0167 00       		.byte	0
 1109 0168 00       		.byte	0
 1110 0169 0F       		.uleb128 0xf
 1111 016a 01       		.byte	0x1
 1112 016b 45030000 		.4byte	.LASF26
 1113 016f 01       		.byte	0x1
 1114 0170 1501     		.2byte	0x115
 1115 0172 01       		.byte	0x1
 1116 0173 00000000 		.4byte	.LFB2
 1117 0177 1C000000 		.4byte	.LFE2
 1118 017b 6C000000 		.4byte	.LLST3
 1119 017f 01       		.byte	0x1
 1120 0180 94010000 		.4byte	0x194
 1121 0184 0E       		.uleb128 0xe
 1122 0185 14000000 		.4byte	.LVL7
 1123 0189 CE050000 		.4byte	0x5ce
 1124 018d 0D       		.uleb128 0xd
 1125 018e 01       		.byte	0x1
 1126 018f 50       		.byte	0x50
 1127 0190 01       		.byte	0x1
 1128 0191 3A       		.byte	0x3a
 1129 0192 00       		.byte	0
 1130 0193 00       		.byte	0
 1131 0194 09       		.uleb128 0x9
 1132 0195 01       		.byte	0x1
 1133 0196 81000000 		.4byte	.LASF27
 1134 019a 01       		.byte	0x1
 1135 019b 40       		.byte	0x40
 1136 019c 01       		.byte	0x1
 1137 019d 00000000 		.4byte	.LFB0
 1138 01a1 1C000000 		.4byte	.LFE0
 1139 01a5 8C000000 		.4byte	.LLST4
 1140 01a9 01       		.byte	0x1
 1141 01aa C1010000 		.4byte	0x1c1
 1142 01ae 10       		.uleb128 0x10
 1143 01af 0E000000 		.4byte	.LVL8
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 36


 1144 01b3 FC000000 		.4byte	0xfc
 1145 01b7 10       		.uleb128 0x10
 1146 01b8 16000000 		.4byte	.LVL9
 1147 01bc 69010000 		.4byte	0x169
 1148 01c0 00       		.byte	0
 1149 01c1 11       		.uleb128 0x11
 1150 01c2 01       		.byte	0x1
 1151 01c3 FB020000 		.4byte	.LASF28
 1152 01c7 01       		.byte	0x1
 1153 01c8 2C01     		.2byte	0x12c
 1154 01ca 01       		.byte	0x1
 1155 01cb 00000000 		.4byte	.LFB3
 1156 01cf 10000000 		.4byte	.LFE3
 1157 01d3 02       		.byte	0x2
 1158 01d4 7D       		.byte	0x7d
 1159 01d5 00       		.sleb128 0
 1160 01d6 01       		.byte	0x1
 1161 01d7 11       		.uleb128 0x11
 1162 01d8 01       		.byte	0x1
 1163 01d9 49000000 		.4byte	.LASF29
 1164 01dd 01       		.byte	0x1
 1165 01de 4601     		.2byte	0x146
 1166 01e0 01       		.byte	0x1
 1167 01e1 00000000 		.4byte	.LFB4
 1168 01e5 14000000 		.4byte	.LFE4
 1169 01e9 02       		.byte	0x2
 1170 01ea 7D       		.byte	0x7d
 1171 01eb 00       		.sleb128 0
 1172 01ec 01       		.byte	0x1
 1173 01ed 11       		.uleb128 0x11
 1174 01ee 01       		.byte	0x1
 1175 01ef A6010000 		.4byte	.LASF30
 1176 01f3 01       		.byte	0x1
 1177 01f4 5F01     		.2byte	0x15f
 1178 01f6 01       		.byte	0x1
 1179 01f7 00000000 		.4byte	.LFB5
 1180 01fb 14000000 		.4byte	.LFE5
 1181 01ff 02       		.byte	0x2
 1182 0200 7D       		.byte	0x7d
 1183 0201 00       		.sleb128 0
 1184 0202 01       		.byte	0x1
 1185 0203 12       		.uleb128 0x12
 1186 0204 01       		.byte	0x1
 1187 0205 EE010000 		.4byte	.LASF32
 1188 0209 01       		.byte	0x1
 1189 020a 8101     		.2byte	0x181
 1190 020c 01       		.byte	0x1
 1191 020d 85000000 		.4byte	0x85
 1192 0211 00000000 		.4byte	.LFB6
 1193 0215 2C000000 		.4byte	.LFE6
 1194 0219 AC000000 		.4byte	.LLST5
 1195 021d 01       		.byte	0x1
 1196 021e 43020000 		.4byte	0x243
 1197 0222 13       		.uleb128 0x13
 1198 0223 EB000000 		.4byte	.LASF34
 1199 0227 01       		.byte	0x1
 1200 0228 8101     		.2byte	0x181
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 37


 1201 022a 85000000 		.4byte	0x85
 1202 022e CC000000 		.4byte	.LLST6
 1203 0232 14       		.uleb128 0x14
 1204 0233 74000000 		.4byte	.LASF31
 1205 0237 01       		.byte	0x1
 1206 0238 8301     		.2byte	0x183
 1207 023a 85000000 		.4byte	0x85
 1208 023e F8000000 		.4byte	.LLST7
 1209 0242 00       		.byte	0
 1210 0243 12       		.uleb128 0x12
 1211 0244 01       		.byte	0x1
 1212 0245 6B030000 		.4byte	.LASF33
 1213 0249 01       		.byte	0x1
 1214 024a B701     		.2byte	0x1b7
 1215 024c 01       		.byte	0x1
 1216 024d 90000000 		.4byte	0x90
 1217 0251 00000000 		.4byte	.LFB7
 1218 0255 20000000 		.4byte	.LFE7
 1219 0259 22010000 		.4byte	.LLST8
 1220 025d 01       		.byte	0x1
 1221 025e 92020000 		.4byte	0x292
 1222 0262 13       		.uleb128 0x13
 1223 0263 0A030000 		.4byte	.LASF35
 1224 0267 01       		.byte	0x1
 1225 0268 B701     		.2byte	0x1b7
 1226 026a 85000000 		.4byte	0x85
 1227 026e 42010000 		.4byte	.LLST9
 1228 0272 14       		.uleb128 0x14
 1229 0273 64030000 		.4byte	.LASF36
 1230 0277 01       		.byte	0x1
 1231 0278 B901     		.2byte	0x1b9
 1232 027a 85000000 		.4byte	0x85
 1233 027e 7C010000 		.4byte	.LLST10
 1234 0282 0E       		.uleb128 0xe
 1235 0283 18000000 		.4byte	.LVL22
 1236 0287 E2050000 		.4byte	0x5e2
 1237 028b 0D       		.uleb128 0xd
 1238 028c 01       		.byte	0x1
 1239 028d 50       		.byte	0x50
 1240 028e 01       		.byte	0x1
 1241 028f 30       		.byte	0x30
 1242 0290 00       		.byte	0
 1243 0291 00       		.byte	0
 1244 0292 15       		.uleb128 0x15
 1245 0293 01       		.byte	0x1
 1246 0294 19020000 		.4byte	.LASF37
 1247 0298 01       		.byte	0x1
 1248 0299 E401     		.2byte	0x1e4
 1249 029b 01       		.byte	0x1
 1250 029c 00000000 		.4byte	.LFB8
 1251 02a0 10000000 		.4byte	.LFE8
 1252 02a4 02       		.byte	0x2
 1253 02a5 7D       		.byte	0x7d
 1254 02a6 00       		.sleb128 0
 1255 02a7 01       		.byte	0x1
 1256 02a8 BD020000 		.4byte	0x2bd
 1257 02ac 13       		.uleb128 0x13
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 38


 1258 02ad DA000000 		.4byte	.LASF38
 1259 02b1 01       		.byte	0x1
 1260 02b2 E401     		.2byte	0x1e4
 1261 02b4 85000000 		.4byte	0x85
 1262 02b8 95010000 		.4byte	.LLST11
 1263 02bc 00       		.byte	0
 1264 02bd 15       		.uleb128 0x15
 1265 02be 01       		.byte	0x1
 1266 02bf A2020000 		.4byte	.LASF39
 1267 02c3 01       		.byte	0x1
 1268 02c4 1002     		.2byte	0x210
 1269 02c6 01       		.byte	0x1
 1270 02c7 00000000 		.4byte	.LFB9
 1271 02cb 1C000000 		.4byte	.LFE9
 1272 02cf 02       		.byte	0x2
 1273 02d0 7D       		.byte	0x7d
 1274 02d1 00       		.sleb128 0
 1275 02d2 01       		.byte	0x1
 1276 02d3 E8020000 		.4byte	0x2e8
 1277 02d7 13       		.uleb128 0x13
 1278 02d8 D4010000 		.4byte	.LASF40
 1279 02dc 01       		.byte	0x1
 1280 02dd 1002     		.2byte	0x210
 1281 02df 85000000 		.4byte	0x85
 1282 02e3 B6010000 		.4byte	.LLST12
 1283 02e7 00       		.byte	0
 1284 02e8 15       		.uleb128 0x15
 1285 02e9 01       		.byte	0x1
 1286 02ea DD010000 		.4byte	.LASF41
 1287 02ee 01       		.byte	0x1
 1288 02ef 2502     		.2byte	0x225
 1289 02f1 01       		.byte	0x1
 1290 02f2 00000000 		.4byte	.LFB10
 1291 02f6 18000000 		.4byte	.LFE10
 1292 02fa 02       		.byte	0x2
 1293 02fb 7D       		.byte	0x7d
 1294 02fc 00       		.sleb128 0
 1295 02fd 01       		.byte	0x1
 1296 02fe 13030000 		.4byte	0x313
 1297 0302 13       		.uleb128 0x13
 1298 0303 3B020000 		.4byte	.LASF42
 1299 0307 01       		.byte	0x1
 1300 0308 2502     		.2byte	0x225
 1301 030a 85000000 		.4byte	0x85
 1302 030e D7010000 		.4byte	.LLST13
 1303 0312 00       		.byte	0
 1304 0313 15       		.uleb128 0x15
 1305 0314 01       		.byte	0x1
 1306 0315 F3000000 		.4byte	.LASF43
 1307 0319 01       		.byte	0x1
 1308 031a 3D02     		.2byte	0x23d
 1309 031c 01       		.byte	0x1
 1310 031d 00000000 		.4byte	.LFB11
 1311 0321 10000000 		.4byte	.LFE11
 1312 0325 02       		.byte	0x2
 1313 0326 7D       		.byte	0x7d
 1314 0327 00       		.sleb128 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 39


 1315 0328 01       		.byte	0x1
 1316 0329 3E030000 		.4byte	0x33e
 1317 032d 13       		.uleb128 0x13
 1318 032e DA000000 		.4byte	.LASF38
 1319 0332 01       		.byte	0x1
 1320 0333 3D02     		.2byte	0x23d
 1321 0335 85000000 		.4byte	0x85
 1322 0339 F8010000 		.4byte	.LLST14
 1323 033d 00       		.byte	0
 1324 033e 15       		.uleb128 0x15
 1325 033f 01       		.byte	0x1
 1326 0340 2A010000 		.4byte	.LASF44
 1327 0344 01       		.byte	0x1
 1328 0345 5402     		.2byte	0x254
 1329 0347 01       		.byte	0x1
 1330 0348 00000000 		.4byte	.LFB12
 1331 034c 10000000 		.4byte	.LFE12
 1332 0350 02       		.byte	0x2
 1333 0351 7D       		.byte	0x7d
 1334 0352 00       		.sleb128 0
 1335 0353 01       		.byte	0x1
 1336 0354 69030000 		.4byte	0x369
 1337 0358 13       		.uleb128 0x13
 1338 0359 DA000000 		.4byte	.LASF38
 1339 035d 01       		.byte	0x1
 1340 035e 5402     		.2byte	0x254
 1341 0360 85000000 		.4byte	0x85
 1342 0364 19020000 		.4byte	.LLST15
 1343 0368 00       		.byte	0
 1344 0369 0F       		.uleb128 0xf
 1345 036a 01       		.byte	0x1
 1346 036b 56030000 		.4byte	.LASF45
 1347 036f 01       		.byte	0x1
 1348 0370 7002     		.2byte	0x270
 1349 0372 01       		.byte	0x1
 1350 0373 00000000 		.4byte	.LFB13
 1351 0377 1C000000 		.4byte	.LFE13
 1352 037b 3A020000 		.4byte	.LLST16
 1353 037f 01       		.byte	0x1
 1354 0380 B4030000 		.4byte	0x3b4
 1355 0384 13       		.uleb128 0x13
 1356 0385 0A030000 		.4byte	.LASF35
 1357 0389 01       		.byte	0x1
 1358 038a 7002     		.2byte	0x270
 1359 038c 85000000 		.4byte	0x85
 1360 0390 5A020000 		.4byte	.LLST17
 1361 0394 13       		.uleb128 0x13
 1362 0395 34030000 		.4byte	.LASF46
 1363 0399 01       		.byte	0x1
 1364 039a 7002     		.2byte	0x270
 1365 039c 90000000 		.4byte	0x90
 1366 03a0 86020000 		.4byte	.LLST18
 1367 03a4 0E       		.uleb128 0xe
 1368 03a5 10000000 		.4byte	.LVL35
 1369 03a9 E2050000 		.4byte	0x5e2
 1370 03ad 0D       		.uleb128 0xd
 1371 03ae 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 40


 1372 03af 50       		.byte	0x50
 1373 03b0 01       		.byte	0x1
 1374 03b1 30       		.byte	0x30
 1375 03b2 00       		.byte	0
 1376 03b3 00       		.byte	0
 1377 03b4 0F       		.uleb128 0xf
 1378 03b5 01       		.byte	0x1
 1379 03b6 29020000 		.4byte	.LASF47
 1380 03ba 01       		.byte	0x1
 1381 03bb 9202     		.2byte	0x292
 1382 03bd 01       		.byte	0x1
 1383 03be 00000000 		.4byte	.LFB14
 1384 03c2 1C000000 		.4byte	.LFE14
 1385 03c6 A7020000 		.4byte	.LLST19
 1386 03ca 01       		.byte	0x1
 1387 03cb FF030000 		.4byte	0x3ff
 1388 03cf 13       		.uleb128 0x13
 1389 03d0 0A030000 		.4byte	.LASF35
 1390 03d4 01       		.byte	0x1
 1391 03d5 9202     		.2byte	0x292
 1392 03d7 85000000 		.4byte	0x85
 1393 03db C7020000 		.4byte	.LLST20
 1394 03df 13       		.uleb128 0x13
 1395 03e0 07000000 		.4byte	.LASF48
 1396 03e4 01       		.byte	0x1
 1397 03e5 9202     		.2byte	0x292
 1398 03e7 9B000000 		.4byte	0x9b
 1399 03eb F3020000 		.4byte	.LLST21
 1400 03ef 0E       		.uleb128 0xe
 1401 03f0 10000000 		.4byte	.LVL39
 1402 03f4 E2050000 		.4byte	0x5e2
 1403 03f8 0D       		.uleb128 0xd
 1404 03f9 01       		.byte	0x1
 1405 03fa 50       		.byte	0x50
 1406 03fb 01       		.byte	0x1
 1407 03fc 30       		.byte	0x30
 1408 03fd 00       		.byte	0
 1409 03fe 00       		.byte	0
 1410 03ff 16       		.uleb128 0x16
 1411 0400 01       		.byte	0x1
 1412 0401 45020000 		.4byte	.LASF49
 1413 0405 01       		.byte	0x1
 1414 0406 B302     		.2byte	0x2b3
 1415 0408 01       		.byte	0x1
 1416 0409 90000000 		.4byte	0x90
 1417 040d 00000000 		.4byte	.LFB15
 1418 0411 54000000 		.4byte	.LFE15
 1419 0415 20030000 		.4byte	.LLST22
 1420 0419 01       		.byte	0x1
 1421 041a 5E040000 		.4byte	0x45e
 1422 041e 13       		.uleb128 0x13
 1423 041f 0A030000 		.4byte	.LASF35
 1424 0423 01       		.byte	0x1
 1425 0424 B302     		.2byte	0x2b3
 1426 0426 85000000 		.4byte	0x85
 1427 042a 40030000 		.4byte	.LLST23
 1428 042e 13       		.uleb128 0x13
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 41


 1429 042f 3B030000 		.4byte	.LASF50
 1430 0433 01       		.byte	0x1
 1431 0434 B302     		.2byte	0x2b3
 1432 0436 90000000 		.4byte	0x90
 1433 043a 82030000 		.4byte	.LLST24
 1434 043e 14       		.uleb128 0x14
 1435 043f B6010000 		.4byte	.LASF51
 1436 0443 01       		.byte	0x1
 1437 0444 B502     		.2byte	0x2b5
 1438 0446 90000000 		.4byte	0x90
 1439 044a DD030000 		.4byte	.LLST25
 1440 044e 0E       		.uleb128 0xe
 1441 044f 46000000 		.4byte	.LVL55
 1442 0453 E2050000 		.4byte	0x5e2
 1443 0457 0D       		.uleb128 0xd
 1444 0458 01       		.byte	0x1
 1445 0459 50       		.byte	0x50
 1446 045a 01       		.byte	0x1
 1447 045b 30       		.byte	0x30
 1448 045c 00       		.byte	0
 1449 045d 00       		.byte	0
 1450 045e 16       		.uleb128 0x16
 1451 045f 01       		.byte	0x1
 1452 0460 94000000 		.4byte	.LASF52
 1453 0464 01       		.byte	0x1
 1454 0465 E902     		.2byte	0x2e9
 1455 0467 01       		.byte	0x1
 1456 0468 9B000000 		.4byte	0x9b
 1457 046c 00000000 		.4byte	.LFB16
 1458 0470 48000000 		.4byte	.LFE16
 1459 0474 F8030000 		.4byte	.LLST26
 1460 0478 01       		.byte	0x1
 1461 0479 BD040000 		.4byte	0x4bd
 1462 047d 13       		.uleb128 0x13
 1463 047e 0A030000 		.4byte	.LASF35
 1464 0482 01       		.byte	0x1
 1465 0483 E902     		.2byte	0x2e9
 1466 0485 85000000 		.4byte	0x85
 1467 0489 18040000 		.4byte	.LLST27
 1468 048d 13       		.uleb128 0x13
 1469 048e 3B030000 		.4byte	.LASF50
 1470 0492 01       		.byte	0x1
 1471 0493 E902     		.2byte	0x2e9
 1472 0495 90000000 		.4byte	0x90
 1473 0499 44040000 		.4byte	.LLST28
 1474 049d 14       		.uleb128 0x14
 1475 049e 11010000 		.4byte	.LASF53
 1476 04a2 01       		.byte	0x1
 1477 04a3 EB02     		.2byte	0x2eb
 1478 04a5 BF000000 		.4byte	0xbf
 1479 04a9 70040000 		.4byte	.LLST29
 1480 04ad 0E       		.uleb128 0xe
 1481 04ae 10000000 		.4byte	.LVL58
 1482 04b2 E2050000 		.4byte	0x5e2
 1483 04b6 0D       		.uleb128 0xd
 1484 04b7 01       		.byte	0x1
 1485 04b8 50       		.byte	0x50
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 42


 1486 04b9 01       		.byte	0x1
 1487 04ba 30       		.byte	0x30
 1488 04bb 00       		.byte	0
 1489 04bc 00       		.byte	0
 1490 04bd 16       		.uleb128 0x16
 1491 04be 01       		.byte	0x1
 1492 04bf 16000000 		.4byte	.LASF54
 1493 04c3 01       		.byte	0x1
 1494 04c4 1603     		.2byte	0x316
 1495 04c6 01       		.byte	0x1
 1496 04c7 A6000000 		.4byte	0xa6
 1497 04cb 00000000 		.4byte	.LFB17
 1498 04cf 48000000 		.4byte	.LFE17
 1499 04d3 9C040000 		.4byte	.LLST30
 1500 04d7 01       		.byte	0x1
 1501 04d8 18050000 		.4byte	0x518
 1502 04dc 13       		.uleb128 0x13
 1503 04dd 0A030000 		.4byte	.LASF35
 1504 04e1 01       		.byte	0x1
 1505 04e2 1603     		.2byte	0x316
 1506 04e4 85000000 		.4byte	0x85
 1507 04e8 BC040000 		.4byte	.LLST31
 1508 04ec 13       		.uleb128 0x13
 1509 04ed 3B030000 		.4byte	.LASF50
 1510 04f1 01       		.byte	0x1
 1511 04f2 1603     		.2byte	0x316
 1512 04f4 90000000 		.4byte	0x90
 1513 04f8 E8040000 		.4byte	.LLST32
 1514 04fc 17       		.uleb128 0x17
 1515 04fd 39010000 		.4byte	.LASF55
 1516 0501 01       		.byte	0x1
 1517 0502 1803     		.2byte	0x318
 1518 0504 A6000000 		.4byte	0xa6
 1519 0508 0E       		.uleb128 0xe
 1520 0509 10000000 		.4byte	.LVL67
 1521 050d E2050000 		.4byte	0x5e2
 1522 0511 0D       		.uleb128 0xd
 1523 0512 01       		.byte	0x1
 1524 0513 50       		.byte	0x50
 1525 0514 01       		.byte	0x1
 1526 0515 30       		.byte	0x30
 1527 0516 00       		.byte	0
 1528 0517 00       		.byte	0
 1529 0518 18       		.uleb128 0x18
 1530 0519 85000000 		.4byte	0x85
 1531 051d 28050000 		.4byte	0x528
 1532 0521 19       		.uleb128 0x19
 1533 0522 F5000000 		.4byte	0xf5
 1534 0526 00       		.byte	0
 1535 0527 00       		.byte	0
 1536 0528 1A       		.uleb128 0x1a
 1537 0529 21030000 		.4byte	.LASF56
 1538 052d 01       		.byte	0x1
 1539 052e 22       		.byte	0x22
 1540 052f 33050000 		.4byte	0x533
 1541 0533 1B       		.uleb128 0x1b
 1542 0534 18050000 		.4byte	0x518
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 43


 1543 0538 1C       		.uleb128 0x1c
 1544 0539 DF000000 		.4byte	.LASF57
 1545 053d 01       		.byte	0x1
 1546 053e 19       		.byte	0x19
 1547 053f 6F000000 		.4byte	0x6f
 1548 0543 01       		.byte	0x1
 1549 0544 05       		.byte	0x5
 1550 0545 03       		.byte	0x3
 1551 0546 00000000 		.4byte	ADC_initVar
 1552 054a 18       		.uleb128 0x18
 1553 054b 90000000 		.4byte	0x90
 1554 054f 5A050000 		.4byte	0x55a
 1555 0553 19       		.uleb128 0x19
 1556 0554 F5000000 		.4byte	0xf5
 1557 0558 00       		.byte	0
 1558 0559 00       		.byte	0
 1559 055a 1C       		.uleb128 0x1c
 1560 055b E6020000 		.4byte	.LASF58
 1561 055f 01       		.byte	0x1
 1562 0560 1A       		.byte	0x1a
 1563 0561 6C050000 		.4byte	0x56c
 1564 0565 01       		.byte	0x1
 1565 0566 05       		.byte	0x5
 1566 0567 03       		.byte	0x3
 1567 0568 00000000 		.4byte	ADC_offset
 1568 056c 05       		.uleb128 0x5
 1569 056d 4A050000 		.4byte	0x54a
 1570 0571 18       		.uleb128 0x18
 1571 0572 9B000000 		.4byte	0x9b
 1572 0576 81050000 		.4byte	0x581
 1573 057a 19       		.uleb128 0x19
 1574 057b F5000000 		.4byte	0xf5
 1575 057f 00       		.byte	0
 1576 0580 00       		.byte	0
 1577 0581 1C       		.uleb128 0x1c
 1578 0582 A8000000 		.4byte	.LASF59
 1579 0586 01       		.byte	0x1
 1580 0587 1B       		.byte	0x1b
 1581 0588 93050000 		.4byte	0x593
 1582 058c 01       		.byte	0x1
 1583 058d 05       		.byte	0x5
 1584 058e 03       		.byte	0x3
 1585 058f 00000000 		.4byte	ADC_countsPer10Volt
 1586 0593 05       		.uleb128 0x5
 1587 0594 71050000 		.4byte	0x571
 1588 0598 1D       		.uleb128 0x1d
 1589 0599 01       		.byte	0x1
 1590 059a 08020000 		.4byte	.LASF60
 1591 059e 03       		.byte	0x3
 1592 059f 5B       		.byte	0x5b
 1593 05a0 01       		.byte	0x1
 1594 05a1 01       		.byte	0x1
 1595 05a2 B1050000 		.4byte	0x5b1
 1596 05a6 1E       		.uleb128 0x1e
 1597 05a7 6F000000 		.4byte	0x6f
 1598 05ab 1E       		.uleb128 0x1e
 1599 05ac 6F000000 		.4byte	0x6f
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 44


 1600 05b0 00       		.byte	0
 1601 05b1 1F       		.uleb128 0x1f
 1602 05b2 01       		.byte	0x1
 1603 05b3 97010000 		.4byte	.LASF65
 1604 05b7 03       		.byte	0x3
 1605 05b8 58       		.byte	0x58
 1606 05b9 01       		.byte	0x1
 1607 05ba E1000000 		.4byte	0xe1
 1608 05be 01       		.byte	0x1
 1609 05bf CE050000 		.4byte	0x5ce
 1610 05c3 1E       		.uleb128 0x1e
 1611 05c4 6F000000 		.4byte	0x6f
 1612 05c8 1E       		.uleb128 0x1e
 1613 05c9 E1000000 		.4byte	0xe1
 1614 05cd 00       		.byte	0
 1615 05ce 1D       		.uleb128 0x1d
 1616 05cf 01       		.byte	0x1
 1617 05d0 C2000000 		.4byte	.LASF61
 1618 05d4 03       		.byte	0x3
 1619 05d5 6A       		.byte	0x6a
 1620 05d6 01       		.byte	0x1
 1621 05d7 01       		.byte	0x1
 1622 05d8 E2050000 		.4byte	0x5e2
 1623 05dc 1E       		.uleb128 0x1e
 1624 05dd 7A000000 		.4byte	0x7a
 1625 05e1 00       		.byte	0
 1626 05e2 20       		.uleb128 0x20
 1627 05e3 01       		.byte	0x1
 1628 05e4 B2020000 		.4byte	.LASF66
 1629 05e8 03       		.byte	0x3
 1630 05e9 72       		.byte	0x72
 1631 05ea 01       		.byte	0x1
 1632 05eb 01       		.byte	0x1
 1633 05ec 1E       		.uleb128 0x1e
 1634 05ed 6F000000 		.4byte	0x6f
 1635 05f1 00       		.byte	0
 1636 05f2 00       		.byte	0
 1637              		.section	.debug_abbrev,"",%progbits
 1638              	.Ldebug_abbrev0:
 1639 0000 01       		.uleb128 0x1
 1640 0001 11       		.uleb128 0x11
 1641 0002 01       		.byte	0x1
 1642 0003 25       		.uleb128 0x25
 1643 0004 0E       		.uleb128 0xe
 1644 0005 13       		.uleb128 0x13
 1645 0006 0B       		.uleb128 0xb
 1646 0007 03       		.uleb128 0x3
 1647 0008 0E       		.uleb128 0xe
 1648 0009 1B       		.uleb128 0x1b
 1649 000a 0E       		.uleb128 0xe
 1650 000b 55       		.uleb128 0x55
 1651 000c 06       		.uleb128 0x6
 1652 000d 11       		.uleb128 0x11
 1653 000e 01       		.uleb128 0x1
 1654 000f 52       		.uleb128 0x52
 1655 0010 01       		.uleb128 0x1
 1656 0011 10       		.uleb128 0x10
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 45


 1657 0012 06       		.uleb128 0x6
 1658 0013 00       		.byte	0
 1659 0014 00       		.byte	0
 1660 0015 02       		.uleb128 0x2
 1661 0016 24       		.uleb128 0x24
 1662 0017 00       		.byte	0
 1663 0018 0B       		.uleb128 0xb
 1664 0019 0B       		.uleb128 0xb
 1665 001a 3E       		.uleb128 0x3e
 1666 001b 0B       		.uleb128 0xb
 1667 001c 03       		.uleb128 0x3
 1668 001d 0E       		.uleb128 0xe
 1669 001e 00       		.byte	0
 1670 001f 00       		.byte	0
 1671 0020 03       		.uleb128 0x3
 1672 0021 24       		.uleb128 0x24
 1673 0022 00       		.byte	0
 1674 0023 0B       		.uleb128 0xb
 1675 0024 0B       		.uleb128 0xb
 1676 0025 3E       		.uleb128 0x3e
 1677 0026 0B       		.uleb128 0xb
 1678 0027 03       		.uleb128 0x3
 1679 0028 08       		.uleb128 0x8
 1680 0029 00       		.byte	0
 1681 002a 00       		.byte	0
 1682 002b 04       		.uleb128 0x4
 1683 002c 16       		.uleb128 0x16
 1684 002d 00       		.byte	0
 1685 002e 03       		.uleb128 0x3
 1686 002f 0E       		.uleb128 0xe
 1687 0030 3A       		.uleb128 0x3a
 1688 0031 0B       		.uleb128 0xb
 1689 0032 3B       		.uleb128 0x3b
 1690 0033 0B       		.uleb128 0xb
 1691 0034 49       		.uleb128 0x49
 1692 0035 13       		.uleb128 0x13
 1693 0036 00       		.byte	0
 1694 0037 00       		.byte	0
 1695 0038 05       		.uleb128 0x5
 1696 0039 35       		.uleb128 0x35
 1697 003a 00       		.byte	0
 1698 003b 49       		.uleb128 0x49
 1699 003c 13       		.uleb128 0x13
 1700 003d 00       		.byte	0
 1701 003e 00       		.byte	0
 1702 003f 06       		.uleb128 0x6
 1703 0040 16       		.uleb128 0x16
 1704 0041 00       		.byte	0
 1705 0042 03       		.uleb128 0x3
 1706 0043 0E       		.uleb128 0xe
 1707 0044 3A       		.uleb128 0x3a
 1708 0045 0B       		.uleb128 0xb
 1709 0046 3B       		.uleb128 0x3b
 1710 0047 05       		.uleb128 0x5
 1711 0048 49       		.uleb128 0x49
 1712 0049 13       		.uleb128 0x13
 1713 004a 00       		.byte	0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 46


 1714 004b 00       		.byte	0
 1715 004c 07       		.uleb128 0x7
 1716 004d 0F       		.uleb128 0xf
 1717 004e 00       		.byte	0
 1718 004f 0B       		.uleb128 0xb
 1719 0050 0B       		.uleb128 0xb
 1720 0051 49       		.uleb128 0x49
 1721 0052 13       		.uleb128 0x13
 1722 0053 00       		.byte	0
 1723 0054 00       		.byte	0
 1724 0055 08       		.uleb128 0x8
 1725 0056 15       		.uleb128 0x15
 1726 0057 00       		.byte	0
 1727 0058 27       		.uleb128 0x27
 1728 0059 0C       		.uleb128 0xc
 1729 005a 00       		.byte	0
 1730 005b 00       		.byte	0
 1731 005c 09       		.uleb128 0x9
 1732 005d 2E       		.uleb128 0x2e
 1733 005e 01       		.byte	0x1
 1734 005f 3F       		.uleb128 0x3f
 1735 0060 0C       		.uleb128 0xc
 1736 0061 03       		.uleb128 0x3
 1737 0062 0E       		.uleb128 0xe
 1738 0063 3A       		.uleb128 0x3a
 1739 0064 0B       		.uleb128 0xb
 1740 0065 3B       		.uleb128 0x3b
 1741 0066 0B       		.uleb128 0xb
 1742 0067 27       		.uleb128 0x27
 1743 0068 0C       		.uleb128 0xc
 1744 0069 11       		.uleb128 0x11
 1745 006a 01       		.uleb128 0x1
 1746 006b 12       		.uleb128 0x12
 1747 006c 01       		.uleb128 0x1
 1748 006d 40       		.uleb128 0x40
 1749 006e 06       		.uleb128 0x6
 1750 006f 9742     		.uleb128 0x2117
 1751 0071 0C       		.uleb128 0xc
 1752 0072 01       		.uleb128 0x1
 1753 0073 13       		.uleb128 0x13
 1754 0074 00       		.byte	0
 1755 0075 00       		.byte	0
 1756 0076 0A       		.uleb128 0xa
 1757 0077 34       		.uleb128 0x34
 1758 0078 00       		.byte	0
 1759 0079 03       		.uleb128 0x3
 1760 007a 0E       		.uleb128 0xe
 1761 007b 3A       		.uleb128 0x3a
 1762 007c 0B       		.uleb128 0xb
 1763 007d 3B       		.uleb128 0x3b
 1764 007e 0B       		.uleb128 0xb
 1765 007f 49       		.uleb128 0x49
 1766 0080 13       		.uleb128 0x13
 1767 0081 02       		.uleb128 0x2
 1768 0082 06       		.uleb128 0x6
 1769 0083 00       		.byte	0
 1770 0084 00       		.byte	0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 47


 1771 0085 0B       		.uleb128 0xb
 1772 0086 34       		.uleb128 0x34
 1773 0087 00       		.byte	0
 1774 0088 03       		.uleb128 0x3
 1775 0089 0E       		.uleb128 0xe
 1776 008a 3A       		.uleb128 0x3a
 1777 008b 0B       		.uleb128 0xb
 1778 008c 3B       		.uleb128 0x3b
 1779 008d 0B       		.uleb128 0xb
 1780 008e 49       		.uleb128 0x49
 1781 008f 13       		.uleb128 0x13
 1782 0090 1C       		.uleb128 0x1c
 1783 0091 05       		.uleb128 0x5
 1784 0092 00       		.byte	0
 1785 0093 00       		.byte	0
 1786 0094 0C       		.uleb128 0xc
 1787 0095 898201   		.uleb128 0x4109
 1788 0098 01       		.byte	0x1
 1789 0099 11       		.uleb128 0x11
 1790 009a 01       		.uleb128 0x1
 1791 009b 31       		.uleb128 0x31
 1792 009c 13       		.uleb128 0x13
 1793 009d 01       		.uleb128 0x1
 1794 009e 13       		.uleb128 0x13
 1795 009f 00       		.byte	0
 1796 00a0 00       		.byte	0
 1797 00a1 0D       		.uleb128 0xd
 1798 00a2 8A8201   		.uleb128 0x410a
 1799 00a5 00       		.byte	0
 1800 00a6 02       		.uleb128 0x2
 1801 00a7 0A       		.uleb128 0xa
 1802 00a8 9142     		.uleb128 0x2111
 1803 00aa 0A       		.uleb128 0xa
 1804 00ab 00       		.byte	0
 1805 00ac 00       		.byte	0
 1806 00ad 0E       		.uleb128 0xe
 1807 00ae 898201   		.uleb128 0x4109
 1808 00b1 01       		.byte	0x1
 1809 00b2 11       		.uleb128 0x11
 1810 00b3 01       		.uleb128 0x1
 1811 00b4 31       		.uleb128 0x31
 1812 00b5 13       		.uleb128 0x13
 1813 00b6 00       		.byte	0
 1814 00b7 00       		.byte	0
 1815 00b8 0F       		.uleb128 0xf
 1816 00b9 2E       		.uleb128 0x2e
 1817 00ba 01       		.byte	0x1
 1818 00bb 3F       		.uleb128 0x3f
 1819 00bc 0C       		.uleb128 0xc
 1820 00bd 03       		.uleb128 0x3
 1821 00be 0E       		.uleb128 0xe
 1822 00bf 3A       		.uleb128 0x3a
 1823 00c0 0B       		.uleb128 0xb
 1824 00c1 3B       		.uleb128 0x3b
 1825 00c2 05       		.uleb128 0x5
 1826 00c3 27       		.uleb128 0x27
 1827 00c4 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 48


 1828 00c5 11       		.uleb128 0x11
 1829 00c6 01       		.uleb128 0x1
 1830 00c7 12       		.uleb128 0x12
 1831 00c8 01       		.uleb128 0x1
 1832 00c9 40       		.uleb128 0x40
 1833 00ca 06       		.uleb128 0x6
 1834 00cb 9742     		.uleb128 0x2117
 1835 00cd 0C       		.uleb128 0xc
 1836 00ce 01       		.uleb128 0x1
 1837 00cf 13       		.uleb128 0x13
 1838 00d0 00       		.byte	0
 1839 00d1 00       		.byte	0
 1840 00d2 10       		.uleb128 0x10
 1841 00d3 898201   		.uleb128 0x4109
 1842 00d6 00       		.byte	0
 1843 00d7 11       		.uleb128 0x11
 1844 00d8 01       		.uleb128 0x1
 1845 00d9 31       		.uleb128 0x31
 1846 00da 13       		.uleb128 0x13
 1847 00db 00       		.byte	0
 1848 00dc 00       		.byte	0
 1849 00dd 11       		.uleb128 0x11
 1850 00de 2E       		.uleb128 0x2e
 1851 00df 00       		.byte	0
 1852 00e0 3F       		.uleb128 0x3f
 1853 00e1 0C       		.uleb128 0xc
 1854 00e2 03       		.uleb128 0x3
 1855 00e3 0E       		.uleb128 0xe
 1856 00e4 3A       		.uleb128 0x3a
 1857 00e5 0B       		.uleb128 0xb
 1858 00e6 3B       		.uleb128 0x3b
 1859 00e7 05       		.uleb128 0x5
 1860 00e8 27       		.uleb128 0x27
 1861 00e9 0C       		.uleb128 0xc
 1862 00ea 11       		.uleb128 0x11
 1863 00eb 01       		.uleb128 0x1
 1864 00ec 12       		.uleb128 0x12
 1865 00ed 01       		.uleb128 0x1
 1866 00ee 40       		.uleb128 0x40
 1867 00ef 0A       		.uleb128 0xa
 1868 00f0 9742     		.uleb128 0x2117
 1869 00f2 0C       		.uleb128 0xc
 1870 00f3 00       		.byte	0
 1871 00f4 00       		.byte	0
 1872 00f5 12       		.uleb128 0x12
 1873 00f6 2E       		.uleb128 0x2e
 1874 00f7 01       		.byte	0x1
 1875 00f8 3F       		.uleb128 0x3f
 1876 00f9 0C       		.uleb128 0xc
 1877 00fa 03       		.uleb128 0x3
 1878 00fb 0E       		.uleb128 0xe
 1879 00fc 3A       		.uleb128 0x3a
 1880 00fd 0B       		.uleb128 0xb
 1881 00fe 3B       		.uleb128 0x3b
 1882 00ff 05       		.uleb128 0x5
 1883 0100 27       		.uleb128 0x27
 1884 0101 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 49


 1885 0102 49       		.uleb128 0x49
 1886 0103 13       		.uleb128 0x13
 1887 0104 11       		.uleb128 0x11
 1888 0105 01       		.uleb128 0x1
 1889 0106 12       		.uleb128 0x12
 1890 0107 01       		.uleb128 0x1
 1891 0108 40       		.uleb128 0x40
 1892 0109 06       		.uleb128 0x6
 1893 010a 9742     		.uleb128 0x2117
 1894 010c 0C       		.uleb128 0xc
 1895 010d 01       		.uleb128 0x1
 1896 010e 13       		.uleb128 0x13
 1897 010f 00       		.byte	0
 1898 0110 00       		.byte	0
 1899 0111 13       		.uleb128 0x13
 1900 0112 05       		.uleb128 0x5
 1901 0113 00       		.byte	0
 1902 0114 03       		.uleb128 0x3
 1903 0115 0E       		.uleb128 0xe
 1904 0116 3A       		.uleb128 0x3a
 1905 0117 0B       		.uleb128 0xb
 1906 0118 3B       		.uleb128 0x3b
 1907 0119 05       		.uleb128 0x5
 1908 011a 49       		.uleb128 0x49
 1909 011b 13       		.uleb128 0x13
 1910 011c 02       		.uleb128 0x2
 1911 011d 06       		.uleb128 0x6
 1912 011e 00       		.byte	0
 1913 011f 00       		.byte	0
 1914 0120 14       		.uleb128 0x14
 1915 0121 34       		.uleb128 0x34
 1916 0122 00       		.byte	0
 1917 0123 03       		.uleb128 0x3
 1918 0124 0E       		.uleb128 0xe
 1919 0125 3A       		.uleb128 0x3a
 1920 0126 0B       		.uleb128 0xb
 1921 0127 3B       		.uleb128 0x3b
 1922 0128 05       		.uleb128 0x5
 1923 0129 49       		.uleb128 0x49
 1924 012a 13       		.uleb128 0x13
 1925 012b 02       		.uleb128 0x2
 1926 012c 06       		.uleb128 0x6
 1927 012d 00       		.byte	0
 1928 012e 00       		.byte	0
 1929 012f 15       		.uleb128 0x15
 1930 0130 2E       		.uleb128 0x2e
 1931 0131 01       		.byte	0x1
 1932 0132 3F       		.uleb128 0x3f
 1933 0133 0C       		.uleb128 0xc
 1934 0134 03       		.uleb128 0x3
 1935 0135 0E       		.uleb128 0xe
 1936 0136 3A       		.uleb128 0x3a
 1937 0137 0B       		.uleb128 0xb
 1938 0138 3B       		.uleb128 0x3b
 1939 0139 05       		.uleb128 0x5
 1940 013a 27       		.uleb128 0x27
 1941 013b 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 50


 1942 013c 11       		.uleb128 0x11
 1943 013d 01       		.uleb128 0x1
 1944 013e 12       		.uleb128 0x12
 1945 013f 01       		.uleb128 0x1
 1946 0140 40       		.uleb128 0x40
 1947 0141 0A       		.uleb128 0xa
 1948 0142 9742     		.uleb128 0x2117
 1949 0144 0C       		.uleb128 0xc
 1950 0145 01       		.uleb128 0x1
 1951 0146 13       		.uleb128 0x13
 1952 0147 00       		.byte	0
 1953 0148 00       		.byte	0
 1954 0149 16       		.uleb128 0x16
 1955 014a 2E       		.uleb128 0x2e
 1956 014b 01       		.byte	0x1
 1957 014c 3F       		.uleb128 0x3f
 1958 014d 0C       		.uleb128 0xc
 1959 014e 03       		.uleb128 0x3
 1960 014f 0E       		.uleb128 0xe
 1961 0150 3A       		.uleb128 0x3a
 1962 0151 0B       		.uleb128 0xb
 1963 0152 3B       		.uleb128 0x3b
 1964 0153 05       		.uleb128 0x5
 1965 0154 27       		.uleb128 0x27
 1966 0155 0C       		.uleb128 0xc
 1967 0156 49       		.uleb128 0x49
 1968 0157 13       		.uleb128 0x13
 1969 0158 11       		.uleb128 0x11
 1970 0159 01       		.uleb128 0x1
 1971 015a 12       		.uleb128 0x12
 1972 015b 01       		.uleb128 0x1
 1973 015c 40       		.uleb128 0x40
 1974 015d 06       		.uleb128 0x6
 1975 015e 9642     		.uleb128 0x2116
 1976 0160 0C       		.uleb128 0xc
 1977 0161 01       		.uleb128 0x1
 1978 0162 13       		.uleb128 0x13
 1979 0163 00       		.byte	0
 1980 0164 00       		.byte	0
 1981 0165 17       		.uleb128 0x17
 1982 0166 34       		.uleb128 0x34
 1983 0167 00       		.byte	0
 1984 0168 03       		.uleb128 0x3
 1985 0169 0E       		.uleb128 0xe
 1986 016a 3A       		.uleb128 0x3a
 1987 016b 0B       		.uleb128 0xb
 1988 016c 3B       		.uleb128 0x3b
 1989 016d 05       		.uleb128 0x5
 1990 016e 49       		.uleb128 0x49
 1991 016f 13       		.uleb128 0x13
 1992 0170 00       		.byte	0
 1993 0171 00       		.byte	0
 1994 0172 18       		.uleb128 0x18
 1995 0173 01       		.uleb128 0x1
 1996 0174 01       		.byte	0x1
 1997 0175 49       		.uleb128 0x49
 1998 0176 13       		.uleb128 0x13
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 51


 1999 0177 01       		.uleb128 0x1
 2000 0178 13       		.uleb128 0x13
 2001 0179 00       		.byte	0
 2002 017a 00       		.byte	0
 2003 017b 19       		.uleb128 0x19
 2004 017c 21       		.uleb128 0x21
 2005 017d 00       		.byte	0
 2006 017e 49       		.uleb128 0x49
 2007 017f 13       		.uleb128 0x13
 2008 0180 2F       		.uleb128 0x2f
 2009 0181 0B       		.uleb128 0xb
 2010 0182 00       		.byte	0
 2011 0183 00       		.byte	0
 2012 0184 1A       		.uleb128 0x1a
 2013 0185 34       		.uleb128 0x34
 2014 0186 00       		.byte	0
 2015 0187 03       		.uleb128 0x3
 2016 0188 0E       		.uleb128 0xe
 2017 0189 3A       		.uleb128 0x3a
 2018 018a 0B       		.uleb128 0xb
 2019 018b 3B       		.uleb128 0x3b
 2020 018c 0B       		.uleb128 0xb
 2021 018d 49       		.uleb128 0x49
 2022 018e 13       		.uleb128 0x13
 2023 018f 00       		.byte	0
 2024 0190 00       		.byte	0
 2025 0191 1B       		.uleb128 0x1b
 2026 0192 26       		.uleb128 0x26
 2027 0193 00       		.byte	0
 2028 0194 49       		.uleb128 0x49
 2029 0195 13       		.uleb128 0x13
 2030 0196 00       		.byte	0
 2031 0197 00       		.byte	0
 2032 0198 1C       		.uleb128 0x1c
 2033 0199 34       		.uleb128 0x34
 2034 019a 00       		.byte	0
 2035 019b 03       		.uleb128 0x3
 2036 019c 0E       		.uleb128 0xe
 2037 019d 3A       		.uleb128 0x3a
 2038 019e 0B       		.uleb128 0xb
 2039 019f 3B       		.uleb128 0x3b
 2040 01a0 0B       		.uleb128 0xb
 2041 01a1 49       		.uleb128 0x49
 2042 01a2 13       		.uleb128 0x13
 2043 01a3 3F       		.uleb128 0x3f
 2044 01a4 0C       		.uleb128 0xc
 2045 01a5 02       		.uleb128 0x2
 2046 01a6 0A       		.uleb128 0xa
 2047 01a7 00       		.byte	0
 2048 01a8 00       		.byte	0
 2049 01a9 1D       		.uleb128 0x1d
 2050 01aa 2E       		.uleb128 0x2e
 2051 01ab 01       		.byte	0x1
 2052 01ac 3F       		.uleb128 0x3f
 2053 01ad 0C       		.uleb128 0xc
 2054 01ae 03       		.uleb128 0x3
 2055 01af 0E       		.uleb128 0xe
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 52


 2056 01b0 3A       		.uleb128 0x3a
 2057 01b1 0B       		.uleb128 0xb
 2058 01b2 3B       		.uleb128 0x3b
 2059 01b3 0B       		.uleb128 0xb
 2060 01b4 27       		.uleb128 0x27
 2061 01b5 0C       		.uleb128 0xc
 2062 01b6 3C       		.uleb128 0x3c
 2063 01b7 0C       		.uleb128 0xc
 2064 01b8 01       		.uleb128 0x1
 2065 01b9 13       		.uleb128 0x13
 2066 01ba 00       		.byte	0
 2067 01bb 00       		.byte	0
 2068 01bc 1E       		.uleb128 0x1e
 2069 01bd 05       		.uleb128 0x5
 2070 01be 00       		.byte	0
 2071 01bf 49       		.uleb128 0x49
 2072 01c0 13       		.uleb128 0x13
 2073 01c1 00       		.byte	0
 2074 01c2 00       		.byte	0
 2075 01c3 1F       		.uleb128 0x1f
 2076 01c4 2E       		.uleb128 0x2e
 2077 01c5 01       		.byte	0x1
 2078 01c6 3F       		.uleb128 0x3f
 2079 01c7 0C       		.uleb128 0xc
 2080 01c8 03       		.uleb128 0x3
 2081 01c9 0E       		.uleb128 0xe
 2082 01ca 3A       		.uleb128 0x3a
 2083 01cb 0B       		.uleb128 0xb
 2084 01cc 3B       		.uleb128 0x3b
 2085 01cd 0B       		.uleb128 0xb
 2086 01ce 27       		.uleb128 0x27
 2087 01cf 0C       		.uleb128 0xc
 2088 01d0 49       		.uleb128 0x49
 2089 01d1 13       		.uleb128 0x13
 2090 01d2 3C       		.uleb128 0x3c
 2091 01d3 0C       		.uleb128 0xc
 2092 01d4 01       		.uleb128 0x1
 2093 01d5 13       		.uleb128 0x13
 2094 01d6 00       		.byte	0
 2095 01d7 00       		.byte	0
 2096 01d8 20       		.uleb128 0x20
 2097 01d9 2E       		.uleb128 0x2e
 2098 01da 01       		.byte	0x1
 2099 01db 3F       		.uleb128 0x3f
 2100 01dc 0C       		.uleb128 0xc
 2101 01dd 03       		.uleb128 0x3
 2102 01de 0E       		.uleb128 0xe
 2103 01df 3A       		.uleb128 0x3a
 2104 01e0 0B       		.uleb128 0xb
 2105 01e1 3B       		.uleb128 0x3b
 2106 01e2 0B       		.uleb128 0xb
 2107 01e3 27       		.uleb128 0x27
 2108 01e4 0C       		.uleb128 0xc
 2109 01e5 3C       		.uleb128 0x3c
 2110 01e6 0C       		.uleb128 0xc
 2111 01e7 00       		.byte	0
 2112 01e8 00       		.byte	0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 53


 2113 01e9 00       		.byte	0
 2114              		.section	.debug_loc,"",%progbits
 2115              	.Ldebug_loc0:
 2116              	.LLST0:
 2117 0000 00000000 		.4byte	.LFB1
 2118 0004 02000000 		.4byte	.LCFI0
 2119 0008 0200     		.2byte	0x2
 2120 000a 7D       		.byte	0x7d
 2121 000b 00       		.sleb128 0
 2122 000c 02000000 		.4byte	.LCFI0
 2123 0010 D4000000 		.4byte	.LFE1
 2124 0014 0200     		.2byte	0x2
 2125 0016 7D       		.byte	0x7d
 2126 0017 08       		.sleb128 8
 2127 0018 00000000 		.4byte	0
 2128 001c 00000000 		.4byte	0
 2129              	.LLST1:
 2130 0020 62000000 		.4byte	.LVL4
 2131 0024 74000000 		.4byte	.LVL6
 2132 0028 0200     		.2byte	0x2
 2133 002a 30       		.byte	0x30
 2134 002b 9F       		.byte	0x9f
 2135 002c 74000000 		.4byte	.LVL6
 2136 0030 D4000000 		.4byte	.LFE1
 2137 0034 0200     		.2byte	0x2
 2138 0036 31       		.byte	0x31
 2139 0037 9F       		.byte	0x9f
 2140 0038 00000000 		.4byte	0
 2141 003c 00000000 		.4byte	0
 2142              	.LLST2:
 2143 0040 5E000000 		.4byte	.LVL2
 2144 0044 60000000 		.4byte	.LVL3
 2145 0048 0100     		.2byte	0x1
 2146 004a 50       		.byte	0x50
 2147 004b 60000000 		.4byte	.LVL3
 2148 004f 62000000 		.4byte	.LVL4
 2149 0053 0100     		.2byte	0x1
 2150 0055 52       		.byte	0x52
 2151 0056 62000000 		.4byte	.LVL4
 2152 005a D4000000 		.4byte	.LFE1
 2153 005e 0400     		.2byte	0x4
 2154 0060 0A       		.byte	0xa
 2155 0061 0004     		.2byte	0x400
 2156 0063 9F       		.byte	0x9f
 2157 0064 00000000 		.4byte	0
 2158 0068 00000000 		.4byte	0
 2159              	.LLST3:
 2160 006c 00000000 		.4byte	.LFB2
 2161 0070 02000000 		.4byte	.LCFI1
 2162 0074 0200     		.2byte	0x2
 2163 0076 7D       		.byte	0x7d
 2164 0077 00       		.sleb128 0
 2165 0078 02000000 		.4byte	.LCFI1
 2166 007c 1C000000 		.4byte	.LFE2
 2167 0080 0200     		.2byte	0x2
 2168 0082 7D       		.byte	0x7d
 2169 0083 08       		.sleb128 8
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 54


 2170 0084 00000000 		.4byte	0
 2171 0088 00000000 		.4byte	0
 2172              	.LLST4:
 2173 008c 00000000 		.4byte	.LFB0
 2174 0090 02000000 		.4byte	.LCFI2
 2175 0094 0200     		.2byte	0x2
 2176 0096 7D       		.byte	0x7d
 2177 0097 00       		.sleb128 0
 2178 0098 02000000 		.4byte	.LCFI2
 2179 009c 1C000000 		.4byte	.LFE0
 2180 00a0 0200     		.2byte	0x2
 2181 00a2 7D       		.byte	0x7d
 2182 00a3 08       		.sleb128 8
 2183 00a4 00000000 		.4byte	0
 2184 00a8 00000000 		.4byte	0
 2185              	.LLST5:
 2186 00ac 00000000 		.4byte	.LFB6
 2187 00b0 04000000 		.4byte	.LCFI3
 2188 00b4 0200     		.2byte	0x2
 2189 00b6 7D       		.byte	0x7d
 2190 00b7 00       		.sleb128 0
 2191 00b8 04000000 		.4byte	.LCFI3
 2192 00bc 2C000000 		.4byte	.LFE6
 2193 00c0 0200     		.2byte	0x2
 2194 00c2 7D       		.byte	0x7d
 2195 00c3 04       		.sleb128 4
 2196 00c4 00000000 		.4byte	0
 2197 00c8 00000000 		.4byte	0
 2198              	.LLST6:
 2199 00cc 00000000 		.4byte	.LVL10
 2200 00d0 06000000 		.4byte	.LVL11
 2201 00d4 0100     		.2byte	0x1
 2202 00d6 50       		.byte	0x50
 2203 00d7 06000000 		.4byte	.LVL11
 2204 00db 12000000 		.4byte	.LVL12
 2205 00df 0100     		.2byte	0x1
 2206 00e1 51       		.byte	0x51
 2207 00e2 12000000 		.4byte	.LVL12
 2208 00e6 2C000000 		.4byte	.LFE6
 2209 00ea 0400     		.2byte	0x4
 2210 00ec F3       		.byte	0xf3
 2211 00ed 01       		.uleb128 0x1
 2212 00ee 50       		.byte	0x50
 2213 00ef 9F       		.byte	0x9f
 2214 00f0 00000000 		.4byte	0
 2215 00f4 00000000 		.4byte	0
 2216              	.LLST7:
 2217 00f8 00000000 		.4byte	.LVL10
 2218 00fc 14000000 		.4byte	.LVL13
 2219 0100 0200     		.2byte	0x2
 2220 0102 30       		.byte	0x30
 2221 0103 9F       		.byte	0x9f
 2222 0104 14000000 		.4byte	.LVL13
 2223 0108 18000000 		.4byte	.LVL14
 2224 010c 0100     		.2byte	0x1
 2225 010e 50       		.byte	0x50
 2226 010f 1C000000 		.4byte	.LVL15
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 55


 2227 0113 26000000 		.4byte	.LVL16
 2228 0117 0100     		.2byte	0x1
 2229 0119 50       		.byte	0x50
 2230 011a 00000000 		.4byte	0
 2231 011e 00000000 		.4byte	0
 2232              	.LLST8:
 2233 0122 00000000 		.4byte	.LFB7
 2234 0126 02000000 		.4byte	.LCFI4
 2235 012a 0200     		.2byte	0x2
 2236 012c 7D       		.byte	0x7d
 2237 012d 00       		.sleb128 0
 2238 012e 02000000 		.4byte	.LCFI4
 2239 0132 20000000 		.4byte	.LFE7
 2240 0136 0200     		.2byte	0x2
 2241 0138 7D       		.byte	0x7d
 2242 0139 08       		.sleb128 8
 2243 013a 00000000 		.4byte	0
 2244 013e 00000000 		.4byte	0
 2245              	.LLST9:
 2246 0142 00000000 		.4byte	.LVL17
 2247 0146 0A000000 		.4byte	.LVL18
 2248 014a 0100     		.2byte	0x1
 2249 014c 50       		.byte	0x50
 2250 014d 0A000000 		.4byte	.LVL18
 2251 0151 12000000 		.4byte	.LVL20
 2252 0155 0400     		.2byte	0x4
 2253 0157 F3       		.byte	0xf3
 2254 0158 01       		.uleb128 0x1
 2255 0159 50       		.byte	0x50
 2256 015a 9F       		.byte	0x9f
 2257 015b 12000000 		.4byte	.LVL20
 2258 015f 14000000 		.4byte	.LVL21
 2259 0163 0100     		.2byte	0x1
 2260 0165 50       		.byte	0x50
 2261 0166 14000000 		.4byte	.LVL21
 2262 016a 20000000 		.4byte	.LFE7
 2263 016e 0400     		.2byte	0x4
 2264 0170 F3       		.byte	0xf3
 2265 0171 01       		.uleb128 0x1
 2266 0172 50       		.byte	0x50
 2267 0173 9F       		.byte	0x9f
 2268 0174 00000000 		.4byte	0
 2269 0178 00000000 		.4byte	0
 2270              	.LLST10:
 2271 017c 0A000000 		.4byte	.LVL18
 2272 0180 0E000000 		.4byte	.LVL19
 2273 0184 0700     		.2byte	0x7
 2274 0186 70       		.byte	0x70
 2275 0187 00       		.sleb128 0
 2276 0188 0A       		.byte	0xa
 2277 0189 FFFF     		.2byte	0xffff
 2278 018b 1A       		.byte	0x1a
 2279 018c 9F       		.byte	0x9f
 2280 018d 00000000 		.4byte	0
 2281 0191 00000000 		.4byte	0
 2282              	.LLST11:
 2283 0195 00000000 		.4byte	.LVL23
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 56


 2284 0199 06000000 		.4byte	.LVL24
 2285 019d 0100     		.2byte	0x1
 2286 019f 50       		.byte	0x50
 2287 01a0 06000000 		.4byte	.LVL24
 2288 01a4 10000000 		.4byte	.LFE8
 2289 01a8 0400     		.2byte	0x4
 2290 01aa F3       		.byte	0xf3
 2291 01ab 01       		.uleb128 0x1
 2292 01ac 50       		.byte	0x50
 2293 01ad 9F       		.byte	0x9f
 2294 01ae 00000000 		.4byte	0
 2295 01b2 00000000 		.4byte	0
 2296              	.LLST12:
 2297 01b6 00000000 		.4byte	.LVL25
 2298 01ba 04000000 		.4byte	.LVL26
 2299 01be 0100     		.2byte	0x1
 2300 01c0 50       		.byte	0x50
 2301 01c1 04000000 		.4byte	.LVL26
 2302 01c5 1C000000 		.4byte	.LFE9
 2303 01c9 0400     		.2byte	0x4
 2304 01cb F3       		.byte	0xf3
 2305 01cc 01       		.uleb128 0x1
 2306 01cd 50       		.byte	0x50
 2307 01ce 9F       		.byte	0x9f
 2308 01cf 00000000 		.4byte	0
 2309 01d3 00000000 		.4byte	0
 2310              	.LLST13:
 2311 01d7 00000000 		.4byte	.LVL27
 2312 01db 04000000 		.4byte	.LVL28
 2313 01df 0100     		.2byte	0x1
 2314 01e1 50       		.byte	0x50
 2315 01e2 04000000 		.4byte	.LVL28
 2316 01e6 18000000 		.4byte	.LFE10
 2317 01ea 0400     		.2byte	0x4
 2318 01ec F3       		.byte	0xf3
 2319 01ed 01       		.uleb128 0x1
 2320 01ee 50       		.byte	0x50
 2321 01ef 9F       		.byte	0x9f
 2322 01f0 00000000 		.4byte	0
 2323 01f4 00000000 		.4byte	0
 2324              	.LLST14:
 2325 01f8 00000000 		.4byte	.LVL29
 2326 01fc 06000000 		.4byte	.LVL30
 2327 0200 0100     		.2byte	0x1
 2328 0202 50       		.byte	0x50
 2329 0203 06000000 		.4byte	.LVL30
 2330 0207 10000000 		.4byte	.LFE11
 2331 020b 0400     		.2byte	0x4
 2332 020d F3       		.byte	0xf3
 2333 020e 01       		.uleb128 0x1
 2334 020f 50       		.byte	0x50
 2335 0210 9F       		.byte	0x9f
 2336 0211 00000000 		.4byte	0
 2337 0215 00000000 		.4byte	0
 2338              	.LLST15:
 2339 0219 00000000 		.4byte	.LVL31
 2340 021d 06000000 		.4byte	.LVL32
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 57


 2341 0221 0100     		.2byte	0x1
 2342 0223 50       		.byte	0x50
 2343 0224 06000000 		.4byte	.LVL32
 2344 0228 10000000 		.4byte	.LFE12
 2345 022c 0400     		.2byte	0x4
 2346 022e F3       		.byte	0xf3
 2347 022f 01       		.uleb128 0x1
 2348 0230 50       		.byte	0x50
 2349 0231 9F       		.byte	0x9f
 2350 0232 00000000 		.4byte	0
 2351 0236 00000000 		.4byte	0
 2352              	.LLST16:
 2353 023a 00000000 		.4byte	.LFB13
 2354 023e 02000000 		.4byte	.LCFI5
 2355 0242 0200     		.2byte	0x2
 2356 0244 7D       		.byte	0x7d
 2357 0245 00       		.sleb128 0
 2358 0246 02000000 		.4byte	.LCFI5
 2359 024a 1C000000 		.4byte	.LFE13
 2360 024e 0200     		.2byte	0x2
 2361 0250 7D       		.byte	0x7d
 2362 0251 10       		.sleb128 16
 2363 0252 00000000 		.4byte	0
 2364 0256 00000000 		.4byte	0
 2365              	.LLST17:
 2366 025a 00000000 		.4byte	.LVL33
 2367 025e 0C000000 		.4byte	.LVL34
 2368 0262 0100     		.2byte	0x1
 2369 0264 50       		.byte	0x50
 2370 0265 0C000000 		.4byte	.LVL34
 2371 0269 16000000 		.4byte	.LVL36
 2372 026d 0100     		.2byte	0x1
 2373 026f 54       		.byte	0x54
 2374 0270 16000000 		.4byte	.LVL36
 2375 0274 1C000000 		.4byte	.LFE13
 2376 0278 0400     		.2byte	0x4
 2377 027a F3       		.byte	0xf3
 2378 027b 01       		.uleb128 0x1
 2379 027c 50       		.byte	0x50
 2380 027d 9F       		.byte	0x9f
 2381 027e 00000000 		.4byte	0
 2382 0282 00000000 		.4byte	0
 2383              	.LLST18:
 2384 0286 00000000 		.4byte	.LVL33
 2385 028a 0F000000 		.4byte	.LVL35-1
 2386 028e 0100     		.2byte	0x1
 2387 0290 51       		.byte	0x51
 2388 0291 0F000000 		.4byte	.LVL35-1
 2389 0295 1C000000 		.4byte	.LFE13
 2390 0299 0400     		.2byte	0x4
 2391 029b F3       		.byte	0xf3
 2392 029c 01       		.uleb128 0x1
 2393 029d 51       		.byte	0x51
 2394 029e 9F       		.byte	0x9f
 2395 029f 00000000 		.4byte	0
 2396 02a3 00000000 		.4byte	0
 2397              	.LLST19:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 58


 2398 02a7 00000000 		.4byte	.LFB14
 2399 02ab 02000000 		.4byte	.LCFI6
 2400 02af 0200     		.2byte	0x2
 2401 02b1 7D       		.byte	0x7d
 2402 02b2 00       		.sleb128 0
 2403 02b3 02000000 		.4byte	.LCFI6
 2404 02b7 1C000000 		.4byte	.LFE14
 2405 02bb 0200     		.2byte	0x2
 2406 02bd 7D       		.byte	0x7d
 2407 02be 10       		.sleb128 16
 2408 02bf 00000000 		.4byte	0
 2409 02c3 00000000 		.4byte	0
 2410              	.LLST20:
 2411 02c7 00000000 		.4byte	.LVL37
 2412 02cb 0C000000 		.4byte	.LVL38
 2413 02cf 0100     		.2byte	0x1
 2414 02d1 50       		.byte	0x50
 2415 02d2 0C000000 		.4byte	.LVL38
 2416 02d6 16000000 		.4byte	.LVL40
 2417 02da 0100     		.2byte	0x1
 2418 02dc 54       		.byte	0x54
 2419 02dd 16000000 		.4byte	.LVL40
 2420 02e1 1C000000 		.4byte	.LFE14
 2421 02e5 0400     		.2byte	0x4
 2422 02e7 F3       		.byte	0xf3
 2423 02e8 01       		.uleb128 0x1
 2424 02e9 50       		.byte	0x50
 2425 02ea 9F       		.byte	0x9f
 2426 02eb 00000000 		.4byte	0
 2427 02ef 00000000 		.4byte	0
 2428              	.LLST21:
 2429 02f3 00000000 		.4byte	.LVL37
 2430 02f7 0F000000 		.4byte	.LVL39-1
 2431 02fb 0100     		.2byte	0x1
 2432 02fd 51       		.byte	0x51
 2433 02fe 0F000000 		.4byte	.LVL39-1
 2434 0302 16000000 		.4byte	.LVL41
 2435 0306 0100     		.2byte	0x1
 2436 0308 55       		.byte	0x55
 2437 0309 16000000 		.4byte	.LVL41
 2438 030d 1C000000 		.4byte	.LFE14
 2439 0311 0500     		.2byte	0x5
 2440 0313 73       		.byte	0x73
 2441 0314 00       		.sleb128 0
 2442 0315 70       		.byte	0x70
 2443 0316 00       		.sleb128 0
 2444 0317 22       		.byte	0x22
 2445 0318 00000000 		.4byte	0
 2446 031c 00000000 		.4byte	0
 2447              	.LLST22:
 2448 0320 00000000 		.4byte	.LFB15
 2449 0324 02000000 		.4byte	.LCFI7
 2450 0328 0200     		.2byte	0x2
 2451 032a 7D       		.byte	0x7d
 2452 032b 00       		.sleb128 0
 2453 032c 02000000 		.4byte	.LCFI7
 2454 0330 54000000 		.4byte	.LFE15
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 59


 2455 0334 0200     		.2byte	0x2
 2456 0336 7D       		.byte	0x7d
 2457 0337 10       		.sleb128 16
 2458 0338 00000000 		.4byte	0
 2459 033c 00000000 		.4byte	0
 2460              	.LLST23:
 2461 0340 00000000 		.4byte	.LVL42
 2462 0344 0A000000 		.4byte	.LVL43
 2463 0348 0100     		.2byte	0x1
 2464 034a 50       		.byte	0x50
 2465 034b 0A000000 		.4byte	.LVL43
 2466 034f 1C000000 		.4byte	.LVL45
 2467 0353 0100     		.2byte	0x1
 2468 0355 54       		.byte	0x54
 2469 0356 1C000000 		.4byte	.LVL45
 2470 035a 40000000 		.4byte	.LVL53
 2471 035e 0400     		.2byte	0x4
 2472 0360 F3       		.byte	0xf3
 2473 0361 01       		.uleb128 0x1
 2474 0362 50       		.byte	0x50
 2475 0363 9F       		.byte	0x9f
 2476 0364 40000000 		.4byte	.LVL53
 2477 0368 42000000 		.4byte	.LVL54
 2478 036c 0100     		.2byte	0x1
 2479 036e 50       		.byte	0x50
 2480 036f 42000000 		.4byte	.LVL54
 2481 0373 54000000 		.4byte	.LFE15
 2482 0377 0100     		.2byte	0x1
 2483 0379 54       		.byte	0x54
 2484 037a 00000000 		.4byte	0
 2485 037e 00000000 		.4byte	0
 2486              	.LLST24:
 2487 0382 00000000 		.4byte	.LVL42
 2488 0386 0A000000 		.4byte	.LVL43
 2489 038a 0100     		.2byte	0x1
 2490 038c 51       		.byte	0x51
 2491 038d 0A000000 		.4byte	.LVL43
 2492 0391 16000000 		.4byte	.LVL44
 2493 0395 0400     		.2byte	0x4
 2494 0397 F3       		.byte	0xf3
 2495 0398 01       		.uleb128 0x1
 2496 0399 51       		.byte	0x51
 2497 039a 9F       		.byte	0x9f
 2498 039b 16000000 		.4byte	.LVL44
 2499 039f 26000000 		.4byte	.LVL46
 2500 03a3 0100     		.2byte	0x1
 2501 03a5 50       		.byte	0x50
 2502 03a6 34000000 		.4byte	.LVL50
 2503 03aa 38000000 		.4byte	.LVL51
 2504 03ae 0100     		.2byte	0x1
 2505 03b0 50       		.byte	0x50
 2506 03b1 38000000 		.4byte	.LVL51
 2507 03b5 3A000000 		.4byte	.LVL52
 2508 03b9 0100     		.2byte	0x1
 2509 03bb 55       		.byte	0x55
 2510 03bc 40000000 		.4byte	.LVL53
 2511 03c0 45000000 		.4byte	.LVL55-1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 60


 2512 03c4 0100     		.2byte	0x1
 2513 03c6 51       		.byte	0x51
 2514 03c7 45000000 		.4byte	.LVL55-1
 2515 03cb 54000000 		.4byte	.LFE15
 2516 03cf 0400     		.2byte	0x4
 2517 03d1 F3       		.byte	0xf3
 2518 03d2 01       		.uleb128 0x1
 2519 03d3 51       		.byte	0x51
 2520 03d4 9F       		.byte	0x9f
 2521 03d5 00000000 		.4byte	0
 2522 03d9 00000000 		.4byte	0
 2523              	.LLST25:
 2524 03dd 2A000000 		.4byte	.LVL47
 2525 03e1 2C000000 		.4byte	.LVL48
 2526 03e5 0900     		.2byte	0x9
 2527 03e7 72       		.byte	0x72
 2528 03e8 00       		.sleb128 0
 2529 03e9 70       		.byte	0x70
 2530 03ea 00       		.sleb128 0
 2531 03eb 22       		.byte	0x22
 2532 03ec 71       		.byte	0x71
 2533 03ed 00       		.sleb128 0
 2534 03ee 1B       		.byte	0x1b
 2535 03ef 9F       		.byte	0x9f
 2536 03f0 00000000 		.4byte	0
 2537 03f4 00000000 		.4byte	0
 2538              	.LLST26:
 2539 03f8 00000000 		.4byte	.LFB16
 2540 03fc 02000000 		.4byte	.LCFI8
 2541 0400 0200     		.2byte	0x2
 2542 0402 7D       		.byte	0x7d
 2543 0403 00       		.sleb128 0
 2544 0404 02000000 		.4byte	.LCFI8
 2545 0408 48000000 		.4byte	.LFE16
 2546 040c 0200     		.2byte	0x2
 2547 040e 7D       		.byte	0x7d
 2548 040f 10       		.sleb128 16
 2549 0410 00000000 		.4byte	0
 2550 0414 00000000 		.4byte	0
 2551              	.LLST27:
 2552 0418 00000000 		.4byte	.LVL56
 2553 041c 0C000000 		.4byte	.LVL57
 2554 0420 0100     		.2byte	0x1
 2555 0422 50       		.byte	0x50
 2556 0423 0C000000 		.4byte	.LVL57
 2557 0427 18000000 		.4byte	.LVL59
 2558 042b 0100     		.2byte	0x1
 2559 042d 54       		.byte	0x54
 2560 042e 18000000 		.4byte	.LVL59
 2561 0432 48000000 		.4byte	.LFE16
 2562 0436 0400     		.2byte	0x4
 2563 0438 F3       		.byte	0xf3
 2564 0439 01       		.uleb128 0x1
 2565 043a 50       		.byte	0x50
 2566 043b 9F       		.byte	0x9f
 2567 043c 00000000 		.4byte	0
 2568 0440 00000000 		.4byte	0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 61


 2569              	.LLST28:
 2570 0444 00000000 		.4byte	.LVL56
 2571 0448 0F000000 		.4byte	.LVL58-1
 2572 044c 0100     		.2byte	0x1
 2573 044e 51       		.byte	0x51
 2574 044f 0F000000 		.4byte	.LVL58-1
 2575 0453 1A000000 		.4byte	.LVL60
 2576 0457 0400     		.2byte	0x4
 2577 0459 F3       		.byte	0xf3
 2578 045a 01       		.uleb128 0x1
 2579 045b 51       		.byte	0x51
 2580 045c 9F       		.byte	0x9f
 2581 045d 1A000000 		.4byte	.LVL60
 2582 0461 26000000 		.4byte	.LVL62
 2583 0465 0100     		.2byte	0x1
 2584 0467 51       		.byte	0x51
 2585 0468 00000000 		.4byte	0
 2586 046c 00000000 		.4byte	0
 2587              	.LLST29:
 2588 0470 20000000 		.4byte	.LVL61
 2589 0474 26000000 		.4byte	.LVL62
 2590 0478 1A00     		.2byte	0x1a
 2591 047a 71       		.byte	0x71
 2592 047b 00       		.sleb128 0
 2593 047c F7       		.byte	0xf7
 2594 047d 3E       		.uleb128 0x3e
 2595 047e F7       		.byte	0xf7
 2596 047f 29       		.uleb128 0x29
 2597 0480 0C       		.byte	0xc
 2598 0481 80969800 		.4byte	0x989680
 2599 0485 F7       		.byte	0xf7
 2600 0486 29       		.uleb128 0x29
 2601 0487 1E       		.byte	0x1e
 2602 0488 F7       		.byte	0xf7
 2603 0489 30       		.uleb128 0x30
 2604 048a 74       		.byte	0x74
 2605 048b 00       		.sleb128 0
 2606 048c F7       		.byte	0xf7
 2607 048d 37       		.uleb128 0x37
 2608 048e F7       		.byte	0xf7
 2609 048f 30       		.uleb128 0x30
 2610 0490 1B       		.byte	0x1b
 2611 0491 F7       		.byte	0xf7
 2612 0492 29       		.uleb128 0x29
 2613 0493 9F       		.byte	0x9f
 2614 0494 00000000 		.4byte	0
 2615 0498 00000000 		.4byte	0
 2616              	.LLST30:
 2617 049c 00000000 		.4byte	.LFB17
 2618 04a0 02000000 		.4byte	.LCFI9
 2619 04a4 0200     		.2byte	0x2
 2620 04a6 7D       		.byte	0x7d
 2621 04a7 00       		.sleb128 0
 2622 04a8 02000000 		.4byte	.LCFI9
 2623 04ac 48000000 		.4byte	.LFE17
 2624 04b0 0200     		.2byte	0x2
 2625 04b2 7D       		.byte	0x7d
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 62


 2626 04b3 10       		.sleb128 16
 2627 04b4 00000000 		.4byte	0
 2628 04b8 00000000 		.4byte	0
 2629              	.LLST31:
 2630 04bc 00000000 		.4byte	.LVL65
 2631 04c0 0C000000 		.4byte	.LVL66
 2632 04c4 0100     		.2byte	0x1
 2633 04c6 50       		.byte	0x50
 2634 04c7 0C000000 		.4byte	.LVL66
 2635 04cb 18000000 		.4byte	.LVL68
 2636 04cf 0100     		.2byte	0x1
 2637 04d1 54       		.byte	0x54
 2638 04d2 18000000 		.4byte	.LVL68
 2639 04d6 48000000 		.4byte	.LFE17
 2640 04da 0400     		.2byte	0x4
 2641 04dc F3       		.byte	0xf3
 2642 04dd 01       		.uleb128 0x1
 2643 04de 50       		.byte	0x50
 2644 04df 9F       		.byte	0x9f
 2645 04e0 00000000 		.4byte	0
 2646 04e4 00000000 		.4byte	0
 2647              	.LLST32:
 2648 04e8 00000000 		.4byte	.LVL65
 2649 04ec 0F000000 		.4byte	.LVL67-1
 2650 04f0 0100     		.2byte	0x1
 2651 04f2 51       		.byte	0x51
 2652 04f3 0F000000 		.4byte	.LVL67-1
 2653 04f7 1A000000 		.4byte	.LVL69
 2654 04fb 0400     		.2byte	0x4
 2655 04fd F3       		.byte	0xf3
 2656 04fe 01       		.uleb128 0x1
 2657 04ff 51       		.byte	0x51
 2658 0500 9F       		.byte	0x9f
 2659 0501 1A000000 		.4byte	.LVL69
 2660 0505 1F000000 		.4byte	.LVL70-1
 2661 0509 0100     		.2byte	0x1
 2662 050b 51       		.byte	0x51
 2663 050c 00000000 		.4byte	0
 2664 0510 00000000 		.4byte	0
 2665              		.section	.debug_aranges,"",%progbits
 2666 0000 A4000000 		.4byte	0xa4
 2667 0004 0200     		.2byte	0x2
 2668 0006 00000000 		.4byte	.Ldebug_info0
 2669 000a 04       		.byte	0x4
 2670 000b 00       		.byte	0
 2671 000c 0000     		.2byte	0
 2672 000e 0000     		.2byte	0
 2673 0010 00000000 		.4byte	.LFB1
 2674 0014 D4000000 		.4byte	.LFE1-.LFB1
 2675 0018 00000000 		.4byte	.LFB2
 2676 001c 1C000000 		.4byte	.LFE2-.LFB2
 2677 0020 00000000 		.4byte	.LFB0
 2678 0024 1C000000 		.4byte	.LFE0-.LFB0
 2679 0028 00000000 		.4byte	.LFB3
 2680 002c 10000000 		.4byte	.LFE3-.LFB3
 2681 0030 00000000 		.4byte	.LFB4
 2682 0034 14000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 63


 2683 0038 00000000 		.4byte	.LFB5
 2684 003c 14000000 		.4byte	.LFE5-.LFB5
 2685 0040 00000000 		.4byte	.LFB6
 2686 0044 2C000000 		.4byte	.LFE6-.LFB6
 2687 0048 00000000 		.4byte	.LFB7
 2688 004c 20000000 		.4byte	.LFE7-.LFB7
 2689 0050 00000000 		.4byte	.LFB8
 2690 0054 10000000 		.4byte	.LFE8-.LFB8
 2691 0058 00000000 		.4byte	.LFB9
 2692 005c 1C000000 		.4byte	.LFE9-.LFB9
 2693 0060 00000000 		.4byte	.LFB10
 2694 0064 18000000 		.4byte	.LFE10-.LFB10
 2695 0068 00000000 		.4byte	.LFB11
 2696 006c 10000000 		.4byte	.LFE11-.LFB11
 2697 0070 00000000 		.4byte	.LFB12
 2698 0074 10000000 		.4byte	.LFE12-.LFB12
 2699 0078 00000000 		.4byte	.LFB13
 2700 007c 1C000000 		.4byte	.LFE13-.LFB13
 2701 0080 00000000 		.4byte	.LFB14
 2702 0084 1C000000 		.4byte	.LFE14-.LFB14
 2703 0088 00000000 		.4byte	.LFB15
 2704 008c 54000000 		.4byte	.LFE15-.LFB15
 2705 0090 00000000 		.4byte	.LFB16
 2706 0094 48000000 		.4byte	.LFE16-.LFB16
 2707 0098 00000000 		.4byte	.LFB17
 2708 009c 48000000 		.4byte	.LFE17-.LFB17
 2709 00a0 00000000 		.4byte	0
 2710 00a4 00000000 		.4byte	0
 2711              		.section	.debug_ranges,"",%progbits
 2712              	.Ldebug_ranges0:
 2713 0000 00000000 		.4byte	.LFB1
 2714 0004 D4000000 		.4byte	.LFE1
 2715 0008 00000000 		.4byte	.LFB2
 2716 000c 1C000000 		.4byte	.LFE2
 2717 0010 00000000 		.4byte	.LFB0
 2718 0014 1C000000 		.4byte	.LFE0
 2719 0018 00000000 		.4byte	.LFB3
 2720 001c 10000000 		.4byte	.LFE3
 2721 0020 00000000 		.4byte	.LFB4
 2722 0024 14000000 		.4byte	.LFE4
 2723 0028 00000000 		.4byte	.LFB5
 2724 002c 14000000 		.4byte	.LFE5
 2725 0030 00000000 		.4byte	.LFB6
 2726 0034 2C000000 		.4byte	.LFE6
 2727 0038 00000000 		.4byte	.LFB7
 2728 003c 20000000 		.4byte	.LFE7
 2729 0040 00000000 		.4byte	.LFB8
 2730 0044 10000000 		.4byte	.LFE8
 2731 0048 00000000 		.4byte	.LFB9
 2732 004c 1C000000 		.4byte	.LFE9
 2733 0050 00000000 		.4byte	.LFB10
 2734 0054 18000000 		.4byte	.LFE10
 2735 0058 00000000 		.4byte	.LFB11
 2736 005c 10000000 		.4byte	.LFE11
 2737 0060 00000000 		.4byte	.LFB12
 2738 0064 10000000 		.4byte	.LFE12
 2739 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 64


 2740 006c 1C000000 		.4byte	.LFE13
 2741 0070 00000000 		.4byte	.LFB14
 2742 0074 1C000000 		.4byte	.LFE14
 2743 0078 00000000 		.4byte	.LFB15
 2744 007c 54000000 		.4byte	.LFE15
 2745 0080 00000000 		.4byte	.LFB16
 2746 0084 48000000 		.4byte	.LFE16
 2747 0088 00000000 		.4byte	.LFB17
 2748 008c 48000000 		.4byte	.LFE17
 2749 0090 00000000 		.4byte	0
 2750 0094 00000000 		.4byte	0
 2751              		.section	.debug_line,"",%progbits
 2752              	.Ldebug_line0:
 2753 0000 4C020000 		.section	.debug_str,"MS",%progbits,1
 2753      02004D00 
 2753      00000201 
 2753      FB0E0D00 
 2753      01010101 
 2754              	.LASF10:
 2755 0000 75696E74 		.ascii	"uint16\000"
 2755      313600
 2756              	.LASF48:
 2757 0007 61646347 		.ascii	"adcGain\000"
 2757      61696E00 
 2758              	.LASF24:
 2759 000f 636F756E 		.ascii	"counts\000"
 2759      747300
 2760              	.LASF54:
 2761 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2761      436F756E 
 2761      7473546F 
 2761      5F566F6C 
 2761      747300
 2762              	.LASF25:
 2763 0029 4144435F 		.ascii	"ADC_Init\000"
 2763      496E6974 
 2763      00
 2764              	.LASF0:
 2765 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2765      206C6F6E 
 2765      6720756E 
 2765      7369676E 
 2765      65642069 
 2766              	.LASF29:
 2767 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2767      53746172 
 2767      74436F6E 
 2767      76657274 
 2767      00
 2768              	.LASF1:
 2769 005a 6C6F6E67 		.ascii	"long long int\000"
 2769      206C6F6E 
 2769      6720696E 
 2769      7400
 2770              	.LASF3:
 2771 0068 7369676E 		.ascii	"signed char\000"
 2771      65642063 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 65


 2771      68617200 
 2772              	.LASF31:
 2773 0074 73746174 		.ascii	"status\000"
 2773      757300
 2774              	.LASF13:
 2775 007b 696E7433 		.ascii	"int32\000"
 2775      3200
 2776              	.LASF27:
 2777 0081 4144435F 		.ascii	"ADC_Start\000"
 2777      53746172 
 2777      7400
 2778              	.LASF6:
 2779 008b 6C6F6E67 		.ascii	"long int\000"
 2779      20696E74 
 2779      00
 2780              	.LASF52:
 2781 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2781      436F756E 
 2781      7473546F 
 2781      5F75566F 
 2781      6C747300 
 2782              	.LASF59:
 2783 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2783      636F756E 
 2783      74735065 
 2783      72313056 
 2783      6F6C7400 
 2784              	.LASF9:
 2785 00bc 75696E74 		.ascii	"uint8\000"
 2785      3800
 2786              	.LASF61:
 2787 00c2 43794465 		.ascii	"CyDelayUs\000"
 2787      6C617955 
 2787      7300
 2788              	.LASF16:
 2789 00cc 646F7562 		.ascii	"double\000"
 2789      6C6500
 2790              	.LASF11:
 2791 00d3 75696E74 		.ascii	"uint32\000"
 2791      333200
 2792              	.LASF38:
 2793 00da 6D61736B 		.ascii	"mask\000"
 2793      00
 2794              	.LASF57:
 2795 00df 4144435F 		.ascii	"ADC_initVar\000"
 2795      696E6974 
 2795      56617200 
 2796              	.LASF34:
 2797 00eb 7265744D 		.ascii	"retMode\000"
 2797      6F646500 
 2798              	.LASF43:
 2799 00f3 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2799      5365744C 
 2799      696D6974 
 2799      4D61736B 
 2799      00
 2800              	.LASF8:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 66


 2801 0104 756E7369 		.ascii	"unsigned int\000"
 2801      676E6564 
 2801      20696E74 
 2801      00
 2802              	.LASF53:
 2803 0111 75566F6C 		.ascii	"uVolts\000"
 2803      747300
 2804              	.LASF7:
 2805 0118 6C6F6E67 		.ascii	"long unsigned int\000"
 2805      20756E73 
 2805      69676E65 
 2805      6420696E 
 2805      7400
 2806              	.LASF44:
 2807 012a 4144435F 		.ascii	"ADC_SetSatMask\000"
 2807      53657453 
 2807      61744D61 
 2807      736B00
 2808              	.LASF55:
 2809 0139 766F6C74 		.ascii	"volts\000"
 2809      7300
 2810              	.LASF23:
 2811 013f 746D7052 		.ascii	"tmpRegVal\000"
 2811      65675661 
 2811      6C00
 2812              	.LASF64:
 2813 0149 433A5C55 		.ascii	"C:\\Users\\Steve\\Documents\\Git\\GlowTime\\RGB_LED"
 2813      73657273 
 2813      5C537465 
 2813      76655C44 
 2813      6F63756D 
 2814 0176 5F4D6174 		.ascii	"_Matrix.cydsn\000"
 2814      7269782E 
 2814      63796473 
 2814      6E00
 2815              	.LASF5:
 2816 0184 73686F72 		.ascii	"short unsigned int\000"
 2816      7420756E 
 2816      7369676E 
 2816      65642069 
 2816      6E7400
 2817              	.LASF65:
 2818 0197 4379496E 		.ascii	"CyIntSetVector\000"
 2818      74536574 
 2818      56656374 
 2818      6F7200
 2819              	.LASF30:
 2820 01a6 4144435F 		.ascii	"ADC_StopConvert\000"
 2820      53746F70 
 2820      436F6E76 
 2820      65727400 
 2821              	.LASF51:
 2822 01b6 6D566F6C 		.ascii	"mVolts\000"
 2822      747300
 2823              	.LASF19:
 2824 01bd 72656733 		.ascii	"reg32\000"
 2824      3200
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 67


 2825              	.LASF14:
 2826 01c3 666C6F61 		.ascii	"float32\000"
 2826      74333200 
 2827              	.LASF21:
 2828 01cb 73697A65 		.ascii	"sizetype\000"
 2828      74797065 
 2828      00
 2829              	.LASF40:
 2830 01d4 6C6F774C 		.ascii	"lowLimit\000"
 2830      696D6974 
 2830      00
 2831              	.LASF41:
 2832 01dd 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2832      53657448 
 2832      6967684C 
 2832      696D6974 
 2832      00
 2833              	.LASF32:
 2834 01ee 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2834      4973456E 
 2834      64436F6E 
 2834      76657273 
 2834      696F6E00 
 2835              	.LASF17:
 2836 0202 696E7436 		.ascii	"int64\000"
 2836      3400
 2837              	.LASF60:
 2838 0208 4379496E 		.ascii	"CyIntSetPriority\000"
 2838      74536574 
 2838      5072696F 
 2838      72697479 
 2838      00
 2839              	.LASF37:
 2840 0219 4144435F 		.ascii	"ADC_SetChanMask\000"
 2840      53657443 
 2840      68616E4D 
 2840      61736B00 
 2841              	.LASF47:
 2842 0229 4144435F 		.ascii	"ADC_SetGain\000"
 2842      53657447 
 2842      61696E00 
 2843              	.LASF15:
 2844 0235 666C6F61 		.ascii	"float\000"
 2844      7400
 2845              	.LASF42:
 2846 023b 68696768 		.ascii	"highLimit\000"
 2846      4C696D69 
 2846      7400
 2847              	.LASF49:
 2848 0245 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2848      436F756E 
 2848      7473546F 
 2848      5F6D566F 
 2848      6C747300 
 2849              	.LASF62:
 2850 0259 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2850      4320342E 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 68


 2850      372E3320 
 2850      32303133 
 2850      30333132 
 2851 028c 616E6368 		.ascii	"anch revision 196615]\000"
 2851      20726576 
 2851      6973696F 
 2851      6E203139 
 2851      36363135 
 2852              	.LASF39:
 2853 02a2 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2853      5365744C 
 2853      6F774C69 
 2853      6D697400 
 2854              	.LASF66:
 2855 02b2 43794861 		.ascii	"CyHalt\000"
 2855      6C7400
 2856              	.LASF63:
 2857 02b9 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC.c\000"
 2857      6E657261 
 2857      7465645F 
 2857      536F7572 
 2857      63655C50 
 2858              	.LASF4:
 2859 02d8 756E7369 		.ascii	"unsigned char\000"
 2859      676E6564 
 2859      20636861 
 2859      7200
 2860              	.LASF58:
 2861 02e6 4144435F 		.ascii	"ADC_offset\000"
 2861      6F666673 
 2861      657400
 2862              	.LASF2:
 2863 02f1 73686F72 		.ascii	"short int\000"
 2863      7420696E 
 2863      7400
 2864              	.LASF28:
 2865 02fb 4144435F 		.ascii	"ADC_Stop\000"
 2865      53746F70 
 2865      00
 2866              	.LASF22:
 2867 0304 63684E75 		.ascii	"chNum\000"
 2867      6D00
 2868              	.LASF35:
 2869 030a 6368616E 		.ascii	"chan\000"
 2869      00
 2870              	.LASF18:
 2871 030f 63686172 		.ascii	"char\000"
 2871      00
 2872              	.LASF20:
 2873 0314 63796973 		.ascii	"cyisraddress\000"
 2873      72616464 
 2873      72657373 
 2873      00
 2874              	.LASF56:
 2875 0321 4144435F 		.ascii	"ADC_channelsConfig\000"
 2875      6368616E 
 2875      6E656C73 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\ccolYMGU.s 			page 69


 2875      436F6E66 
 2875      696700
 2876              	.LASF46:
 2877 0334 6F666673 		.ascii	"offset\000"
 2877      657400
 2878              	.LASF50:
 2879 033b 61646343 		.ascii	"adcCounts\000"
 2879      6F756E74 
 2879      7300
 2880              	.LASF26:
 2881 0345 4144435F 		.ascii	"ADC_Enable\000"
 2881      456E6162 
 2881      6C6500
 2882              	.LASF12:
 2883 0350 696E7431 		.ascii	"int16\000"
 2883      3600
 2884              	.LASF45:
 2885 0356 4144435F 		.ascii	"ADC_SetOffset\000"
 2885      5365744F 
 2885      66667365 
 2885      7400
 2886              	.LASF36:
 2887 0364 72657375 		.ascii	"result\000"
 2887      6C7400
 2888              	.LASF33:
 2889 036b 4144435F 		.ascii	"ADC_GetResult16\000"
 2889      47657452 
 2889      6573756C 
 2889      74313600 
 2890              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
