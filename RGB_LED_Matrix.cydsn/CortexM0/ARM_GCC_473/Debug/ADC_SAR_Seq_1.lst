ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"ADC_SAR_Seq_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADC_SAR_Seq_1_Init,"ax",%progbits
  18              		.align	2
  19              		.global	ADC_SAR_Seq_1_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	ADC_SAR_Seq_1_Init, %function
  23              	ADC_SAR_Seq_1_Init:
  24              	.LFB1:
  25              		.file 1 ".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c"
   1:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * File Name: ADC_SAR_Seq_1.c
   3:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Version 1.10
   4:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   5:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Description:
   6:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Approximation ADC Component Component.
   8:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
   9:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Note:
  10:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  11:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  12:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * the software package with which this file was provided.
  16:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  17:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  18:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "CyLib.h"
  19:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #include "ADC_SAR_Seq_1.h"
  20:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  21:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  22:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  23:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global data allocation
  24:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
  25:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint8 ADC_SAR_Seq_1_initVar = 0u;
  26:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int16 ADC_SAR_Seq_1_offset[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];
  27:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** volatile int32 ADC_SAR_Seq_1_countsPer10Volt[ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM];   /* Gain compensat
  28:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  29:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  30:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /***************************************
  31:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Local data allocation
  32:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ***************************************/
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 2


  33:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /* Channels configuration generated by customiser */
  34:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** static const uint32 CYCODE ADC_SAR_Seq_1_channelsConfig[] = { 0x00000000u };
  35:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  36:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  37:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  38:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Start
  39:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  40:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  41:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  42:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Performs all required initialization for this component
  43:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and enables the power. The power will be set to the appropriate
  44:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  power based on the clock frequency.
  45:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  46:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  47:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  48:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  49:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  50:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  51:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  52:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  53:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_initVar variable is used to indicate when/if initial
  54:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  configuration of this component has happened. The variable is initialized to
  55:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  56:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  57:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  58:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If re-initialization of the component is required the variable should be set
  59:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  to zero before call of ADC_SAR_Seq_1_Start() routine, or the user may call
  60:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Init() and ADC_SAR_Seq_1_Enable() as done in the
  61:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start() routine.
  62:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  63:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  64:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Start(void)
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  66:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* If not Initialized then initialize all required hardware and software */
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
  68:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
  71:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
  74:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  75:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
  76:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Init
  78:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
  79:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  80:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
  81:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Initialize component's parameters to the parameters set by user in the
  82:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  customizer of the component placed onto schematic. Usually called in
  83:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Start().
  84:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  85:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
  86:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
  87:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  88:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
  89:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 3


  90:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  91:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
  92:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  The ADC_SAR_Seq_1_offset variable is initialized.
  93:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
  94:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
  95:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Init(void)
  96:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
  26              		.loc 1 96 0
  27              		.cfi_startproc
  28 0000 10B5     		push	{r4, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 4, -8
  32              		.cfi_offset 14, -4
  97:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 chNum;
  98:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 tmpRegVal;
  99:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 counts;
 100:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 101:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 102:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         static const uint8 CYCODE ADC_SAR_Seq_1_InputsPlacement[] =
 103:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 104:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 105:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_0_PIN
 106:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 107:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****              (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_1_PIN
 108:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u)
 109:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 110:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_2_PIN
 111:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 2u */
 112:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u)
 113:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 114:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_3_PIN
 115:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 3u */
 116:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u)
 117:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 118:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_4_PIN
 119:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 4u */
 120:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u)
 121:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 122:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_5_PIN
 123:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 5u */
 124:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u)
 125:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 126:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_6_PIN
 127:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 6u */
 128:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u)
 129:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 130:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_7_PIN
 131:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 7u */
 132:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u)
 133:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ,(uint8)(ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 134:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (uint8)ADC_SAR_Seq_1_cy_psoc4_sarmux_8__CH_8_PIN
 135:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 8u */
 136:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         };
 137:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 138:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 139:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_IRQ_REMOVE == 0u)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 4


 140:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Start and set interrupt vector */
 141:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CyIntSetPriority(ADC_SAR_Seq_1_INTC_NUMBER, ADC_SAR_Seq_1_INTC_PRIOR_NUMBER);
  33              		.loc 1 141 0
  34 0002 0E20     		mov	r0, #14
  35 0004 0321     		mov	r1, #3
  36 0006 FFF7FEFF 		bl	CyIntSetPriority
  37              	.LVL0:
 142:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         (void)CyIntSetVector(ADC_SAR_Seq_1_INTC_NUMBER, &ADC_SAR_Seq_1_ISR);
  38              		.loc 1 142 0
  39 000a 1A49     		ldr	r1, .L2
  40 000c 0E20     		mov	r0, #14
  41 000e FFF7FEFF 		bl	CyIntSetVector
  42              	.LVL1:
 143:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif   /* End ADC_SAR_Seq_1_IRQ_REMOVE */
 144:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 145:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Init SAR and MUX registers */
 146:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = ADC_SAR_Seq_1_DEFAULT_EN_CHANNELS;
  43              		.loc 1 146 0
  44 0012 194B     		ldr	r3, .L2+4
  45 0014 0122     		mov	r2, #1
  46 0016 1A60     		str	r2, [r3]
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG;
  47              		.loc 1 147 0
  48 0018 1849     		ldr	r1, .L2+8
  49 001a 1948     		ldr	r0, .L2+12
 148:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_CTRL_REG_CFG;
  50              		.loc 1 148 0
  51 001c 194C     		ldr	r4, .L2+16
  52 001e 1A4B     		ldr	r3, .L2+20
 147:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG = ADC_SAR_Seq_1_DEFAULT_CTRL_REG_CFG;
  53              		.loc 1 147 0
  54 0020 0160     		str	r1, [r0]
  55              		.loc 1 148 0
  56 0022 1C60     		str	r4, [r3]
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  57              		.loc 1 149 0
  58 0024 1949     		ldr	r1, .L2+24
  59 0026 1A48     		ldr	r0, .L2+28
 150:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_COND_REG  = ADC_SAR_Seq_1_COMPARE_MODE;
  60              		.loc 1 150 0
  61 0028 1A4C     		ldr	r4, .L2+32
  62 002a 0023     		mov	r3, #0
 149:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG = ADC_SAR_Seq_1_DEFAULT_RANGE_THRES_REG_CFG;
  63              		.loc 1 149 0
  64 002c 0160     		str	r1, [r0]
  65              		.loc 1 150 0
  66 002e 2360     		str	r3, [r4]
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  67              		.loc 1 151 0
  68 0030 1949     		ldr	r1, .L2+36
  69 0032 1A48     		ldr	r0, .L2+40
 152:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME23_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME23_REG_CFG;
  70              		.loc 1 152 0
  71 0034 1A4C     		ldr	r4, .L2+44
 151:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SAMPLE_TIME01_REG = ADC_SAR_Seq_1_DEFAULT_SAMPLE_TIME01_REG_CFG;
  72              		.loc 1 151 0
  73 0036 0160     		str	r1, [r0]
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 5


  74              		.loc 1 152 0
  75 0038 2160     		str	r1, [r4]
 153:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 154:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0 != 0u)
 155:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_MUX_SWITCH0_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0; 
  76              		.loc 1 155 0
  77 003a 1A49     		ldr	r1, .L2+48
  78 003c 8020     		mov	r0, #128
  79 003e 0C68     		ldr	r4, [r1]
  80 0040 4002     		lsl	r0, r0, #9
  81 0042 2043     		orr	r0, r4
  82 0044 0860     		str	r0, [r1]
 156:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 157:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 158:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_MUX_SWITCH_HW_CTRL_REG |= ADC_SAR_Seq_1_DEFAULT_MUX_SWITCH0; 
 159:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 160:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /*ADC_SAR_Seq_1_CHANNELS_MODE !=0 */    
 161:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  83              		.loc 1 162 0
  84 0046 1849     		ldr	r1, .L2+52
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  85              		.loc 1 163 0
  86 0048 184C     		ldr	r4, .L2+56
 162:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = 0u;
  87              		.loc 1 162 0
  88 004a 0B60     		str	r3, [r1]
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  89              		.loc 1 164 0
  90 004c 1848     		ldr	r0, .L2+60
 165:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_ANA_TRIM_REG = ADC_SAR_Seq_1_TRIM_COEF;
  91              		.loc 1 165 0
  92 004e 1949     		ldr	r1, .L2+64
 163:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = 0u;
  93              		.loc 1 163 0
  94 0050 2360     		str	r3, [r4]
  95              		.loc 1 165 0
  96 0052 0224     		mov	r4, #2
 164:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_INTR_MASK_REG = ADC_SAR_Seq_1_SAR_INTR_MASK;
  97              		.loc 1 164 0
  98 0054 0260     		str	r2, [r0]
  99              		.loc 1 165 0
 100 0056 0C60     		str	r4, [r1]
 166:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 167:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Read and modify default configuration based on characterization */
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 101              		.loc 1 168 0
 102 0058 174C     		ldr	r4, .L2+68
 169:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_NOMINAL_CLOCK_FREQ > (ADC_SAR_Seq_1_MAX_FREQUENCY / 2))
 170:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal &= (uint32)~ADC_SAR_Seq_1_DCEN;
 171:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal |= ADC_SAR_Seq_1_SEL_CSEL_DFT_CHAR;
 172:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else  /* clock speed < 9 Mhz */  
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 174:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* clock speed > 9 Mhz */
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 176:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     
 177:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12)
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 6


 178:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_WOUNDING_REG = ADC_SAR_Seq_1_ALT_WOUNDING;
 179:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 180:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 181:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     for(chNum = 0u; chNum < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM; chNum++)
 182:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 183:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal = (ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_CHANNEL_CONFIG_MASK);
 184:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u)
 185:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal |= ADC_SAR_Seq_1_InputsPlacement[chNum];
 186:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* End ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM > 1u */
 187:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* When the part is wounded to 10-bit then the SUB_RESOLUTION bit 
 188:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit 
 189:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         *  (0) and 8-bit (1) resolution.
 190:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         */
 191:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if((ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12) && \
 192:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             (ADC_SAR_Seq_1_ALT_WOUNDING == ADC_SAR_Seq_1_WOUNDING_10BIT))
 193:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             tmpRegVal &= (uint32)(~ADC_SAR_Seq_1_ALT_RESOLUTION_ON);
 194:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_MAX_RESOLUTION != ADC_SAR_Seq_1_RESOLUTION_12 */
 195:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 196:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 197:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(chNum < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 198:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 199:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 201:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 202:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 203:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 204:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 205:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 206:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 207:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0u)
 208:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 209:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 210:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 211:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 212:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 213:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             else
 214:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 215:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 CY_SET_REG32(ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_SAR_Seq_1_INJ_T
 216:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 217:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_SATURATE_EN_MASK) != 0u)
 218:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 219:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_SATURATE_MASK;
 220:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 221:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 222:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_IS_RANGE_CTRL_EN_MASK) != 0
 223:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 {
 224:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                     ADC_SAR_Seq_1_SAR_INTR_MASK_REG |= ADC_SAR_Seq_1_INJ_RANGE_MASK;
 225:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 }
 226:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 227:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 228:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 229:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_ALT_RESOLUTION_ON) != 0u)
 230:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 231:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_DEFAULT_MAX_WRK_ALT;
 232:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 233:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else
 234:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 7


 235:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                counts = (int32)ADC_SAR_Seq_1_SAR_WRK_MAX_12BIT;
 236:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 237:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 238:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((ADC_SAR_Seq_1_channelsConfig[chNum] & ADC_SAR_Seq_1_DIFFERENTIAL_EN) == 0u)
 239:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {  
 240:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if((ADC_SAR_Seq_1_DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED) && \
 241:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 (ADC_SAR_Seq_1_DEFAULT_NEG_INPUT_SEL == ADC_SAR_Seq_1__VREF))
 242:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 243:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / -2);
 244:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else    
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 103              		.loc 1 245 0
 104 005a 1849     		ldr	r1, .L2+72
 168:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     tmpRegVal = ADC_SAR_Seq_1_SAR_DFT_CTRL_REG;
 105              		.loc 1 168 0
 106 005c 2068     		ldr	r0, [r4]
 107              	.LVL2:
 246:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FSIGNED */    
 247:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 248:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         else    /* Differential channel */
 249:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 250:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #if(ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED)
 251:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Set offset to the half scale to convert results to signed format */
 252:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = (int16)(counts / 2);
 253:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #else    
 254:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 255:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             #endif /* end ADC_SAR_Seq_1_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC_SAR_Seq_1__FUNSIGNED 
 256:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 257:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Calculate gain in counts per 10 volts with rounding */
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) + 
 259:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                             ADC_SAR_Seq_1_DEFAULT_VREF_MV_VALUE) / (ADC_SAR_Seq_1_DEFAULT_VREF_MV_V
 260:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 261:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 108              		.loc 1 261 0
 109              		@ sp needed for prologue
 173:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         tmpRegVal |= ADC_SAR_Seq_1_DLY_INC;
 110              		.loc 1 173 0
 111 005e 0243     		orr	r2, r0
 112              	.LVL3:
 175:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_DFT_CTRL_REG = tmpRegVal;
 113              		.loc 1 175 0
 114 0060 2260     		str	r2, [r4]
 115              	.LVL4:
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 116              		.loc 1 200 0
 117 0062 174A     		ldr	r2, .L2+76
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) + 
 118              		.loc 1 258 0
 119 0064 1748     		ldr	r0, .L2+80
 200:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRe
 120              		.loc 1 200 0
 121 0066 1360     		str	r3, [r2]
 122              	.LVL5:
 245:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_offset[chNum] = 0;
 123              		.loc 1 245 0
 124 0068 0B80     		strh	r3, [r1]
 258:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_countsPer10Volt[chNum] = (int16)(((counts * ADC_SAR_Seq_1_10MV_COUNTS) + 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 8


 125              		.loc 1 258 0
 126 006a 8023     		mov	r3, #128
 127 006c 5C01     		lsl	r4, r3, #5
 128 006e 0460     		str	r4, [r0]
 129              	.LVL6:
 130              		.loc 1 261 0
 131 0070 10BD     		pop	{r4, pc}
 132              	.L3:
 133 0072 C046     		.align	2
 134              	.L2:
 135 0074 00000000 		.word	ADC_SAR_Seq_1_ISR
 136 0078 20001A40 		.word	1075445792
 137 007c 70020051 		.word	1358955120
 138 0080 00001A40 		.word	1075445760
 139 0084 84000080 		.word	-2147483516
 140 0088 04001A40 		.word	1075445764
 141 008c 0000FF07 		.word	134152192
 142 0090 18001A40 		.word	1075445784
 143 0094 1C001A40 		.word	1075445788
 144 0098 04000400 		.word	262148
 145 009c 10001A40 		.word	1075445776
 146 00a0 14001A40 		.word	1075445780
 147 00a4 00031A40 		.word	1075446528
 148 00a8 28021A40 		.word	1075446312
 149 00ac 38021A40 		.word	1075446328
 150 00b0 18021A40 		.word	1075446296
 151 00b4 000F1A40 		.word	1075449600
 152 00b8 30001A40 		.word	1075445808
 153 00bc 00000000 		.word	ADC_SAR_Seq_1_offset
 154 00c0 80001A40 		.word	1075445888
 155 00c4 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 156              		.cfi_endproc
 157              	.LFE1:
 158              		.size	ADC_SAR_Seq_1_Init, .-ADC_SAR_Seq_1_Init
 159              		.section	.text.ADC_SAR_Seq_1_Enable,"ax",%progbits
 160              		.align	2
 161              		.global	ADC_SAR_Seq_1_Enable
 162              		.code	16
 163              		.thumb_func
 164              		.type	ADC_SAR_Seq_1_Enable, %function
 165              	ADC_SAR_Seq_1_Enable:
 166              	.LFB2:
 262:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 263:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 264:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_1_Enable
 265:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 266:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 267:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 268:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Enables the clock and analog power for SAR ADC.
 269:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 270:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 271:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 272:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 273:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 274:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 275:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 276:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 9


 277:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Enable(void)
 278:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 167              		.loc 1 278 0
 168              		.cfi_startproc
 169 0000 08B5     		push	{r3, lr}
 170              	.LCFI1:
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 3, -8
 173              		.cfi_offset 14, -4
 279:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG |= ADC_SAR_Seq_1_ENABLE;
 174              		.loc 1 279 0
 175 0002 054B     		ldr	r3, .L5
 176 0004 8022     		mov	r2, #128
 177 0006 1968     		ldr	r1, [r3]
 178 0008 1006     		lsl	r0, r2, #24
 179 000a 0843     		orr	r0, r1
 180 000c 1860     		str	r0, [r3]
 280:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* The block is ready to use 10 us after the enable signal is set high. */
 281:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CyDelayUs(ADC_SAR_Seq_1_10US_DELAY);
 181              		.loc 1 281 0
 182 000e 0A20     		mov	r0, #10
 183 0010 FFF7FEFF 		bl	CyDelayUs
 184              	.LVL7:
 282:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 185              		.loc 1 282 0
 186              		@ sp needed for prologue
 187 0014 08BD     		pop	{r3, pc}
 188              	.L6:
 189 0016 C046     		.align	2
 190              	.L5:
 191 0018 00001A40 		.word	1075445760
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	ADC_SAR_Seq_1_Enable, .-ADC_SAR_Seq_1_Enable
 195              		.section	.text.ADC_SAR_Seq_1_Start,"ax",%progbits
 196              		.align	2
 197              		.global	ADC_SAR_Seq_1_Start
 198              		.code	16
 199              		.thumb_func
 200              		.type	ADC_SAR_Seq_1_Start, %function
 201              	ADC_SAR_Seq_1_Start:
 202              	.LFB0:
  65:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 203              		.loc 1 65 0
 204              		.cfi_startproc
 205 0000 10B5     		push	{r4, lr}
 206              	.LCFI2:
 207              		.cfi_def_cfa_offset 8
 208              		.cfi_offset 4, -8
 209              		.cfi_offset 14, -4
  67:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(ADC_SAR_Seq_1_initVar == 0u)
 210              		.loc 1 67 0
 211 0002 054C     		ldr	r4, .L10
 212 0004 2378     		ldrb	r3, [r4]
 213 0006 002B     		cmp	r3, #0
 214 0008 03D1     		bne	.L8
  69:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_Init();
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 10


 215              		.loc 1 69 0
 216 000a FFF7FEFF 		bl	ADC_SAR_Seq_1_Init
 217              	.LVL8:
  70:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_initVar = 1u;
 218              		.loc 1 70 0
 219 000e 0120     		mov	r0, #1
 220 0010 2070     		strb	r0, [r4]
 221              	.L8:
  72:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_Enable();
 222              		.loc 1 72 0
 223 0012 FFF7FEFF 		bl	ADC_SAR_Seq_1_Enable
 224              	.LVL9:
  73:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 225              		.loc 1 73 0
 226              		@ sp needed for prologue
 227 0016 10BD     		pop	{r4, pc}
 228              	.L11:
 229              		.align	2
 230              	.L10:
 231 0018 00000000 		.word	.LANCHOR0
 232              		.cfi_endproc
 233              	.LFE0:
 234              		.size	ADC_SAR_Seq_1_Start, .-ADC_SAR_Seq_1_Start
 235              		.section	.text.ADC_SAR_Seq_1_Stop,"ax",%progbits
 236              		.align	2
 237              		.global	ADC_SAR_Seq_1_Stop
 238              		.code	16
 239              		.thumb_func
 240              		.type	ADC_SAR_Seq_1_Stop, %function
 241              	ADC_SAR_Seq_1_Stop:
 242              	.LFB3:
 283:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 284:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 285:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_Stop
 287:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 288:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 289:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 290:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 291:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mode.
 292:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 293:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 294:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 295:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 296:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 297:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 298:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 299:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 300:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_Stop(void)
 301:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 243              		.loc 1 301 0
 244              		.cfi_startproc
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 245              		.loc 1 302 0
 246 0000 024B     		ldr	r3, .L13
 303:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 247              		.loc 1 303 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 11


 248              		@ sp needed for prologue
 302:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CTRL_REG &= (uint32)~ADC_SAR_Seq_1_ENABLE;
 249              		.loc 1 302 0
 250 0002 1A68     		ldr	r2, [r3]
 251 0004 5000     		lsl	r0, r2, #1
 252 0006 4108     		lsr	r1, r0, #1
 253 0008 1960     		str	r1, [r3]
 254              		.loc 1 303 0
 255 000a 7047     		bx	lr
 256              	.L14:
 257              		.align	2
 258              	.L13:
 259 000c 00001A40 		.word	1075445760
 260              		.cfi_endproc
 261              	.LFE3:
 262              		.size	ADC_SAR_Seq_1_Stop, .-ADC_SAR_Seq_1_Stop
 263              		.section	.text.ADC_SAR_Seq_1_StartConvert,"ax",%progbits
 264              		.align	2
 265              		.global	ADC_SAR_Seq_1_StartConvert
 266              		.code	16
 267              		.thumb_func
 268              		.type	ADC_SAR_Seq_1_StartConvert, %function
 269              	ADC_SAR_Seq_1_StartConvert:
 270              	.LFB4:
 304:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 305:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 306:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 307:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StartConvert
 308:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 309:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 310:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 311:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description:
 312:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  For free running mode, this API starts the conversion process and it
 313:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  runs continuously.
 314:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 315:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  In a triggered mode, this routine triggers every conversion by
 316:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 317:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  every conversion has to start by this API.
 318:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 319:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 320:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 321:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 322:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 323:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 324:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 325:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 326:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StartConvert(void)
 327:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 271              		.loc 1 327 0
 272              		.cfi_startproc
 328:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 329:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG |= ADC_SAR_Seq_1_CONTINUOUS_EN;
 273              		.loc 1 329 0
 274 0000 034B     		ldr	r3, .L16
 275 0002 8022     		mov	r2, #128
 276 0004 1968     		ldr	r1, [r3]
 277 0006 5002     		lsl	r0, r2, #9
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 12


 278 0008 0843     		orr	r0, r1
 279 000a 1860     		str	r0, [r3]
 330:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #else /* Firmware trigger */
 331:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_START_CTRL_REG = ADC_SAR_Seq_1_FW_TRIGGER;
 332:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* End ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 333:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 334:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 280              		.loc 1 334 0
 281              		@ sp needed for prologue
 282 000c 7047     		bx	lr
 283              	.L17:
 284 000e C046     		.align	2
 285              	.L16:
 286 0010 04001A40 		.word	1075445764
 287              		.cfi_endproc
 288              	.LFE4:
 289              		.size	ADC_SAR_Seq_1_StartConvert, .-ADC_SAR_Seq_1_StartConvert
 290              		.section	.text.ADC_SAR_Seq_1_StopConvert,"ax",%progbits
 291              		.align	2
 292              		.global	ADC_SAR_Seq_1_StopConvert
 293              		.code	16
 294              		.thumb_func
 295              		.type	ADC_SAR_Seq_1_StopConvert, %function
 296              	ADC_SAR_Seq_1_StopConvert:
 297              	.LFB5:
 335:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 336:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 337:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 338:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_StopConvert
 339:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 340:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 341:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 342:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Forces the ADC to stop all conversions.
 343:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 344:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 345:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 346:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 347:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 348:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 349:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 350:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 351:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_StopConvert(void)
 352:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 298              		.loc 1 352 0
 299              		.cfi_startproc
 353:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE_SEL == ADC_SAR_Seq_1__FREERUNNING)
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 300              		.loc 1 354 0
 301 0000 024B     		ldr	r3, .L19
 302 0002 034A     		ldr	r2, .L19+4
 303 0004 1968     		ldr	r1, [r3]
 355:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_DEFAULT_SAMPLE_MODE == ADC_SAR_Seq_1__FREERUNNING */
 356:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 304              		.loc 1 356 0
 305              		@ sp needed for prologue
 354:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_SAR_Seq_1_CONTINUOUS_EN);
 306              		.loc 1 354 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 13


 307 0006 0A40     		and	r2, r1
 308 0008 1A60     		str	r2, [r3]
 309              		.loc 1 356 0
 310 000a 7047     		bx	lr
 311              	.L20:
 312              		.align	2
 313              	.L19:
 314 000c 04001A40 		.word	1075445764
 315 0010 FFFFFEFF 		.word	-65537
 316              		.cfi_endproc
 317              	.LFE5:
 318              		.size	ADC_SAR_Seq_1_StopConvert, .-ADC_SAR_Seq_1_StopConvert
 319              		.section	.text.ADC_SAR_Seq_1_IsEndConversion,"ax",%progbits
 320              		.align	2
 321              		.global	ADC_SAR_Seq_1_IsEndConversion
 322              		.code	16
 323              		.thumb_func
 324              		.type	ADC_SAR_Seq_1_IsEndConversion, %function
 325              	ADC_SAR_Seq_1_IsEndConversion:
 326              	.LFB6:
 357:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 358:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 359:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 360:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_IsEndConversion
 361:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 362:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 363:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 364:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Checks for ADC end of conversion for the case one
 365:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channel and end of scan for the case of multiple channels. It acts
 366:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  as a software version of the EOC. This function provides the
 367:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  programmer with two options. In one mode this function
 368:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  immediately returns with the conversion status. In the other mode,
 369:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  the function does not return (blocking) until the conversion has
 370:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  completed.
 371:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 372:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 373:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 374:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 375:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 376:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              for injection channel
 377:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 378:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *                              channel conversion
 379:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 380:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 381:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 382:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 383:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 384:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 385:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** uint32 ADC_SAR_Seq_1_IsEndConversion(uint32 retMode)
 386:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 327              		.loc 1 386 0
 328              		.cfi_startproc
 329              	.LVL10:
 330 0000 011C     		mov	r1, r0
 331 0002 00B5     		push	{lr}
 332              	.LCFI3:
 333              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 14


 334              		.cfi_offset 14, -4
 387:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 status = 0u;
 335              		.loc 1 387 0
 336 0004 0020     		mov	r0, #0
 337              	.LVL11:
 388:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 389:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS | ADC_SAR_Seq_1_WAIT_FOR_RESULT)) != 0u)
 338              		.loc 1 389 0
 339 0006 8B07     		lsl	r3, r1, #30
 340 0008 0DD0     		beq	.L26
 390:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 391:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         do
 392:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 394:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }while((status == 0u) && ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT) != 0u));
 341              		.loc 1 394 0
 342 000a 0220     		mov	r0, #2
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 343              		.loc 1 393 0
 344 000c 064A     		ldr	r2, .L31
 345 000e 0123     		mov	r3, #1
 346              		.loc 1 394 0
 347 0010 0140     		and	r1, r0
 348              	.LVL12:
 349 0012 01E0     		b	.L27
 350              	.LVL13:
 351              	.L30:
 352              		.loc 1 394 0 is_stmt 0 discriminator 1
 353 0014 0029     		cmp	r1, #0
 354 0016 06D0     		beq	.L26
 355              	.LVL14:
 356              	.L27:
 393:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             status = ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_EOS_MASK;
 357              		.loc 1 393 0 is_stmt 1
 358 0018 1068     		ldr	r0, [r2]
 359 001a 1840     		and	r0, r3
 360              	.LVL15:
 361              		.loc 1 394 0
 362 001c FAD0     		beq	.L30
 395:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 396:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if(status != 0u)
 397:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
 398:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             /* Clear EOS bit */
 399:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_EOS_MASK;
 363              		.loc 1 399 0
 364 001e 024A     		ldr	r2, .L31
 365 0020 0121     		mov	r1, #1
 366 0022 1160     		str	r1, [r2]
 367 0024 0120     		mov	r0, #1
 368              	.LVL16:
 369              	.L26:
 400:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 401:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 402:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 403:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 404:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         if((retMode & (ADC_SAR_Seq_1_RETURN_STATUS_INJ | ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ)) != 0u)
 405:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         {
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 15


 406:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             do
 407:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 408:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 status |= ADC_SAR_Seq_1_SAR_INTR_REG & ADC_SAR_Seq_1_INJ_EOC_MASK;
 409:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }while(((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u) &&
 410:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                    ((retMode & ADC_SAR_Seq_1_WAIT_FOR_RESULT_INJ) != 0u));
 411:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 412:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((status & ADC_SAR_Seq_1_INJ_EOC_MASK) != 0u)
 413:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 414:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 /* Clear Injection EOS bit */
 415:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_SAR_INTR_REG = ADC_SAR_Seq_1_INJ_EOC_MASK;
 416:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }
 417:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         }
 418:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 419:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 420:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return (status);
 421:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 370              		.loc 1 421 0
 371              		@ sp needed for prologue
 372 0026 00BD     		pop	{pc}
 373              	.L32:
 374              		.align	2
 375              	.L31:
 376 0028 10021A40 		.word	1075446288
 377              		.cfi_endproc
 378              	.LFE6:
 379              		.size	ADC_SAR_Seq_1_IsEndConversion, .-ADC_SAR_Seq_1_IsEndConversion
 380              		.section	.text.ADC_SAR_Seq_1_GetResult16,"ax",%progbits
 381              		.align	2
 382              		.global	ADC_SAR_Seq_1_GetResult16
 383              		.code	16
 384              		.thumb_func
 385              		.type	ADC_SAR_Seq_1_GetResult16, %function
 386              	ADC_SAR_Seq_1_GetResult16:
 387              	.LFB7:
 422:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 423:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 424:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 425:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_GetResult16
 426:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 427:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 428:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 429:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Gets the data available in the SAR DATA register.
 430:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 431:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 432:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: The ADC channel in which to return the result. The first channel
 433:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 434:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 435:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 436:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Returns converted data as a signed 16-bit integer
 437:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 438:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 439:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** int16 ADC_SAR_Seq_1_GetResult16(uint32 chan)
 440:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 388              		.loc 1 440 0
 389              		.cfi_startproc
 390              	.LVL17:
 391 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 16


 392              	.LCFI4:
 393              		.cfi_def_cfa_offset 8
 394              		.cfi_offset 3, -8
 395              		.cfi_offset 14, -4
 441:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     uint32 result;
 442:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 443:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 396              		.loc 1 444 0
 397 0002 0028     		cmp	r0, #0
 398 0004 05D1     		bne	.L37
 445:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 446:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     if(chan < ADC_SAR_Seq_1_SEQUENCED_CHANNELS_NUM)
 447:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 448:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_Seq_1_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) 
 399              		.loc 1 448 0
 400 0006 054B     		ldr	r3, .L38
 401 0008 1868     		ldr	r0, [r3]
 402              	.LVL18:
 403 000a 0104     		lsl	r1, r0, #16
 404 000c 0A0C     		lsr	r2, r1, #16
 405              	.LVL19:
 406              	.L35:
 449:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 ADC_SAR_Seq_1_RESULT_MASK;
 450:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 451:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     else
 452:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 453:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 454:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = ADC_SAR_Seq_1_SAR_INJ_RESULT_REG & ADC_SAR_Seq_1_RESULT_MASK;
 455:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #else
 456:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             result = 0u;
 457:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 458:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 459:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 460:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     return ( (int16)result );
 407              		.loc 1 460 0
 408 000e 10B2     		sxth	r0, r2
 461:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 409              		.loc 1 461 0
 410              		@ sp needed for prologue
 411 0010 08BD     		pop	{r3, pc}
 412              	.LVL20:
 413              	.L37:
 444:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 414              		.loc 1 444 0 discriminator 1
 415 0012 0020     		mov	r0, #0
 416              	.LVL21:
 417 0014 FFF7FEFF 		bl	CyHalt
 418              	.LVL22:
 419 0018 0022     		mov	r2, #0
 420 001a F8E7     		b	.L35
 421              	.L39:
 422              		.align	2
 423              	.L38:
 424 001c 80011A40 		.word	1075446144
 425              		.cfi_endproc
 426              	.LFE7:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 17


 427              		.size	ADC_SAR_Seq_1_GetResult16, .-ADC_SAR_Seq_1_GetResult16
 428              		.section	.text.ADC_SAR_Seq_1_SetChanMask,"ax",%progbits
 429              		.align	2
 430              		.global	ADC_SAR_Seq_1_SetChanMask
 431              		.code	16
 432              		.thumb_func
 433              		.type	ADC_SAR_Seq_1_SetChanMask, %function
 434              	ADC_SAR_Seq_1_SetChanMask:
 435              	.LFB8:
 462:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 463:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 464:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 465:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetChanMask
 466:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 467:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 468:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 469:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel enable mask.
 470:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 471:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 472:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that will be
 473:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  scanned. Setting bits for channels that do not exist will have no
 474:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  effect. For example, if only 6 channels were enabled, setting a
 475:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 476:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  This API will not enable the injection channel.
 477:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Examples: If the component is setup to sequence through 8
 478:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 479:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 480:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 481:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 482:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 483:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 484:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetChanMask(uint32 mask)
 485:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 436              		.loc 1 485 0
 437              		.cfi_startproc
 438              	.LVL23:
 486:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_CHAN_EN_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 439              		.loc 1 486 0
 440 0000 0123     		mov	r3, #1
 441 0002 0249     		ldr	r1, .L41
 442 0004 1840     		and	r0, r3
 443              	.LVL24:
 444 0006 0860     		str	r0, [r1]
 487:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 445              		.loc 1 487 0
 446              		@ sp needed for prologue
 447 0008 7047     		bx	lr
 448              	.L42:
 449 000a C046     		.align	2
 450              	.L41:
 451 000c 20001A40 		.word	1075445792
 452              		.cfi_endproc
 453              	.LFE8:
 454              		.size	ADC_SAR_Seq_1_SetChanMask, .-ADC_SAR_Seq_1_SetChanMask
 455              		.section	.text.ADC_SAR_Seq_1_SetLowLimit,"ax",%progbits
 456              		.align	2
 457              		.global	ADC_SAR_Seq_1_SetLowLimit
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 18


 458              		.code	16
 459              		.thumb_func
 460              		.type	ADC_SAR_Seq_1_SetLowLimit, %function
 461              	ADC_SAR_Seq_1_SetLowLimit:
 462              	.LFB9:
 488:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 489:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED)
 490:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 491:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 492:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 493:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_EnableInjection
 494:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 495:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 496:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 497:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Enables the injection channel for the next scan only.
 498:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 499:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 500:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 501:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 502:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 503:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  None.
 504:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 505:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 506:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     void ADC_SAR_Seq_1_EnableInjection(void)
 507:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 508:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         ADC_SAR_Seq_1_SAR_INJ_CHAN_CONFIG_REG |= ADC_SAR_Seq_1_INJ_CHAN_EN;
 509:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 510:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 511:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #endif /* ADC_SAR_Seq_1_INJ_CHANNEL_ENABLED */
 512:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 513:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 514:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 515:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLowLimit
 516:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 517:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 518:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 519:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 520:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 521:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 522:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  lowLimit: The low limit for a limit condition.
 523:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 524:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 525:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 526:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 527:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 528:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLowLimit(uint32 lowLimit)
 529:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 463              		.loc 1 529 0
 464              		.cfi_startproc
 465              	.LVL25:
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 466              		.loc 1 530 0
 467 0000 054B     		ldr	r3, .L44
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 468              		.loc 1 531 0
 469 0002 0004     		lsl	r0, r0, #16
 470              	.LVL26:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 19


 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 471              		.loc 1 530 0
 472 0004 1A68     		ldr	r2, [r3]
 532:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 473              		.loc 1 532 0
 474              		@ sp needed for prologue
 530:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_LOW_MASK);
 475              		.loc 1 530 0
 476 0006 110C     		lsr	r1, r2, #16
 477 0008 0A04     		lsl	r2, r1, #16
 478 000a 1A60     		str	r2, [r3]
 531:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= lowLimit & ADC_SAR_Seq_1_RANGE_LOW_MASK;
 479              		.loc 1 531 0
 480 000c 1968     		ldr	r1, [r3]
 481 000e 020C     		lsr	r2, r0, #16
 482 0010 0A43     		orr	r2, r1
 483 0012 1A60     		str	r2, [r3]
 484              		.loc 1 532 0
 485 0014 7047     		bx	lr
 486              	.L45:
 487 0016 C046     		.align	2
 488              	.L44:
 489 0018 18001A40 		.word	1075445784
 490              		.cfi_endproc
 491              	.LFE9:
 492              		.size	ADC_SAR_Seq_1_SetLowLimit, .-ADC_SAR_Seq_1_SetLowLimit
 493              		.section	.text.ADC_SAR_Seq_1_SetHighLimit,"ax",%progbits
 494              		.align	2
 495              		.global	ADC_SAR_Seq_1_SetHighLimit
 496              		.code	16
 497              		.thumb_func
 498              		.type	ADC_SAR_Seq_1_SetHighLimit, %function
 499              	ADC_SAR_Seq_1_SetHighLimit:
 500              	.LFB10:
 533:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 534:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 535:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 536:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetHighLimit
 537:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 538:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 539:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 540:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the low limit parameter for a limit condition.
 541:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 542:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 543:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  highLimit: The high limit for a limit condition.
 544:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 545:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 546:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 547:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 548:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 549:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetHighLimit(uint32 highLimit)
 550:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 501              		.loc 1 550 0
 502              		.cfi_startproc
 503              	.LVL27:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 504              		.loc 1 551 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 20


 505 0000 044B     		ldr	r3, .L47
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 506              		.loc 1 552 0
 507 0002 0004     		lsl	r0, r0, #16
 508              	.LVL28:
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 509              		.loc 1 551 0
 510 0004 1A68     		ldr	r2, [r3]
 553:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 511              		.loc 1 553 0
 512              		@ sp needed for prologue
 551:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG &= (uint32)(~ADC_SAR_Seq_1_RANGE_HIGH_MASK);
 513              		.loc 1 551 0
 514 0006 1104     		lsl	r1, r2, #16
 515 0008 0A0C     		lsr	r2, r1, #16
 516 000a 1A60     		str	r2, [r3]
 552:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_SAR_Seq_1_RANGE_HIGH_OFFSET);
 517              		.loc 1 552 0
 518 000c 1968     		ldr	r1, [r3]
 519 000e 0843     		orr	r0, r1
 520 0010 1860     		str	r0, [r3]
 521              		.loc 1 553 0
 522 0012 7047     		bx	lr
 523              	.L48:
 524              		.align	2
 525              	.L47:
 526 0014 18001A40 		.word	1075445784
 527              		.cfi_endproc
 528              	.LFE10:
 529              		.size	ADC_SAR_Seq_1_SetHighLimit, .-ADC_SAR_Seq_1_SetHighLimit
 530              		.section	.text.ADC_SAR_Seq_1_SetLimitMask,"ax",%progbits
 531              		.align	2
 532              		.global	ADC_SAR_Seq_1_SetLimitMask
 533              		.code	16
 534              		.thumb_func
 535              		.type	ADC_SAR_Seq_1_SetLimitMask, %function
 536              	ADC_SAR_Seq_1_SetLimitMask:
 537              	.LFB11:
 554:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 555:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 556:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetLimitMask
 558:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 559:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 560:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 561:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel limit condition mask.
 562:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 563:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 564:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 565:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 566:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 6 channels were enabled,
 567:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 568:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 569:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 570:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 571:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 572:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 21


 573:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetLimitMask(uint32 mask)
 574:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 538              		.loc 1 574 0
 539              		.cfi_startproc
 540              	.LVL29:
 575:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_RANGE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 541              		.loc 1 575 0
 542 0000 0123     		mov	r3, #1
 543 0002 0249     		ldr	r1, .L50
 544 0004 1840     		and	r0, r3
 545              	.LVL30:
 546 0006 0860     		str	r0, [r1]
 576:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 547              		.loc 1 576 0
 548              		@ sp needed for prologue
 549 0008 7047     		bx	lr
 550              	.L51:
 551 000a C046     		.align	2
 552              	.L50:
 553 000c 38021A40 		.word	1075446328
 554              		.cfi_endproc
 555              	.LFE11:
 556              		.size	ADC_SAR_Seq_1_SetLimitMask, .-ADC_SAR_Seq_1_SetLimitMask
 557              		.section	.text.ADC_SAR_Seq_1_SetSatMask,"ax",%progbits
 558              		.align	2
 559              		.global	ADC_SAR_Seq_1_SetSatMask
 560              		.code	16
 561              		.thumb_func
 562              		.type	ADC_SAR_Seq_1_SetSatMask, %function
 563              	ADC_SAR_Seq_1_SetSatMask:
 564              	.LFB12:
 577:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 578:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 579:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 580:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetSatMask
 581:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 582:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 583:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 584:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Sets the channel saturation event mask.
 585:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 586:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 587:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  mask: Sets which channels that may cause a
 588:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 589:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  will have no effect. For example, if only 8 channels were enabled,
 590:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 591:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 592:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 593:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 594:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 595:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 596:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetSatMask(uint32 mask)
 597:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 565              		.loc 1 597 0
 566              		.cfi_startproc
 567              	.LVL31:
 598:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_SAR_SATURATE_INTR_MASK_REG = mask & ADC_SAR_Seq_1_MAX_CHANNELS_EN_MASK;
 568              		.loc 1 598 0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 22


 569 0000 0123     		mov	r3, #1
 570 0002 0249     		ldr	r1, .L53
 571 0004 1840     		and	r0, r3
 572              	.LVL32:
 573 0006 0860     		str	r0, [r1]
 599:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 574              		.loc 1 599 0
 575              		@ sp needed for prologue
 576 0008 7047     		bx	lr
 577              	.L54:
 578 000a C046     		.align	2
 579              	.L53:
 580 000c 28021A40 		.word	1075446312
 581              		.cfi_endproc
 582              	.LFE12:
 583              		.size	ADC_SAR_Seq_1_SetSatMask, .-ADC_SAR_Seq_1_SetSatMask
 584              		.section	.text.ADC_SAR_Seq_1_SetOffset,"ax",%progbits
 585              		.align	2
 586              		.global	ADC_SAR_Seq_1_SetOffset
 587              		.code	16
 588              		.thumb_func
 589              		.type	ADC_SAR_Seq_1_SetOffset, %function
 590              	ADC_SAR_Seq_1_SetOffset:
 591              	.LFB13:
 600:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 601:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 602:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 603:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetOffset
 604:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 605:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 606:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 607:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   Description: Sets the ADC offset which is used by the functions
 608:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 609:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   to substract the offset from the given reading
 610:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   before calculating the voltage conversion.
 611:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 612:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 613:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 614:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  offset: This value is a measured value when the
 615:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *          inputs are shorted or connected to the same input voltage.
 616:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 617:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 618:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 619:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 620:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 621:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_Offset:  Modified to set the user provided offset.
 622:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 623:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 624:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetOffset(uint32 chan, int16 offset)
 625:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 592              		.loc 1 625 0
 593              		.cfi_startproc
 594              	.LVL33:
 595 0000 38B5     		push	{r3, r4, r5, lr}
 596              	.LCFI5:
 597              		.cfi_def_cfa_offset 16
 598              		.cfi_offset 3, -16
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 23


 599              		.cfi_offset 4, -12
 600              		.cfi_offset 5, -8
 601              		.cfi_offset 14, -4
 602              		.loc 1 625 0
 603 0002 041C     		mov	r4, r0
 604 0004 0D1C     		mov	r5, r1
 626:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 627:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 605              		.loc 1 627 0
 606 0006 0028     		cmp	r0, #0
 607 0008 02D0     		beq	.L56
 608              		.loc 1 627 0 is_stmt 0 discriminator 1
 609 000a 0020     		mov	r0, #0
 610              	.LVL34:
 611 000c FFF7FEFF 		bl	CyHalt
 612              	.LVL35:
 613              	.L56:
 628:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 629:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_offset[chan] = offset;
 614              		.loc 1 629 0 is_stmt 1
 615 0010 014B     		ldr	r3, .L60
 616 0012 6000     		lsl	r0, r4, #1
 617 0014 C552     		strh	r5, [r0, r3]
 630:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 618              		.loc 1 630 0
 619              		@ sp needed for prologue
 620              	.LVL36:
 621 0016 38BD     		pop	{r3, r4, r5, pc}
 622              	.L61:
 623              		.align	2
 624              	.L60:
 625 0018 00000000 		.word	ADC_SAR_Seq_1_offset
 626              		.cfi_endproc
 627              	.LFE13:
 628              		.size	ADC_SAR_Seq_1_SetOffset, .-ADC_SAR_Seq_1_SetOffset
 629              		.section	.text.ADC_SAR_Seq_1_SetGain,"ax",%progbits
 630              		.align	2
 631              		.global	ADC_SAR_Seq_1_SetGain
 632              		.code	16
 633              		.thumb_func
 634              		.type	ADC_SAR_Seq_1_SetGain, %function
 635              	ADC_SAR_Seq_1_SetGain:
 636              	.LFB14:
 631:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 632:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 633:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** /*******************************************************************************
 634:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Function Name: ADC_SAR_Seq_1_SetGain
 635:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** ********************************************************************************
 636:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 637:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Summary:
 638:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 639:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion functions below. This value is set by default by the
 640:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  reference and input range settings. It should only be used to further
 641:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  calibrate the ADC with a known input or if an external reference is
 642:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 643:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 644:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  conversion between ADC counts and voltage.
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 24


 645:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 646:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Parameters:
 647:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  chan: ADC channel number.
 648:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  adcGain: ADC gain in counts per 10 volts.
 649:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 650:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Return:
 651:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  None.
 652:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 653:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** * Global variables:
 654:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *  ADC_SAR_Seq_1_CountsPer10Volt:  modified to set the ADC gain in counts 
 655:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *   per 10 volt.
 656:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *
 657:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** *******************************************************************************/
 658:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** void ADC_SAR_Seq_1_SetGain(uint32 chan, int32 adcGain)
 659:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** {
 637              		.loc 1 659 0
 638              		.cfi_startproc
 639              	.LVL37:
 640 0000 38B5     		push	{r3, r4, r5, lr}
 641              	.LCFI6:
 642              		.cfi_def_cfa_offset 16
 643              		.cfi_offset 3, -16
 644              		.cfi_offset 4, -12
 645              		.cfi_offset 5, -8
 646              		.cfi_offset 14, -4
 647              		.loc 1 659 0
 648 0002 041C     		mov	r4, r0
 649 0004 0D1C     		mov	r5, r1
 660:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 661:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 650              		.loc 1 661 0
 651 0006 0028     		cmp	r0, #0
 652 0008 02D0     		beq	.L63
 653              		.loc 1 661 0 is_stmt 0 discriminator 1
 654 000a 0020     		mov	r0, #0
 655              	.LVL38:
 656 000c FFF7FEFF 		bl	CyHalt
 657              	.LVL39:
 658              	.L63:
 662:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 663:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ADC_SAR_Seq_1_countsPer10Volt[chan] = adcGain;
 659              		.loc 1 663 0 is_stmt 1
 660 0010 014B     		ldr	r3, .L67
 661 0012 A000     		lsl	r0, r4, #2
 662 0014 C550     		str	r5, [r0, r3]
 664:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** }
 663              		.loc 1 664 0
 664              		@ sp needed for prologue
 665              	.LVL40:
 666              	.LVL41:
 667 0016 38BD     		pop	{r3, r4, r5, pc}
 668              	.L68:
 669              		.align	2
 670              	.L67:
 671 0018 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 672              		.cfi_endproc
 673              	.LFE14:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 25


 674              		.size	ADC_SAR_Seq_1_SetGain, .-ADC_SAR_Seq_1_SetGain
 675              		.global	__aeabi_idiv
 676              		.section	.text.ADC_SAR_Seq_1_CountsTo_mVolts,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_SAR_Seq_1_CountsTo_mVolts
 679              		.code	16
 680              		.thumb_func
 681              		.type	ADC_SAR_Seq_1_CountsTo_mVolts, %function
 682              	ADC_SAR_Seq_1_CountsTo_mVolts:
 683              	.LFB15:
 665:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 666:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 667:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** #if(ADC_SAR_Seq_1_DEFAULT_JUSTIFICATION_SEL == ADC_SAR_Seq_1__RIGHT)
 668:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 669:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 670:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 671:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_mVolts
 672:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 673:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 674:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 675:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to mVolts
 676:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 677:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 678:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 679:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 680:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 681:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 682:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 683:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in mVolts
 684:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 685:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 686:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to mVolts.
 687:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts 
 688:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 689:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 690:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 691:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int16 ADC_SAR_Seq_1_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 692:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 684              		.loc 1 692 0
 685              		.cfi_startproc
 686              	.LVL42:
 687 0000 38B5     		push	{r3, r4, r5, lr}
 688              	.LCFI7:
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 3, -16
 691              		.cfi_offset 4, -12
 692              		.cfi_offset 5, -8
 693              		.cfi_offset 14, -4
 694              		.loc 1 692 0
 695 0002 041C     		mov	r4, r0
 696 0004 0D1C     		mov	r5, r1
 693:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int16 mVolts;
 694:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 695:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 697              		.loc 1 696 0
 698 0006 0028     		cmp	r0, #0
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 26


 699 0008 1AD1     		bne	.L76
 700              	.LVL43:
 701              	.L70:
 697:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 698:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 699:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 700:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 701:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 702:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 703:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }    
 704:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 705:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 706:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 702              		.loc 1 707 0
 703 000a 0F4B     		ldr	r3, .L77
 704 000c 6200     		lsl	r2, r4, #1
 705 000e D15A     		ldrh	r1, [r2, r3]
 708:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ? 
 706              		.loc 1 709 0
 707 0010 0E4A     		ldr	r2, .L77+4
 707:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 708              		.loc 1 707 0
 709 0012 681A     		sub	r0, r5, r1
 710 0014 05B2     		sxth	r5, r0
 711              	.LVL44:
 712              		.loc 1 709 0
 713 0016 6A43     		mul	r2, r5
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 714              		.loc 1 710 0
 715 0018 0D4B     		ldr	r3, .L77+8
 716 001a A400     		lsl	r4, r4, #2
 717              	.LVL45:
 718 001c 002D     		cmp	r5, #0
 719 001e 09DD     		ble	.L71
 720              		.loc 1 710 0 is_stmt 0 discriminator 1
 721 0020 1D59     		ldr	r5, [r3, r4]
 722 0022 E90F     		lsr	r1, r5, #31
 723 0024 4819     		add	r0, r1, r5
 724              	.LVL46:
 725 0026 4010     		asr	r0, r0, #1
 726              	.L72:
 711:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  / ADC_SAR_Seq_1_countsPer10Volt[chan]);
 727              		.loc 1 711 0 is_stmt 1
 728 0028 1959     		ldr	r1, [r3, r4]
 729              	.LVL47:
 709:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         mVolts = (int16)((((int32)adcCounts * ADC_SAR_Seq_1_10MV_COUNTS) + ( (adcCounts > 0) ? 
 730              		.loc 1 709 0
 731 002a 1018     		add	r0, r2, r0
 732              	.LVL48:
 733              		.loc 1 711 0
 734 002c FFF7FEFF 		bl	__aeabi_idiv
 735              	.LVL49:
 712:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 714:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 27


 736              		.loc 1 714 0
 737              		@ sp needed for prologue
 713:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( mVolts );
 738              		.loc 1 713 0
 739 0030 00B2     		sxth	r0, r0
 740              		.loc 1 714 0
 741 0032 38BD     		pop	{r3, r4, r5, pc}
 742              	.LVL50:
 743              	.L71:
 710:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                  (ADC_SAR_Seq_1_countsPer10Volt[chan] / 2) : (-(ADC_SAR_Seq_1_countsPer10Volt[chan]
 744              		.loc 1 710 0 discriminator 2
 745 0034 1959     		ldr	r1, [r3, r4]
 746 0036 C80F     		lsr	r0, r1, #31
 747              	.LVL51:
 748 0038 4518     		add	r5, r0, r1
 749              	.LVL52:
 750 003a 6910     		asr	r1, r5, #1
 751 003c 4842     		neg	r0, r1
 752 003e F3E7     		b	.L72
 753              	.LVL53:
 754              	.L76:
 696:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 755              		.loc 1 696 0 discriminator 1
 756 0040 0020     		mov	r0, #0
 757              	.LVL54:
 758 0042 FFF7FEFF 		bl	CyHalt
 759              	.LVL55:
 760 0046 E0E7     		b	.L70
 761              	.L78:
 762              		.align	2
 763              	.L77:
 764 0048 00000000 		.word	ADC_SAR_Seq_1_offset
 765 004c 10270000 		.word	10000
 766 0050 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 767              		.cfi_endproc
 768              	.LFE15:
 769              		.size	ADC_SAR_Seq_1_CountsTo_mVolts, .-ADC_SAR_Seq_1_CountsTo_mVolts
 770              		.global	__aeabi_lmul
 771              		.global	__aeabi_ldivmod
 772              		.section	.text.ADC_SAR_Seq_1_CountsTo_uVolts,"ax",%progbits
 773              		.align	2
 774              		.global	ADC_SAR_Seq_1_CountsTo_uVolts
 775              		.code	16
 776              		.thumb_func
 777              		.type	ADC_SAR_Seq_1_CountsTo_uVolts, %function
 778              	ADC_SAR_Seq_1_CountsTo_uVolts:
 779              	.LFB16:
 715:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 716:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 717:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 718:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_uVolts
 719:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 720:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 721:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 722:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function converts ADC counts to micro Volts
 723:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 724:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 28


 725:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 726:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 727:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  adcCounts: Result from the ADC conversion
 728:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 729:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 730:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in uVolts
 731:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 732:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 733:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to uVolts.
 734:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts 
 735:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 736:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 737:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Theory: 
 738:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 739:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  number in the conversion to uVolts and at the same time not loose 
 740:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  resolution.
 741:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 742:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  on 10 million and later divide on gain in counts per 10V. 
 743:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 744:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 745:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     int32 ADC_SAR_Seq_1_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 746:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 780              		.loc 1 746 0
 781              		.cfi_startproc
 782              	.LVL56:
 783 0000 38B5     		push	{r3, r4, r5, lr}
 784              	.LCFI8:
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 3, -16
 787              		.cfi_offset 4, -12
 788              		.cfi_offset 5, -8
 789              		.cfi_offset 14, -4
 790              		.loc 1 746 0
 791 0002 041C     		mov	r4, r0
 792 0004 0D1C     		mov	r5, r1
 747:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         int64 uVolts;
 748:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 749:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 750:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 793              		.loc 1 750 0
 794 0006 0028     		cmp	r0, #0
 795 0008 02D0     		beq	.L80
 796              		.loc 1 750 0 is_stmt 0 discriminator 1
 797 000a 0020     		mov	r0, #0
 798              	.LVL57:
 799 000c FFF7FEFF 		bl	CyHalt
 800              	.LVL58:
 801              	.L80:
 751:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 752:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 753:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 754:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 755:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 756:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
 757:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }    
 758:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 759:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 29


 760:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 802              		.loc 1 761 0 is_stmt 1
 803 0010 0B4B     		ldr	r3, .L84+8
 804 0012 6200     		lsl	r2, r4, #1
 805 0014 D05A     		ldrh	r0, [r2, r3]
 762:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 763:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         uVolts = ((int64)adcCounts * ADC_SAR_Seq_1_10UV_COUNTS) / ADC_SAR_Seq_1_countsPer10Volt[cha
 806              		.loc 1 763 0
 807 0016 A400     		lsl	r4, r4, #2
 808              	.LVL59:
 761:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 809              		.loc 1 761 0
 810 0018 291A     		sub	r1, r5, r0
 811              	.LVL60:
 812              		.loc 1 763 0
 813 001a 0A4D     		ldr	r5, .L84+12
 814 001c 08B2     		sxth	r0, r1
 815 001e 6459     		ldr	r4, [r4, r5]
 816              	.LVL61:
 817 0020 064B     		ldr	r3, .L84+4
 818 0022 054A     		ldr	r2, .L84
 819 0024 C117     		asr	r1, r0, #31
 820              	.LVL62:
 821 0026 FFF7FEFF 		bl	__aeabi_lmul
 822              	.LVL63:
 823 002a E317     		asr	r3, r4, #31
 824 002c 221C     		mov	r2, r4
 825 002e FFF7FEFF 		bl	__aeabi_ldivmod
 826              	.LVL64:
 764:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 765:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( (int32)uVolts );
 766:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 827              		.loc 1 766 0
 828              		@ sp needed for prologue
 829 0032 38BD     		pop	{r3, r4, r5, pc}
 830              	.L85:
 831 0034 C046C046 		.align	3
 832              	.L84:
 833 0038 80969800 		.word	10000000
 834 003c 00000000 		.word	0
 835 0040 00000000 		.word	ADC_SAR_Seq_1_offset
 836 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 837              		.cfi_endproc
 838              	.LFE16:
 839              		.size	ADC_SAR_Seq_1_CountsTo_uVolts, .-ADC_SAR_Seq_1_CountsTo_uVolts
 840              		.global	__aeabi_i2f
 841              		.global	__aeabi_fmul
 842              		.global	__aeabi_fdiv
 843              		.section	.text.ADC_SAR_Seq_1_CountsTo_Volts,"ax",%progbits
 844              		.align	2
 845              		.global	ADC_SAR_Seq_1_CountsTo_Volts
 846              		.code	16
 847              		.thumb_func
 848              		.type	ADC_SAR_Seq_1_CountsTo_Volts, %function
 849              	ADC_SAR_Seq_1_CountsTo_Volts:
 850              	.LFB17:
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 30


 767:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 768:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 769:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     /*******************************************************************************
 770:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Function Name: ADC_SAR_Seq_1_CountsTo_Volts
 771:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     ********************************************************************************
 772:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 773:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Summary:
 774:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Converts the ADC output to Volts as a floating point number.
 775:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  This function is not available when left data format justification selected.
 776:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 777:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Parameters:
 778:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  chan: The ADC channel number.
 779:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Result from the ADC conversion
 780:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 781:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Return:
 782:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  Results in Volts
 783:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 784:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     * Global variables:
 785:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_countsPer10Volt:  used to convert ADC counts to Volts.
 786:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *  ADC_SAR_Seq_1_Offset:  Used as the offset while converting ADC counts 
 787:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *   to mVolts.
 788:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *
 789:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     *******************************************************************************/
 790:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     float32 ADC_SAR_Seq_1_CountsTo_Volts(uint32 chan, int16 adcCounts)
 791:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     {
 851              		.loc 1 791 0
 852              		.cfi_startproc
 853              	.LVL65:
 854 0000 38B5     		push	{r3, r4, r5, lr}
 855              	.LCFI9:
 856              		.cfi_def_cfa_offset 16
 857              		.cfi_offset 3, -16
 858              		.cfi_offset 4, -12
 859              		.cfi_offset 5, -8
 860              		.cfi_offset 14, -4
 861              		.loc 1 791 0
 862 0002 041C     		mov	r4, r0
 863 0004 0D1C     		mov	r5, r1
 792:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         float32 volts;
 793:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 794:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 795:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         CYASSERT(chan < ADC_SAR_Seq_1_TOTAL_CHANNELS_NUM);
 864              		.loc 1 795 0
 865 0006 0028     		cmp	r0, #0
 866 0008 02D0     		beq	.L87
 867              		.loc 1 795 0 is_stmt 0 discriminator 1
 868 000a 0020     		mov	r0, #0
 869              	.LVL66:
 870 000c FFF7FEFF 		bl	CyHalt
 871              	.LVL67:
 872              	.L87:
 796:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 797:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 798:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #if(ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE)
 799:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             if((ADC_SAR_Seq_1_channelsConfig[chan] & ADC_SAR_Seq_1_AVERAGING_EN) != 0u)
 800:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             {
 801:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****                 adcCounts /= ADC_SAR_Seq_1_DEFAULT_AVG_SAMPLES_DIV;
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 31


 802:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****             }    
 803:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         #endif /* ADC_SAR_Seq_1_DEFAULT_AVG_MODE == ADC_SAR_Seq_1__ACCUMULATE */
 804:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 805:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         /* Subtract ADC offset */
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 873              		.loc 1 806 0 is_stmt 1
 874 0010 0A4B     		ldr	r3, .L91
 875 0012 6200     		lsl	r2, r4, #1
 876 0014 D05A     		ldrh	r0, [r2, r3]
 807:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 877              		.loc 1 808 0
 878 0016 A400     		lsl	r4, r4, #2
 879              	.LVL68:
 806:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         adcCounts -= ADC_SAR_Seq_1_offset[chan];
 880              		.loc 1 806 0
 881 0018 291A     		sub	r1, r5, r0
 882              	.LVL69:
 883              		.loc 1 808 0
 884 001a 08B2     		sxth	r0, r1
 885 001c FFF7FEFF 		bl	__aeabi_i2f
 886              	.LVL70:
 887 0020 0749     		ldr	r1, .L91+4
 888 0022 FFF7FEFF 		bl	__aeabi_fmul
 889              	.LVL71:
 890 0026 074D     		ldr	r5, .L91+8
 809:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c **** 
 810:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         return( volts );
 811:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****     }
 891              		.loc 1 811 0
 892              		@ sp needed for prologue
 808:.\Generated_Source\PSoC4/ADC_SAR_Seq_1.c ****         volts = ((float32)adcCounts * ADC_SAR_Seq_1_10V_COUNTS) / (float32)ADC_SAR_Seq_1_countsPer1
 893              		.loc 1 808 0
 894 0028 6559     		ldr	r5, [r4, r5]
 895 002a 041C     		add	r4, r0, #0
 896 002c 281C     		mov	r0, r5
 897 002e FFF7FEFF 		bl	__aeabi_i2f
 898              	.LVL72:
 899 0032 011C     		add	r1, r0, #0
 900 0034 201C     		add	r0, r4, #0
 901 0036 FFF7FEFF 		bl	__aeabi_fdiv
 902              	.LVL73:
 903              		.loc 1 811 0
 904 003a 38BD     		pop	{r3, r4, r5, pc}
 905              	.L92:
 906              		.align	2
 907              	.L91:
 908 003c 00000000 		.word	ADC_SAR_Seq_1_offset
 909 0040 00002041 		.word	1092616192
 910 0044 00000000 		.word	ADC_SAR_Seq_1_countsPer10Volt
 911              		.cfi_endproc
 912              	.LFE17:
 913              		.size	ADC_SAR_Seq_1_CountsTo_Volts, .-ADC_SAR_Seq_1_CountsTo_Volts
 914              		.comm	ADC_SAR_Seq_1_countsPer10Volt,4,4
 915              		.comm	ADC_SAR_Seq_1_offset,2,4
 916              		.global	ADC_SAR_Seq_1_initVar
 917              		.bss
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 32


 918              		.set	.LANCHOR0,. + 0
 919              		.type	ADC_SAR_Seq_1_initVar, %object
 920              		.size	ADC_SAR_Seq_1_initVar, 1
 921              	ADC_SAR_Seq_1_initVar:
 922 0000 00       		.space	1
 923              		.text
 924              	.Letext0:
 925              		.file 2 ".\\Generated_Source\\PSoC4\\cytypes.h"
 926              		.file 3 ".\\Generated_Source\\PSoC4\\CyLib.h"
 927              		.section	.debug_info,"",%progbits
 928              	.Ldebug_info0:
 929 0000 EF050000 		.4byte	0x5ef
 930 0004 0200     		.2byte	0x2
 931 0006 00000000 		.4byte	.Ldebug_abbrev0
 932 000a 04       		.byte	0x4
 933 000b 01       		.uleb128 0x1
 934 000c 15030000 		.4byte	.LASF62
 935 0010 01       		.byte	0x1
 936 0011 4A020000 		.4byte	.LASF63
 937 0015 C3010000 		.4byte	.LASF64
 938 0019 00000000 		.4byte	.Ldebug_ranges0+0
 939 001d 00000000 		.4byte	0
 940 0021 00000000 		.4byte	0
 941 0025 00000000 		.4byte	.Ldebug_line0
 942 0029 02       		.uleb128 0x2
 943 002a 08       		.byte	0x8
 944 002b 07       		.byte	0x7
 945 002c 86000000 		.4byte	.LASF0
 946 0030 02       		.uleb128 0x2
 947 0031 08       		.byte	0x8
 948 0032 05       		.byte	0x5
 949 0033 CC000000 		.4byte	.LASF1
 950 0037 03       		.uleb128 0x3
 951 0038 04       		.byte	0x4
 952 0039 05       		.byte	0x5
 953 003a 696E7400 		.ascii	"int\000"
 954 003e 02       		.uleb128 0x2
 955 003f 02       		.byte	0x2
 956 0040 05       		.byte	0x5
 957 0041 73030000 		.4byte	.LASF2
 958 0045 02       		.uleb128 0x2
 959 0046 01       		.byte	0x1
 960 0047 06       		.byte	0x6
 961 0048 DA000000 		.4byte	.LASF3
 962 004c 02       		.uleb128 0x2
 963 004d 01       		.byte	0x1
 964 004e 08       		.byte	0x8
 965 004f 65030000 		.4byte	.LASF4
 966 0053 02       		.uleb128 0x2
 967 0054 02       		.byte	0x2
 968 0055 07       		.byte	0x7
 969 0056 FE010000 		.4byte	.LASF5
 970 005a 02       		.uleb128 0x2
 971 005b 04       		.byte	0x4
 972 005c 05       		.byte	0x5
 973 005d 25010000 		.4byte	.LASF6
 974 0061 02       		.uleb128 0x2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 33


 975 0062 04       		.byte	0x4
 976 0063 07       		.byte	0x7
 977 0064 A1010000 		.4byte	.LASF7
 978 0068 02       		.uleb128 0x2
 979 0069 04       		.byte	0x4
 980 006a 07       		.byte	0x7
 981 006b 8D010000 		.4byte	.LASF8
 982 006f 04       		.uleb128 0x4
 983 0070 2E010000 		.4byte	.LASF9
 984 0074 02       		.byte	0x2
 985 0075 5B       		.byte	0x5b
 986 0076 4C000000 		.4byte	0x4c
 987 007a 04       		.uleb128 0x4
 988 007b 15000000 		.4byte	.LASF10
 989 007f 02       		.byte	0x2
 990 0080 5C       		.byte	0x5c
 991 0081 53000000 		.4byte	0x53
 992 0085 04       		.uleb128 0x4
 993 0086 45010000 		.4byte	.LASF11
 994 008a 02       		.byte	0x2
 995 008b 5D       		.byte	0x5d
 996 008c 61000000 		.4byte	0x61
 997 0090 04       		.uleb128 0x4
 998 0091 39040000 		.4byte	.LASF12
 999 0095 02       		.byte	0x2
 1000 0096 5F       		.byte	0x5f
 1001 0097 3E000000 		.4byte	0x3e
 1002 009b 04       		.uleb128 0x4
 1003 009c 01010000 		.4byte	.LASF13
 1004 00a0 02       		.byte	0x2
 1005 00a1 60       		.byte	0x60
 1006 00a2 5A000000 		.4byte	0x5a
 1007 00a6 04       		.uleb128 0x4
 1008 00a7 73020000 		.4byte	.LASF14
 1009 00ab 02       		.byte	0x2
 1010 00ac 61       		.byte	0x61
 1011 00ad B1000000 		.4byte	0xb1
 1012 00b1 02       		.uleb128 0x2
 1013 00b2 04       		.byte	0x4
 1014 00b3 04       		.byte	0x4
 1015 00b4 DC020000 		.4byte	.LASF15
 1016 00b8 02       		.uleb128 0x2
 1017 00b9 08       		.byte	0x8
 1018 00ba 04       		.byte	0x4
 1019 00bb 3E010000 		.4byte	.LASF16
 1020 00bf 04       		.uleb128 0x4
 1021 00c0 C5020000 		.4byte	.LASF17
 1022 00c4 02       		.byte	0x2
 1023 00c5 66       		.byte	0x66
 1024 00c6 30000000 		.4byte	0x30
 1025 00ca 02       		.uleb128 0x2
 1026 00cb 01       		.byte	0x1
 1027 00cc 08       		.byte	0x8
 1028 00cd BF030000 		.4byte	.LASF18
 1029 00d1 04       		.uleb128 0x4
 1030 00d2 44020000 		.4byte	.LASF19
 1031 00d6 02       		.byte	0x2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 34


 1032 00d7 F2       		.byte	0xf2
 1033 00d8 DC000000 		.4byte	0xdc
 1034 00dc 05       		.uleb128 0x5
 1035 00dd 85000000 		.4byte	0x85
 1036 00e1 06       		.uleb128 0x6
 1037 00e2 C4030000 		.4byte	.LASF20
 1038 00e6 02       		.byte	0x2
 1039 00e7 0201     		.2byte	0x102
 1040 00e9 ED000000 		.4byte	0xed
 1041 00ed 07       		.uleb128 0x7
 1042 00ee 04       		.byte	0x4
 1043 00ef F3000000 		.4byte	0xf3
 1044 00f3 08       		.uleb128 0x8
 1045 00f4 01       		.byte	0x1
 1046 00f5 02       		.uleb128 0x2
 1047 00f6 04       		.byte	0x4
 1048 00f7 07       		.byte	0x7
 1049 00f8 7B020000 		.4byte	.LASF21
 1050 00fc 09       		.uleb128 0x9
 1051 00fd 01       		.byte	0x1
 1052 00fe 1C000000 		.4byte	.LASF25
 1053 0102 01       		.byte	0x1
 1054 0103 5F       		.byte	0x5f
 1055 0104 01       		.byte	0x1
 1056 0105 00000000 		.4byte	.LFB1
 1057 0109 C8000000 		.4byte	.LFE1
 1058 010d 00000000 		.4byte	.LLST0
 1059 0111 01       		.byte	0x1
 1060 0112 69010000 		.4byte	0x169
 1061 0116 0A       		.uleb128 0xa
 1062 0117 B4030000 		.4byte	.LASF22
 1063 011b 01       		.byte	0x1
 1064 011c 61       		.byte	0x61
 1065 011d 85000000 		.4byte	0x85
 1066 0121 20000000 		.4byte	.LLST1
 1067 0125 0A       		.uleb128 0xa
 1068 0126 B9010000 		.4byte	.LASF23
 1069 012a 01       		.byte	0x1
 1070 012b 62       		.byte	0x62
 1071 012c 85000000 		.4byte	0x85
 1072 0130 40000000 		.4byte	.LLST2
 1073 0134 0B       		.uleb128 0xb
 1074 0135 37000000 		.4byte	.LASF24
 1075 0139 01       		.byte	0x1
 1076 013a 63       		.byte	0x63
 1077 013b 9B000000 		.4byte	0x9b
 1078 013f 0010     		.2byte	0x1000
 1079 0141 0C       		.uleb128 0xc
 1080 0142 0A000000 		.4byte	.LVL0
 1081 0146 98050000 		.4byte	0x598
 1082 014a 59010000 		.4byte	0x159
 1083 014e 0D       		.uleb128 0xd
 1084 014f 01       		.byte	0x1
 1085 0150 51       		.byte	0x51
 1086 0151 01       		.byte	0x1
 1087 0152 33       		.byte	0x33
 1088 0153 0D       		.uleb128 0xd
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 35


 1089 0154 01       		.byte	0x1
 1090 0155 50       		.byte	0x50
 1091 0156 01       		.byte	0x1
 1092 0157 3E       		.byte	0x3e
 1093 0158 00       		.byte	0
 1094 0159 0E       		.uleb128 0xe
 1095 015a 12000000 		.4byte	.LVL1
 1096 015e B1050000 		.4byte	0x5b1
 1097 0162 0D       		.uleb128 0xd
 1098 0163 01       		.byte	0x1
 1099 0164 50       		.byte	0x50
 1100 0165 01       		.byte	0x1
 1101 0166 3E       		.byte	0x3e
 1102 0167 00       		.byte	0
 1103 0168 00       		.byte	0
 1104 0169 0F       		.uleb128 0xf
 1105 016a 01       		.byte	0x1
 1106 016b 9D000000 		.4byte	.LASF26
 1107 016f 01       		.byte	0x1
 1108 0170 1501     		.2byte	0x115
 1109 0172 01       		.byte	0x1
 1110 0173 00000000 		.4byte	.LFB2
 1111 0177 1C000000 		.4byte	.LFE2
 1112 017b 6A000000 		.4byte	.LLST3
 1113 017f 01       		.byte	0x1
 1114 0180 94010000 		.4byte	0x194
 1115 0184 0E       		.uleb128 0xe
 1116 0185 14000000 		.4byte	.LVL7
 1117 0189 CE050000 		.4byte	0x5ce
 1118 018d 0D       		.uleb128 0xd
 1119 018e 01       		.byte	0x1
 1120 018f 50       		.byte	0x50
 1121 0190 01       		.byte	0x1
 1122 0191 3A       		.byte	0x3a
 1123 0192 00       		.byte	0
 1124 0193 00       		.byte	0
 1125 0194 09       		.uleb128 0x9
 1126 0195 01       		.byte	0x1
 1127 0196 72000000 		.4byte	.LASF27
 1128 019a 01       		.byte	0x1
 1129 019b 40       		.byte	0x40
 1130 019c 01       		.byte	0x1
 1131 019d 00000000 		.4byte	.LFB0
 1132 01a1 1C000000 		.4byte	.LFE0
 1133 01a5 8A000000 		.4byte	.LLST4
 1134 01a9 01       		.byte	0x1
 1135 01aa C1010000 		.4byte	0x1c1
 1136 01ae 10       		.uleb128 0x10
 1137 01af 0E000000 		.4byte	.LVL8
 1138 01b3 FC000000 		.4byte	0xfc
 1139 01b7 10       		.uleb128 0x10
 1140 01b8 16000000 		.4byte	.LVL9
 1141 01bc 69010000 		.4byte	0x169
 1142 01c0 00       		.byte	0
 1143 01c1 11       		.uleb128 0x11
 1144 01c2 01       		.byte	0x1
 1145 01c3 F8020000 		.4byte	.LASF28
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 36


 1146 01c7 01       		.byte	0x1
 1147 01c8 2C01     		.2byte	0x12c
 1148 01ca 01       		.byte	0x1
 1149 01cb 00000000 		.4byte	.LFB3
 1150 01cf 10000000 		.4byte	.LFE3
 1151 01d3 02       		.byte	0x2
 1152 01d4 7D       		.byte	0x7d
 1153 01d5 00       		.sleb128 0
 1154 01d6 01       		.byte	0x1
 1155 01d7 11       		.uleb128 0x11
 1156 01d8 01       		.byte	0x1
 1157 01d9 3E000000 		.4byte	.LASF29
 1158 01dd 01       		.byte	0x1
 1159 01de 4601     		.2byte	0x146
 1160 01e0 01       		.byte	0x1
 1161 01e1 00000000 		.4byte	.LFB4
 1162 01e5 14000000 		.4byte	.LFE4
 1163 01e9 02       		.byte	0x2
 1164 01ea 7D       		.byte	0x7d
 1165 01eb 00       		.sleb128 0
 1166 01ec 01       		.byte	0x1
 1167 01ed 11       		.uleb128 0x11
 1168 01ee 01       		.byte	0x1
 1169 01ef AB020000 		.4byte	.LASF30
 1170 01f3 01       		.byte	0x1
 1171 01f4 5F01     		.2byte	0x15f
 1172 01f6 01       		.byte	0x1
 1173 01f7 00000000 		.4byte	.LFB5
 1174 01fb 14000000 		.4byte	.LFE5
 1175 01ff 02       		.byte	0x2
 1176 0200 7D       		.byte	0x7d
 1177 0201 00       		.sleb128 0
 1178 0202 01       		.byte	0x1
 1179 0203 12       		.uleb128 0x12
 1180 0204 01       		.byte	0x1
 1181 0205 8D020000 		.4byte	.LASF32
 1182 0209 01       		.byte	0x1
 1183 020a 8101     		.2byte	0x181
 1184 020c 01       		.byte	0x1
 1185 020d 85000000 		.4byte	0x85
 1186 0211 00000000 		.4byte	.LFB6
 1187 0215 2C000000 		.4byte	.LFE6
 1188 0219 AA000000 		.4byte	.LLST5
 1189 021d 01       		.byte	0x1
 1190 021e 43020000 		.4byte	0x243
 1191 0222 13       		.uleb128 0x13
 1192 0223 6F010000 		.4byte	.LASF34
 1193 0227 01       		.byte	0x1
 1194 0228 8101     		.2byte	0x181
 1195 022a 85000000 		.4byte	0x85
 1196 022e CA000000 		.4byte	.LLST6
 1197 0232 14       		.uleb128 0x14
 1198 0233 1A040000 		.4byte	.LASF31
 1199 0237 01       		.byte	0x1
 1200 0238 8301     		.2byte	0x183
 1201 023a 85000000 		.4byte	0x85
 1202 023e F6000000 		.4byte	.LLST7
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 37


 1203 0242 00       		.byte	0
 1204 0243 12       		.uleb128 0x12
 1205 0244 01       		.byte	0x1
 1206 0245 B2000000 		.4byte	.LASF33
 1207 0249 01       		.byte	0x1
 1208 024a B701     		.2byte	0x1b7
 1209 024c 01       		.byte	0x1
 1210 024d 90000000 		.4byte	0x90
 1211 0251 00000000 		.4byte	.LFB7
 1212 0255 20000000 		.4byte	.LFE7
 1213 0259 20010000 		.4byte	.LLST8
 1214 025d 01       		.byte	0x1
 1215 025e 92020000 		.4byte	0x292
 1216 0262 13       		.uleb128 0x13
 1217 0263 BA030000 		.4byte	.LASF35
 1218 0267 01       		.byte	0x1
 1219 0268 B701     		.2byte	0x1b7
 1220 026a 85000000 		.4byte	0x85
 1221 026e 40010000 		.4byte	.LLST9
 1222 0272 14       		.uleb128 0x14
 1223 0273 5A040000 		.4byte	.LASF36
 1224 0277 01       		.byte	0x1
 1225 0278 B901     		.2byte	0x1b9
 1226 027a 85000000 		.4byte	0x85
 1227 027e 7A010000 		.4byte	.LLST10
 1228 0282 0E       		.uleb128 0xe
 1229 0283 18000000 		.4byte	.LVL22
 1230 0287 E2050000 		.4byte	0x5e2
 1231 028b 0D       		.uleb128 0xd
 1232 028c 01       		.byte	0x1
 1233 028d 50       		.byte	0x50
 1234 028e 01       		.byte	0x1
 1235 028f 30       		.byte	0x30
 1236 0290 00       		.byte	0
 1237 0291 00       		.byte	0
 1238 0292 15       		.uleb128 0x15
 1239 0293 01       		.byte	0x1
 1240 0294 9A030000 		.4byte	.LASF37
 1241 0298 01       		.byte	0x1
 1242 0299 E401     		.2byte	0x1e4
 1243 029b 01       		.byte	0x1
 1244 029c 00000000 		.4byte	.LFB8
 1245 02a0 10000000 		.4byte	.LFE8
 1246 02a4 02       		.byte	0x2
 1247 02a5 7D       		.byte	0x7d
 1248 02a6 00       		.sleb128 0
 1249 02a7 01       		.byte	0x1
 1250 02a8 BD020000 		.4byte	0x2bd
 1251 02ac 13       		.uleb128 0x13
 1252 02ad 4C010000 		.4byte	.LASF38
 1253 02b1 01       		.byte	0x1
 1254 02b2 E401     		.2byte	0x1e4
 1255 02b4 85000000 		.4byte	0x85
 1256 02b8 93010000 		.4byte	.LLST11
 1257 02bc 00       		.byte	0
 1258 02bd 15       		.uleb128 0x15
 1259 02be 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 38


 1260 02bf D1030000 		.4byte	.LASF39
 1261 02c3 01       		.byte	0x1
 1262 02c4 1002     		.2byte	0x210
 1263 02c6 01       		.byte	0x1
 1264 02c7 00000000 		.4byte	.LFB9
 1265 02cb 1C000000 		.4byte	.LFE9
 1266 02cf 02       		.byte	0x2
 1267 02d0 7D       		.byte	0x7d
 1268 02d1 00       		.sleb128 0
 1269 02d2 01       		.byte	0x1
 1270 02d3 E8020000 		.4byte	0x2e8
 1271 02d7 13       		.uleb128 0x13
 1272 02d8 84020000 		.4byte	.LASF40
 1273 02dc 01       		.byte	0x1
 1274 02dd 1002     		.2byte	0x210
 1275 02df 85000000 		.4byte	0x85
 1276 02e3 B4010000 		.4byte	.LLST12
 1277 02e7 00       		.byte	0
 1278 02e8 15       		.uleb128 0x15
 1279 02e9 01       		.byte	0x1
 1280 02ea E6000000 		.4byte	.LASF41
 1281 02ee 01       		.byte	0x1
 1282 02ef 2502     		.2byte	0x225
 1283 02f1 01       		.byte	0x1
 1284 02f2 00000000 		.4byte	.LFB10
 1285 02f6 18000000 		.4byte	.LFE10
 1286 02fa 02       		.byte	0x2
 1287 02fb 7D       		.byte	0x7d
 1288 02fc 00       		.sleb128 0
 1289 02fd 01       		.byte	0x1
 1290 02fe 13030000 		.4byte	0x313
 1291 0302 13       		.uleb128 0x13
 1292 0303 0B030000 		.4byte	.LASF42
 1293 0307 01       		.byte	0x1
 1294 0308 2502     		.2byte	0x225
 1295 030a 85000000 		.4byte	0x85
 1296 030e D5010000 		.4byte	.LLST13
 1297 0312 00       		.byte	0
 1298 0313 15       		.uleb128 0x15
 1299 0314 01       		.byte	0x1
 1300 0315 3F040000 		.4byte	.LASF43
 1301 0319 01       		.byte	0x1
 1302 031a 3D02     		.2byte	0x23d
 1303 031c 01       		.byte	0x1
 1304 031d 00000000 		.4byte	.LFB11
 1305 0321 10000000 		.4byte	.LFE11
 1306 0325 02       		.byte	0x2
 1307 0326 7D       		.byte	0x7d
 1308 0327 00       		.sleb128 0
 1309 0328 01       		.byte	0x1
 1310 0329 3E030000 		.4byte	0x33e
 1311 032d 13       		.uleb128 0x13
 1312 032e 4C010000 		.4byte	.LASF38
 1313 0332 01       		.byte	0x1
 1314 0333 3D02     		.2byte	0x23d
 1315 0335 85000000 		.4byte	0x85
 1316 0339 F6010000 		.4byte	.LLST14
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 39


 1317 033d 00       		.byte	0
 1318 033e 15       		.uleb128 0x15
 1319 033f 01       		.byte	0x1
 1320 0340 59000000 		.4byte	.LASF44
 1321 0344 01       		.byte	0x1
 1322 0345 5402     		.2byte	0x254
 1323 0347 01       		.byte	0x1
 1324 0348 00000000 		.4byte	.LFB12
 1325 034c 10000000 		.4byte	.LFE12
 1326 0350 02       		.byte	0x2
 1327 0351 7D       		.byte	0x7d
 1328 0352 00       		.sleb128 0
 1329 0353 01       		.byte	0x1
 1330 0354 69030000 		.4byte	0x369
 1331 0358 13       		.uleb128 0x13
 1332 0359 4C010000 		.4byte	.LASF38
 1333 035d 01       		.byte	0x1
 1334 035e 5402     		.2byte	0x254
 1335 0360 85000000 		.4byte	0x85
 1336 0364 17020000 		.4byte	.LLST15
 1337 0368 00       		.byte	0
 1338 0369 0F       		.uleb128 0xf
 1339 036a 01       		.byte	0x1
 1340 036b 21040000 		.4byte	.LASF45
 1341 036f 01       		.byte	0x1
 1342 0370 7002     		.2byte	0x270
 1343 0372 01       		.byte	0x1
 1344 0373 00000000 		.4byte	.LFB13
 1345 0377 1C000000 		.4byte	.LFE13
 1346 037b 38020000 		.4byte	.LLST16
 1347 037f 01       		.byte	0x1
 1348 0380 B4030000 		.4byte	0x3b4
 1349 0384 13       		.uleb128 0x13
 1350 0385 BA030000 		.4byte	.LASF35
 1351 0389 01       		.byte	0x1
 1352 038a 7002     		.2byte	0x270
 1353 038c 85000000 		.4byte	0x85
 1354 0390 58020000 		.4byte	.LLST17
 1355 0394 13       		.uleb128 0x13
 1356 0395 EB030000 		.4byte	.LASF46
 1357 0399 01       		.byte	0x1
 1358 039a 7002     		.2byte	0x270
 1359 039c 90000000 		.4byte	0x90
 1360 03a0 84020000 		.4byte	.LLST18
 1361 03a4 0E       		.uleb128 0xe
 1362 03a5 10000000 		.4byte	.LVL35
 1363 03a9 E2050000 		.4byte	0x5e2
 1364 03ad 0D       		.uleb128 0xd
 1365 03ae 01       		.byte	0x1
 1366 03af 50       		.byte	0x50
 1367 03b0 01       		.byte	0x1
 1368 03b1 30       		.byte	0x30
 1369 03b2 00       		.byte	0
 1370 03b3 00       		.byte	0
 1371 03b4 0F       		.uleb128 0xf
 1372 03b5 01       		.byte	0x1
 1373 03b6 E2020000 		.4byte	.LASF47
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 40


 1374 03ba 01       		.byte	0x1
 1375 03bb 9202     		.2byte	0x292
 1376 03bd 01       		.byte	0x1
 1377 03be 00000000 		.4byte	.LFB14
 1378 03c2 1C000000 		.4byte	.LFE14
 1379 03c6 A5020000 		.4byte	.LLST19
 1380 03ca 01       		.byte	0x1
 1381 03cb FF030000 		.4byte	0x3ff
 1382 03cf 13       		.uleb128 0x13
 1383 03d0 BA030000 		.4byte	.LASF35
 1384 03d4 01       		.byte	0x1
 1385 03d5 9202     		.2byte	0x292
 1386 03d7 85000000 		.4byte	0x85
 1387 03db C5020000 		.4byte	.LLST20
 1388 03df 13       		.uleb128 0x13
 1389 03e0 2F000000 		.4byte	.LASF48
 1390 03e4 01       		.byte	0x1
 1391 03e5 9202     		.2byte	0x292
 1392 03e7 9B000000 		.4byte	0x9b
 1393 03eb F1020000 		.4byte	.LLST21
 1394 03ef 0E       		.uleb128 0xe
 1395 03f0 10000000 		.4byte	.LVL39
 1396 03f4 E2050000 		.4byte	0x5e2
 1397 03f8 0D       		.uleb128 0xd
 1398 03f9 01       		.byte	0x1
 1399 03fa 50       		.byte	0x50
 1400 03fb 01       		.byte	0x1
 1401 03fc 30       		.byte	0x30
 1402 03fd 00       		.byte	0
 1403 03fe 00       		.byte	0
 1404 03ff 16       		.uleb128 0x16
 1405 0400 01       		.byte	0x1
 1406 0401 51010000 		.4byte	.LASF49
 1407 0405 01       		.byte	0x1
 1408 0406 B302     		.2byte	0x2b3
 1409 0408 01       		.byte	0x1
 1410 0409 90000000 		.4byte	0x90
 1411 040d 00000000 		.4byte	.LFB15
 1412 0411 54000000 		.4byte	.LFE15
 1413 0415 1E030000 		.4byte	.LLST22
 1414 0419 01       		.byte	0x1
 1415 041a 5E040000 		.4byte	0x45e
 1416 041e 13       		.uleb128 0x13
 1417 041f BA030000 		.4byte	.LASF35
 1418 0423 01       		.byte	0x1
 1419 0424 B302     		.2byte	0x2b3
 1420 0426 85000000 		.4byte	0x85
 1421 042a 3E030000 		.4byte	.LLST23
 1422 042e 13       		.uleb128 0x13
 1423 042f F2030000 		.4byte	.LASF50
 1424 0433 01       		.byte	0x1
 1425 0434 B302     		.2byte	0x2b3
 1426 0436 90000000 		.4byte	0x90
 1427 043a 80030000 		.4byte	.LLST24
 1428 043e 14       		.uleb128 0x14
 1429 043f 3D020000 		.4byte	.LASF51
 1430 0443 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 41


 1431 0444 B502     		.2byte	0x2b5
 1432 0446 90000000 		.4byte	0x90
 1433 044a DB030000 		.4byte	.LLST25
 1434 044e 0E       		.uleb128 0xe
 1435 044f 46000000 		.4byte	.LVL55
 1436 0453 E2050000 		.4byte	0x5e2
 1437 0457 0D       		.uleb128 0xd
 1438 0458 01       		.byte	0x1
 1439 0459 50       		.byte	0x50
 1440 045a 01       		.byte	0x1
 1441 045b 30       		.byte	0x30
 1442 045c 00       		.byte	0
 1443 045d 00       		.byte	0
 1444 045e 16       		.uleb128 0x16
 1445 045f 01       		.byte	0x1
 1446 0460 07010000 		.4byte	.LASF52
 1447 0464 01       		.byte	0x1
 1448 0465 E902     		.2byte	0x2e9
 1449 0467 01       		.byte	0x1
 1450 0468 9B000000 		.4byte	0x9b
 1451 046c 00000000 		.4byte	.LFB16
 1452 0470 48000000 		.4byte	.LFE16
 1453 0474 F6030000 		.4byte	.LLST26
 1454 0478 01       		.byte	0x1
 1455 0479 BD040000 		.4byte	0x4bd
 1456 047d 13       		.uleb128 0x13
 1457 047e BA030000 		.4byte	.LASF35
 1458 0482 01       		.byte	0x1
 1459 0483 E902     		.2byte	0x2e9
 1460 0485 85000000 		.4byte	0x85
 1461 0489 16040000 		.4byte	.LLST27
 1462 048d 13       		.uleb128 0x13
 1463 048e F2030000 		.4byte	.LASF50
 1464 0492 01       		.byte	0x1
 1465 0493 E902     		.2byte	0x2e9
 1466 0495 90000000 		.4byte	0x90
 1467 0499 42040000 		.4byte	.LLST28
 1468 049d 14       		.uleb128 0x14
 1469 049e 9A010000 		.4byte	.LASF53
 1470 04a2 01       		.byte	0x1
 1471 04a3 EB02     		.2byte	0x2eb
 1472 04a5 BF000000 		.4byte	0xbf
 1473 04a9 6E040000 		.4byte	.LLST29
 1474 04ad 0E       		.uleb128 0xe
 1475 04ae 10000000 		.4byte	.LVL58
 1476 04b2 E2050000 		.4byte	0x5e2
 1477 04b6 0D       		.uleb128 0xd
 1478 04b7 01       		.byte	0x1
 1479 04b8 50       		.byte	0x50
 1480 04b9 01       		.byte	0x1
 1481 04ba 30       		.byte	0x30
 1482 04bb 00       		.byte	0
 1483 04bc 00       		.byte	0
 1484 04bd 16       		.uleb128 0x16
 1485 04be 01       		.byte	0x1
 1486 04bf 7D030000 		.4byte	.LASF54
 1487 04c3 01       		.byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 42


 1488 04c4 1603     		.2byte	0x316
 1489 04c6 01       		.byte	0x1
 1490 04c7 A6000000 		.4byte	0xa6
 1491 04cb 00000000 		.4byte	.LFB17
 1492 04cf 48000000 		.4byte	.LFE17
 1493 04d3 9A040000 		.4byte	.LLST30
 1494 04d7 01       		.byte	0x1
 1495 04d8 18050000 		.4byte	0x518
 1496 04dc 13       		.uleb128 0x13
 1497 04dd BA030000 		.4byte	.LASF35
 1498 04e1 01       		.byte	0x1
 1499 04e2 1603     		.2byte	0x316
 1500 04e4 85000000 		.4byte	0x85
 1501 04e8 BA040000 		.4byte	.LLST31
 1502 04ec 13       		.uleb128 0x13
 1503 04ed F2030000 		.4byte	.LASF50
 1504 04f1 01       		.byte	0x1
 1505 04f2 1603     		.2byte	0x316
 1506 04f4 90000000 		.4byte	0x90
 1507 04f8 E6040000 		.4byte	.LLST32
 1508 04fc 17       		.uleb128 0x17
 1509 04fd B3010000 		.4byte	.LASF55
 1510 0501 01       		.byte	0x1
 1511 0502 1803     		.2byte	0x318
 1512 0504 A6000000 		.4byte	0xa6
 1513 0508 0E       		.uleb128 0xe
 1514 0509 10000000 		.4byte	.LVL67
 1515 050d E2050000 		.4byte	0x5e2
 1516 0511 0D       		.uleb128 0xd
 1517 0512 01       		.byte	0x1
 1518 0513 50       		.byte	0x50
 1519 0514 01       		.byte	0x1
 1520 0515 30       		.byte	0x30
 1521 0516 00       		.byte	0
 1522 0517 00       		.byte	0
 1523 0518 18       		.uleb128 0x18
 1524 0519 85000000 		.4byte	0x85
 1525 051d 28050000 		.4byte	0x528
 1526 0521 19       		.uleb128 0x19
 1527 0522 F5000000 		.4byte	0xf5
 1528 0526 00       		.byte	0
 1529 0527 00       		.byte	0
 1530 0528 1A       		.uleb128 0x1a
 1531 0529 20020000 		.4byte	.LASF56
 1532 052d 01       		.byte	0x1
 1533 052e 22       		.byte	0x22
 1534 052f 33050000 		.4byte	0x533
 1535 0533 1B       		.uleb128 0x1b
 1536 0534 18050000 		.4byte	0x518
 1537 0538 1C       		.uleb128 0x1c
 1538 0539 77010000 		.4byte	.LASF57
 1539 053d 01       		.byte	0x1
 1540 053e 19       		.byte	0x19
 1541 053f 6F000000 		.4byte	0x6f
 1542 0543 01       		.byte	0x1
 1543 0544 05       		.byte	0x5
 1544 0545 03       		.byte	0x3
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 43


 1545 0546 00000000 		.4byte	ADC_SAR_Seq_1_initVar
 1546 054a 18       		.uleb128 0x18
 1547 054b 90000000 		.4byte	0x90
 1548 054f 5A050000 		.4byte	0x55a
 1549 0553 19       		.uleb128 0x19
 1550 0554 F5000000 		.4byte	0xf5
 1551 0558 00       		.byte	0
 1552 0559 00       		.byte	0
 1553 055a 1C       		.uleb128 0x1c
 1554 055b 00000000 		.4byte	.LASF58
 1555 055f 01       		.byte	0x1
 1556 0560 1A       		.byte	0x1a
 1557 0561 6C050000 		.4byte	0x56c
 1558 0565 01       		.byte	0x1
 1559 0566 05       		.byte	0x5
 1560 0567 03       		.byte	0x3
 1561 0568 00000000 		.4byte	ADC_SAR_Seq_1_offset
 1562 056c 05       		.uleb128 0x5
 1563 056d 4A050000 		.4byte	0x54a
 1564 0571 18       		.uleb128 0x18
 1565 0572 9B000000 		.4byte	0x9b
 1566 0576 81050000 		.4byte	0x581
 1567 057a 19       		.uleb128 0x19
 1568 057b F5000000 		.4byte	0xf5
 1569 057f 00       		.byte	0
 1570 0580 00       		.byte	0
 1571 0581 1C       		.uleb128 0x1c
 1572 0582 FC030000 		.4byte	.LASF59
 1573 0586 01       		.byte	0x1
 1574 0587 1B       		.byte	0x1b
 1575 0588 93050000 		.4byte	0x593
 1576 058c 01       		.byte	0x1
 1577 058d 05       		.byte	0x5
 1578 058e 03       		.byte	0x3
 1579 058f 00000000 		.4byte	ADC_SAR_Seq_1_countsPer10Volt
 1580 0593 05       		.uleb128 0x5
 1581 0594 71050000 		.4byte	0x571
 1582 0598 1D       		.uleb128 0x1d
 1583 0599 01       		.byte	0x1
 1584 059a CB020000 		.4byte	.LASF60
 1585 059e 03       		.byte	0x3
 1586 059f 5B       		.byte	0x5b
 1587 05a0 01       		.byte	0x1
 1588 05a1 01       		.byte	0x1
 1589 05a2 B1050000 		.4byte	0x5b1
 1590 05a6 1E       		.uleb128 0x1e
 1591 05a7 6F000000 		.4byte	0x6f
 1592 05ab 1E       		.uleb128 0x1e
 1593 05ac 6F000000 		.4byte	0x6f
 1594 05b0 00       		.byte	0
 1595 05b1 1F       		.uleb128 0x1f
 1596 05b2 01       		.byte	0x1
 1597 05b3 11020000 		.4byte	.LASF65
 1598 05b7 03       		.byte	0x3
 1599 05b8 58       		.byte	0x58
 1600 05b9 01       		.byte	0x1
 1601 05ba E1000000 		.4byte	0xe1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 44


 1602 05be 01       		.byte	0x1
 1603 05bf CE050000 		.4byte	0x5ce
 1604 05c3 1E       		.uleb128 0x1e
 1605 05c4 6F000000 		.4byte	0x6f
 1606 05c8 1E       		.uleb128 0x1e
 1607 05c9 E1000000 		.4byte	0xe1
 1608 05cd 00       		.byte	0
 1609 05ce 1D       		.uleb128 0x1d
 1610 05cf 01       		.byte	0x1
 1611 05d0 34010000 		.4byte	.LASF61
 1612 05d4 03       		.byte	0x3
 1613 05d5 6A       		.byte	0x6a
 1614 05d6 01       		.byte	0x1
 1615 05d7 01       		.byte	0x1
 1616 05d8 E2050000 		.4byte	0x5e2
 1617 05dc 1E       		.uleb128 0x1e
 1618 05dd 7A000000 		.4byte	0x7a
 1619 05e1 00       		.byte	0
 1620 05e2 20       		.uleb128 0x20
 1621 05e3 01       		.byte	0x1
 1622 05e4 5E030000 		.4byte	.LASF66
 1623 05e8 03       		.byte	0x3
 1624 05e9 72       		.byte	0x72
 1625 05ea 01       		.byte	0x1
 1626 05eb 01       		.byte	0x1
 1627 05ec 1E       		.uleb128 0x1e
 1628 05ed 6F000000 		.4byte	0x6f
 1629 05f1 00       		.byte	0
 1630 05f2 00       		.byte	0
 1631              		.section	.debug_abbrev,"",%progbits
 1632              	.Ldebug_abbrev0:
 1633 0000 01       		.uleb128 0x1
 1634 0001 11       		.uleb128 0x11
 1635 0002 01       		.byte	0x1
 1636 0003 25       		.uleb128 0x25
 1637 0004 0E       		.uleb128 0xe
 1638 0005 13       		.uleb128 0x13
 1639 0006 0B       		.uleb128 0xb
 1640 0007 03       		.uleb128 0x3
 1641 0008 0E       		.uleb128 0xe
 1642 0009 1B       		.uleb128 0x1b
 1643 000a 0E       		.uleb128 0xe
 1644 000b 55       		.uleb128 0x55
 1645 000c 06       		.uleb128 0x6
 1646 000d 11       		.uleb128 0x11
 1647 000e 01       		.uleb128 0x1
 1648 000f 52       		.uleb128 0x52
 1649 0010 01       		.uleb128 0x1
 1650 0011 10       		.uleb128 0x10
 1651 0012 06       		.uleb128 0x6
 1652 0013 00       		.byte	0
 1653 0014 00       		.byte	0
 1654 0015 02       		.uleb128 0x2
 1655 0016 24       		.uleb128 0x24
 1656 0017 00       		.byte	0
 1657 0018 0B       		.uleb128 0xb
 1658 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 45


 1659 001a 3E       		.uleb128 0x3e
 1660 001b 0B       		.uleb128 0xb
 1661 001c 03       		.uleb128 0x3
 1662 001d 0E       		.uleb128 0xe
 1663 001e 00       		.byte	0
 1664 001f 00       		.byte	0
 1665 0020 03       		.uleb128 0x3
 1666 0021 24       		.uleb128 0x24
 1667 0022 00       		.byte	0
 1668 0023 0B       		.uleb128 0xb
 1669 0024 0B       		.uleb128 0xb
 1670 0025 3E       		.uleb128 0x3e
 1671 0026 0B       		.uleb128 0xb
 1672 0027 03       		.uleb128 0x3
 1673 0028 08       		.uleb128 0x8
 1674 0029 00       		.byte	0
 1675 002a 00       		.byte	0
 1676 002b 04       		.uleb128 0x4
 1677 002c 16       		.uleb128 0x16
 1678 002d 00       		.byte	0
 1679 002e 03       		.uleb128 0x3
 1680 002f 0E       		.uleb128 0xe
 1681 0030 3A       		.uleb128 0x3a
 1682 0031 0B       		.uleb128 0xb
 1683 0032 3B       		.uleb128 0x3b
 1684 0033 0B       		.uleb128 0xb
 1685 0034 49       		.uleb128 0x49
 1686 0035 13       		.uleb128 0x13
 1687 0036 00       		.byte	0
 1688 0037 00       		.byte	0
 1689 0038 05       		.uleb128 0x5
 1690 0039 35       		.uleb128 0x35
 1691 003a 00       		.byte	0
 1692 003b 49       		.uleb128 0x49
 1693 003c 13       		.uleb128 0x13
 1694 003d 00       		.byte	0
 1695 003e 00       		.byte	0
 1696 003f 06       		.uleb128 0x6
 1697 0040 16       		.uleb128 0x16
 1698 0041 00       		.byte	0
 1699 0042 03       		.uleb128 0x3
 1700 0043 0E       		.uleb128 0xe
 1701 0044 3A       		.uleb128 0x3a
 1702 0045 0B       		.uleb128 0xb
 1703 0046 3B       		.uleb128 0x3b
 1704 0047 05       		.uleb128 0x5
 1705 0048 49       		.uleb128 0x49
 1706 0049 13       		.uleb128 0x13
 1707 004a 00       		.byte	0
 1708 004b 00       		.byte	0
 1709 004c 07       		.uleb128 0x7
 1710 004d 0F       		.uleb128 0xf
 1711 004e 00       		.byte	0
 1712 004f 0B       		.uleb128 0xb
 1713 0050 0B       		.uleb128 0xb
 1714 0051 49       		.uleb128 0x49
 1715 0052 13       		.uleb128 0x13
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 46


 1716 0053 00       		.byte	0
 1717 0054 00       		.byte	0
 1718 0055 08       		.uleb128 0x8
 1719 0056 15       		.uleb128 0x15
 1720 0057 00       		.byte	0
 1721 0058 27       		.uleb128 0x27
 1722 0059 0C       		.uleb128 0xc
 1723 005a 00       		.byte	0
 1724 005b 00       		.byte	0
 1725 005c 09       		.uleb128 0x9
 1726 005d 2E       		.uleb128 0x2e
 1727 005e 01       		.byte	0x1
 1728 005f 3F       		.uleb128 0x3f
 1729 0060 0C       		.uleb128 0xc
 1730 0061 03       		.uleb128 0x3
 1731 0062 0E       		.uleb128 0xe
 1732 0063 3A       		.uleb128 0x3a
 1733 0064 0B       		.uleb128 0xb
 1734 0065 3B       		.uleb128 0x3b
 1735 0066 0B       		.uleb128 0xb
 1736 0067 27       		.uleb128 0x27
 1737 0068 0C       		.uleb128 0xc
 1738 0069 11       		.uleb128 0x11
 1739 006a 01       		.uleb128 0x1
 1740 006b 12       		.uleb128 0x12
 1741 006c 01       		.uleb128 0x1
 1742 006d 40       		.uleb128 0x40
 1743 006e 06       		.uleb128 0x6
 1744 006f 9742     		.uleb128 0x2117
 1745 0071 0C       		.uleb128 0xc
 1746 0072 01       		.uleb128 0x1
 1747 0073 13       		.uleb128 0x13
 1748 0074 00       		.byte	0
 1749 0075 00       		.byte	0
 1750 0076 0A       		.uleb128 0xa
 1751 0077 34       		.uleb128 0x34
 1752 0078 00       		.byte	0
 1753 0079 03       		.uleb128 0x3
 1754 007a 0E       		.uleb128 0xe
 1755 007b 3A       		.uleb128 0x3a
 1756 007c 0B       		.uleb128 0xb
 1757 007d 3B       		.uleb128 0x3b
 1758 007e 0B       		.uleb128 0xb
 1759 007f 49       		.uleb128 0x49
 1760 0080 13       		.uleb128 0x13
 1761 0081 02       		.uleb128 0x2
 1762 0082 06       		.uleb128 0x6
 1763 0083 00       		.byte	0
 1764 0084 00       		.byte	0
 1765 0085 0B       		.uleb128 0xb
 1766 0086 34       		.uleb128 0x34
 1767 0087 00       		.byte	0
 1768 0088 03       		.uleb128 0x3
 1769 0089 0E       		.uleb128 0xe
 1770 008a 3A       		.uleb128 0x3a
 1771 008b 0B       		.uleb128 0xb
 1772 008c 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 47


 1773 008d 0B       		.uleb128 0xb
 1774 008e 49       		.uleb128 0x49
 1775 008f 13       		.uleb128 0x13
 1776 0090 1C       		.uleb128 0x1c
 1777 0091 05       		.uleb128 0x5
 1778 0092 00       		.byte	0
 1779 0093 00       		.byte	0
 1780 0094 0C       		.uleb128 0xc
 1781 0095 898201   		.uleb128 0x4109
 1782 0098 01       		.byte	0x1
 1783 0099 11       		.uleb128 0x11
 1784 009a 01       		.uleb128 0x1
 1785 009b 31       		.uleb128 0x31
 1786 009c 13       		.uleb128 0x13
 1787 009d 01       		.uleb128 0x1
 1788 009e 13       		.uleb128 0x13
 1789 009f 00       		.byte	0
 1790 00a0 00       		.byte	0
 1791 00a1 0D       		.uleb128 0xd
 1792 00a2 8A8201   		.uleb128 0x410a
 1793 00a5 00       		.byte	0
 1794 00a6 02       		.uleb128 0x2
 1795 00a7 0A       		.uleb128 0xa
 1796 00a8 9142     		.uleb128 0x2111
 1797 00aa 0A       		.uleb128 0xa
 1798 00ab 00       		.byte	0
 1799 00ac 00       		.byte	0
 1800 00ad 0E       		.uleb128 0xe
 1801 00ae 898201   		.uleb128 0x4109
 1802 00b1 01       		.byte	0x1
 1803 00b2 11       		.uleb128 0x11
 1804 00b3 01       		.uleb128 0x1
 1805 00b4 31       		.uleb128 0x31
 1806 00b5 13       		.uleb128 0x13
 1807 00b6 00       		.byte	0
 1808 00b7 00       		.byte	0
 1809 00b8 0F       		.uleb128 0xf
 1810 00b9 2E       		.uleb128 0x2e
 1811 00ba 01       		.byte	0x1
 1812 00bb 3F       		.uleb128 0x3f
 1813 00bc 0C       		.uleb128 0xc
 1814 00bd 03       		.uleb128 0x3
 1815 00be 0E       		.uleb128 0xe
 1816 00bf 3A       		.uleb128 0x3a
 1817 00c0 0B       		.uleb128 0xb
 1818 00c1 3B       		.uleb128 0x3b
 1819 00c2 05       		.uleb128 0x5
 1820 00c3 27       		.uleb128 0x27
 1821 00c4 0C       		.uleb128 0xc
 1822 00c5 11       		.uleb128 0x11
 1823 00c6 01       		.uleb128 0x1
 1824 00c7 12       		.uleb128 0x12
 1825 00c8 01       		.uleb128 0x1
 1826 00c9 40       		.uleb128 0x40
 1827 00ca 06       		.uleb128 0x6
 1828 00cb 9742     		.uleb128 0x2117
 1829 00cd 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 48


 1830 00ce 01       		.uleb128 0x1
 1831 00cf 13       		.uleb128 0x13
 1832 00d0 00       		.byte	0
 1833 00d1 00       		.byte	0
 1834 00d2 10       		.uleb128 0x10
 1835 00d3 898201   		.uleb128 0x4109
 1836 00d6 00       		.byte	0
 1837 00d7 11       		.uleb128 0x11
 1838 00d8 01       		.uleb128 0x1
 1839 00d9 31       		.uleb128 0x31
 1840 00da 13       		.uleb128 0x13
 1841 00db 00       		.byte	0
 1842 00dc 00       		.byte	0
 1843 00dd 11       		.uleb128 0x11
 1844 00de 2E       		.uleb128 0x2e
 1845 00df 00       		.byte	0
 1846 00e0 3F       		.uleb128 0x3f
 1847 00e1 0C       		.uleb128 0xc
 1848 00e2 03       		.uleb128 0x3
 1849 00e3 0E       		.uleb128 0xe
 1850 00e4 3A       		.uleb128 0x3a
 1851 00e5 0B       		.uleb128 0xb
 1852 00e6 3B       		.uleb128 0x3b
 1853 00e7 05       		.uleb128 0x5
 1854 00e8 27       		.uleb128 0x27
 1855 00e9 0C       		.uleb128 0xc
 1856 00ea 11       		.uleb128 0x11
 1857 00eb 01       		.uleb128 0x1
 1858 00ec 12       		.uleb128 0x12
 1859 00ed 01       		.uleb128 0x1
 1860 00ee 40       		.uleb128 0x40
 1861 00ef 0A       		.uleb128 0xa
 1862 00f0 9742     		.uleb128 0x2117
 1863 00f2 0C       		.uleb128 0xc
 1864 00f3 00       		.byte	0
 1865 00f4 00       		.byte	0
 1866 00f5 12       		.uleb128 0x12
 1867 00f6 2E       		.uleb128 0x2e
 1868 00f7 01       		.byte	0x1
 1869 00f8 3F       		.uleb128 0x3f
 1870 00f9 0C       		.uleb128 0xc
 1871 00fa 03       		.uleb128 0x3
 1872 00fb 0E       		.uleb128 0xe
 1873 00fc 3A       		.uleb128 0x3a
 1874 00fd 0B       		.uleb128 0xb
 1875 00fe 3B       		.uleb128 0x3b
 1876 00ff 05       		.uleb128 0x5
 1877 0100 27       		.uleb128 0x27
 1878 0101 0C       		.uleb128 0xc
 1879 0102 49       		.uleb128 0x49
 1880 0103 13       		.uleb128 0x13
 1881 0104 11       		.uleb128 0x11
 1882 0105 01       		.uleb128 0x1
 1883 0106 12       		.uleb128 0x12
 1884 0107 01       		.uleb128 0x1
 1885 0108 40       		.uleb128 0x40
 1886 0109 06       		.uleb128 0x6
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 49


 1887 010a 9742     		.uleb128 0x2117
 1888 010c 0C       		.uleb128 0xc
 1889 010d 01       		.uleb128 0x1
 1890 010e 13       		.uleb128 0x13
 1891 010f 00       		.byte	0
 1892 0110 00       		.byte	0
 1893 0111 13       		.uleb128 0x13
 1894 0112 05       		.uleb128 0x5
 1895 0113 00       		.byte	0
 1896 0114 03       		.uleb128 0x3
 1897 0115 0E       		.uleb128 0xe
 1898 0116 3A       		.uleb128 0x3a
 1899 0117 0B       		.uleb128 0xb
 1900 0118 3B       		.uleb128 0x3b
 1901 0119 05       		.uleb128 0x5
 1902 011a 49       		.uleb128 0x49
 1903 011b 13       		.uleb128 0x13
 1904 011c 02       		.uleb128 0x2
 1905 011d 06       		.uleb128 0x6
 1906 011e 00       		.byte	0
 1907 011f 00       		.byte	0
 1908 0120 14       		.uleb128 0x14
 1909 0121 34       		.uleb128 0x34
 1910 0122 00       		.byte	0
 1911 0123 03       		.uleb128 0x3
 1912 0124 0E       		.uleb128 0xe
 1913 0125 3A       		.uleb128 0x3a
 1914 0126 0B       		.uleb128 0xb
 1915 0127 3B       		.uleb128 0x3b
 1916 0128 05       		.uleb128 0x5
 1917 0129 49       		.uleb128 0x49
 1918 012a 13       		.uleb128 0x13
 1919 012b 02       		.uleb128 0x2
 1920 012c 06       		.uleb128 0x6
 1921 012d 00       		.byte	0
 1922 012e 00       		.byte	0
 1923 012f 15       		.uleb128 0x15
 1924 0130 2E       		.uleb128 0x2e
 1925 0131 01       		.byte	0x1
 1926 0132 3F       		.uleb128 0x3f
 1927 0133 0C       		.uleb128 0xc
 1928 0134 03       		.uleb128 0x3
 1929 0135 0E       		.uleb128 0xe
 1930 0136 3A       		.uleb128 0x3a
 1931 0137 0B       		.uleb128 0xb
 1932 0138 3B       		.uleb128 0x3b
 1933 0139 05       		.uleb128 0x5
 1934 013a 27       		.uleb128 0x27
 1935 013b 0C       		.uleb128 0xc
 1936 013c 11       		.uleb128 0x11
 1937 013d 01       		.uleb128 0x1
 1938 013e 12       		.uleb128 0x12
 1939 013f 01       		.uleb128 0x1
 1940 0140 40       		.uleb128 0x40
 1941 0141 0A       		.uleb128 0xa
 1942 0142 9742     		.uleb128 0x2117
 1943 0144 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 50


 1944 0145 01       		.uleb128 0x1
 1945 0146 13       		.uleb128 0x13
 1946 0147 00       		.byte	0
 1947 0148 00       		.byte	0
 1948 0149 16       		.uleb128 0x16
 1949 014a 2E       		.uleb128 0x2e
 1950 014b 01       		.byte	0x1
 1951 014c 3F       		.uleb128 0x3f
 1952 014d 0C       		.uleb128 0xc
 1953 014e 03       		.uleb128 0x3
 1954 014f 0E       		.uleb128 0xe
 1955 0150 3A       		.uleb128 0x3a
 1956 0151 0B       		.uleb128 0xb
 1957 0152 3B       		.uleb128 0x3b
 1958 0153 05       		.uleb128 0x5
 1959 0154 27       		.uleb128 0x27
 1960 0155 0C       		.uleb128 0xc
 1961 0156 49       		.uleb128 0x49
 1962 0157 13       		.uleb128 0x13
 1963 0158 11       		.uleb128 0x11
 1964 0159 01       		.uleb128 0x1
 1965 015a 12       		.uleb128 0x12
 1966 015b 01       		.uleb128 0x1
 1967 015c 40       		.uleb128 0x40
 1968 015d 06       		.uleb128 0x6
 1969 015e 9642     		.uleb128 0x2116
 1970 0160 0C       		.uleb128 0xc
 1971 0161 01       		.uleb128 0x1
 1972 0162 13       		.uleb128 0x13
 1973 0163 00       		.byte	0
 1974 0164 00       		.byte	0
 1975 0165 17       		.uleb128 0x17
 1976 0166 34       		.uleb128 0x34
 1977 0167 00       		.byte	0
 1978 0168 03       		.uleb128 0x3
 1979 0169 0E       		.uleb128 0xe
 1980 016a 3A       		.uleb128 0x3a
 1981 016b 0B       		.uleb128 0xb
 1982 016c 3B       		.uleb128 0x3b
 1983 016d 05       		.uleb128 0x5
 1984 016e 49       		.uleb128 0x49
 1985 016f 13       		.uleb128 0x13
 1986 0170 00       		.byte	0
 1987 0171 00       		.byte	0
 1988 0172 18       		.uleb128 0x18
 1989 0173 01       		.uleb128 0x1
 1990 0174 01       		.byte	0x1
 1991 0175 49       		.uleb128 0x49
 1992 0176 13       		.uleb128 0x13
 1993 0177 01       		.uleb128 0x1
 1994 0178 13       		.uleb128 0x13
 1995 0179 00       		.byte	0
 1996 017a 00       		.byte	0
 1997 017b 19       		.uleb128 0x19
 1998 017c 21       		.uleb128 0x21
 1999 017d 00       		.byte	0
 2000 017e 49       		.uleb128 0x49
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 51


 2001 017f 13       		.uleb128 0x13
 2002 0180 2F       		.uleb128 0x2f
 2003 0181 0B       		.uleb128 0xb
 2004 0182 00       		.byte	0
 2005 0183 00       		.byte	0
 2006 0184 1A       		.uleb128 0x1a
 2007 0185 34       		.uleb128 0x34
 2008 0186 00       		.byte	0
 2009 0187 03       		.uleb128 0x3
 2010 0188 0E       		.uleb128 0xe
 2011 0189 3A       		.uleb128 0x3a
 2012 018a 0B       		.uleb128 0xb
 2013 018b 3B       		.uleb128 0x3b
 2014 018c 0B       		.uleb128 0xb
 2015 018d 49       		.uleb128 0x49
 2016 018e 13       		.uleb128 0x13
 2017 018f 00       		.byte	0
 2018 0190 00       		.byte	0
 2019 0191 1B       		.uleb128 0x1b
 2020 0192 26       		.uleb128 0x26
 2021 0193 00       		.byte	0
 2022 0194 49       		.uleb128 0x49
 2023 0195 13       		.uleb128 0x13
 2024 0196 00       		.byte	0
 2025 0197 00       		.byte	0
 2026 0198 1C       		.uleb128 0x1c
 2027 0199 34       		.uleb128 0x34
 2028 019a 00       		.byte	0
 2029 019b 03       		.uleb128 0x3
 2030 019c 0E       		.uleb128 0xe
 2031 019d 3A       		.uleb128 0x3a
 2032 019e 0B       		.uleb128 0xb
 2033 019f 3B       		.uleb128 0x3b
 2034 01a0 0B       		.uleb128 0xb
 2035 01a1 49       		.uleb128 0x49
 2036 01a2 13       		.uleb128 0x13
 2037 01a3 3F       		.uleb128 0x3f
 2038 01a4 0C       		.uleb128 0xc
 2039 01a5 02       		.uleb128 0x2
 2040 01a6 0A       		.uleb128 0xa
 2041 01a7 00       		.byte	0
 2042 01a8 00       		.byte	0
 2043 01a9 1D       		.uleb128 0x1d
 2044 01aa 2E       		.uleb128 0x2e
 2045 01ab 01       		.byte	0x1
 2046 01ac 3F       		.uleb128 0x3f
 2047 01ad 0C       		.uleb128 0xc
 2048 01ae 03       		.uleb128 0x3
 2049 01af 0E       		.uleb128 0xe
 2050 01b0 3A       		.uleb128 0x3a
 2051 01b1 0B       		.uleb128 0xb
 2052 01b2 3B       		.uleb128 0x3b
 2053 01b3 0B       		.uleb128 0xb
 2054 01b4 27       		.uleb128 0x27
 2055 01b5 0C       		.uleb128 0xc
 2056 01b6 3C       		.uleb128 0x3c
 2057 01b7 0C       		.uleb128 0xc
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 52


 2058 01b8 01       		.uleb128 0x1
 2059 01b9 13       		.uleb128 0x13
 2060 01ba 00       		.byte	0
 2061 01bb 00       		.byte	0
 2062 01bc 1E       		.uleb128 0x1e
 2063 01bd 05       		.uleb128 0x5
 2064 01be 00       		.byte	0
 2065 01bf 49       		.uleb128 0x49
 2066 01c0 13       		.uleb128 0x13
 2067 01c1 00       		.byte	0
 2068 01c2 00       		.byte	0
 2069 01c3 1F       		.uleb128 0x1f
 2070 01c4 2E       		.uleb128 0x2e
 2071 01c5 01       		.byte	0x1
 2072 01c6 3F       		.uleb128 0x3f
 2073 01c7 0C       		.uleb128 0xc
 2074 01c8 03       		.uleb128 0x3
 2075 01c9 0E       		.uleb128 0xe
 2076 01ca 3A       		.uleb128 0x3a
 2077 01cb 0B       		.uleb128 0xb
 2078 01cc 3B       		.uleb128 0x3b
 2079 01cd 0B       		.uleb128 0xb
 2080 01ce 27       		.uleb128 0x27
 2081 01cf 0C       		.uleb128 0xc
 2082 01d0 49       		.uleb128 0x49
 2083 01d1 13       		.uleb128 0x13
 2084 01d2 3C       		.uleb128 0x3c
 2085 01d3 0C       		.uleb128 0xc
 2086 01d4 01       		.uleb128 0x1
 2087 01d5 13       		.uleb128 0x13
 2088 01d6 00       		.byte	0
 2089 01d7 00       		.byte	0
 2090 01d8 20       		.uleb128 0x20
 2091 01d9 2E       		.uleb128 0x2e
 2092 01da 01       		.byte	0x1
 2093 01db 3F       		.uleb128 0x3f
 2094 01dc 0C       		.uleb128 0xc
 2095 01dd 03       		.uleb128 0x3
 2096 01de 0E       		.uleb128 0xe
 2097 01df 3A       		.uleb128 0x3a
 2098 01e0 0B       		.uleb128 0xb
 2099 01e1 3B       		.uleb128 0x3b
 2100 01e2 0B       		.uleb128 0xb
 2101 01e3 27       		.uleb128 0x27
 2102 01e4 0C       		.uleb128 0xc
 2103 01e5 3C       		.uleb128 0x3c
 2104 01e6 0C       		.uleb128 0xc
 2105 01e7 00       		.byte	0
 2106 01e8 00       		.byte	0
 2107 01e9 00       		.byte	0
 2108              		.section	.debug_loc,"",%progbits
 2109              	.Ldebug_loc0:
 2110              	.LLST0:
 2111 0000 00000000 		.4byte	.LFB1
 2112 0004 02000000 		.4byte	.LCFI0
 2113 0008 0200     		.2byte	0x2
 2114 000a 7D       		.byte	0x7d
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 53


 2115 000b 00       		.sleb128 0
 2116 000c 02000000 		.4byte	.LCFI0
 2117 0010 C8000000 		.4byte	.LFE1
 2118 0014 0200     		.2byte	0x2
 2119 0016 7D       		.byte	0x7d
 2120 0017 08       		.sleb128 8
 2121 0018 00000000 		.4byte	0
 2122 001c 00000000 		.4byte	0
 2123              	.LLST1:
 2124 0020 62000000 		.4byte	.LVL4
 2125 0024 70000000 		.4byte	.LVL6
 2126 0028 0200     		.2byte	0x2
 2127 002a 30       		.byte	0x30
 2128 002b 9F       		.byte	0x9f
 2129 002c 70000000 		.4byte	.LVL6
 2130 0030 C8000000 		.4byte	.LFE1
 2131 0034 0200     		.2byte	0x2
 2132 0036 31       		.byte	0x31
 2133 0037 9F       		.byte	0x9f
 2134 0038 00000000 		.4byte	0
 2135 003c 00000000 		.4byte	0
 2136              	.LLST2:
 2137 0040 5E000000 		.4byte	.LVL2
 2138 0044 60000000 		.4byte	.LVL3
 2139 0048 0100     		.2byte	0x1
 2140 004a 50       		.byte	0x50
 2141 004b 60000000 		.4byte	.LVL3
 2142 004f 62000000 		.4byte	.LVL4
 2143 0053 0100     		.2byte	0x1
 2144 0055 52       		.byte	0x52
 2145 0056 62000000 		.4byte	.LVL4
 2146 005a C8000000 		.4byte	.LFE1
 2147 005e 0200     		.2byte	0x2
 2148 0060 30       		.byte	0x30
 2149 0061 9F       		.byte	0x9f
 2150 0062 00000000 		.4byte	0
 2151 0066 00000000 		.4byte	0
 2152              	.LLST3:
 2153 006a 00000000 		.4byte	.LFB2
 2154 006e 02000000 		.4byte	.LCFI1
 2155 0072 0200     		.2byte	0x2
 2156 0074 7D       		.byte	0x7d
 2157 0075 00       		.sleb128 0
 2158 0076 02000000 		.4byte	.LCFI1
 2159 007a 1C000000 		.4byte	.LFE2
 2160 007e 0200     		.2byte	0x2
 2161 0080 7D       		.byte	0x7d
 2162 0081 08       		.sleb128 8
 2163 0082 00000000 		.4byte	0
 2164 0086 00000000 		.4byte	0
 2165              	.LLST4:
 2166 008a 00000000 		.4byte	.LFB0
 2167 008e 02000000 		.4byte	.LCFI2
 2168 0092 0200     		.2byte	0x2
 2169 0094 7D       		.byte	0x7d
 2170 0095 00       		.sleb128 0
 2171 0096 02000000 		.4byte	.LCFI2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 54


 2172 009a 1C000000 		.4byte	.LFE0
 2173 009e 0200     		.2byte	0x2
 2174 00a0 7D       		.byte	0x7d
 2175 00a1 08       		.sleb128 8
 2176 00a2 00000000 		.4byte	0
 2177 00a6 00000000 		.4byte	0
 2178              	.LLST5:
 2179 00aa 00000000 		.4byte	.LFB6
 2180 00ae 04000000 		.4byte	.LCFI3
 2181 00b2 0200     		.2byte	0x2
 2182 00b4 7D       		.byte	0x7d
 2183 00b5 00       		.sleb128 0
 2184 00b6 04000000 		.4byte	.LCFI3
 2185 00ba 2C000000 		.4byte	.LFE6
 2186 00be 0200     		.2byte	0x2
 2187 00c0 7D       		.byte	0x7d
 2188 00c1 04       		.sleb128 4
 2189 00c2 00000000 		.4byte	0
 2190 00c6 00000000 		.4byte	0
 2191              	.LLST6:
 2192 00ca 00000000 		.4byte	.LVL10
 2193 00ce 06000000 		.4byte	.LVL11
 2194 00d2 0100     		.2byte	0x1
 2195 00d4 50       		.byte	0x50
 2196 00d5 06000000 		.4byte	.LVL11
 2197 00d9 12000000 		.4byte	.LVL12
 2198 00dd 0100     		.2byte	0x1
 2199 00df 51       		.byte	0x51
 2200 00e0 12000000 		.4byte	.LVL12
 2201 00e4 2C000000 		.4byte	.LFE6
 2202 00e8 0400     		.2byte	0x4
 2203 00ea F3       		.byte	0xf3
 2204 00eb 01       		.uleb128 0x1
 2205 00ec 50       		.byte	0x50
 2206 00ed 9F       		.byte	0x9f
 2207 00ee 00000000 		.4byte	0
 2208 00f2 00000000 		.4byte	0
 2209              	.LLST7:
 2210 00f6 00000000 		.4byte	.LVL10
 2211 00fa 14000000 		.4byte	.LVL13
 2212 00fe 0200     		.2byte	0x2
 2213 0100 30       		.byte	0x30
 2214 0101 9F       		.byte	0x9f
 2215 0102 14000000 		.4byte	.LVL13
 2216 0106 18000000 		.4byte	.LVL14
 2217 010a 0100     		.2byte	0x1
 2218 010c 50       		.byte	0x50
 2219 010d 1C000000 		.4byte	.LVL15
 2220 0111 26000000 		.4byte	.LVL16
 2221 0115 0100     		.2byte	0x1
 2222 0117 50       		.byte	0x50
 2223 0118 00000000 		.4byte	0
 2224 011c 00000000 		.4byte	0
 2225              	.LLST8:
 2226 0120 00000000 		.4byte	.LFB7
 2227 0124 02000000 		.4byte	.LCFI4
 2228 0128 0200     		.2byte	0x2
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 55


 2229 012a 7D       		.byte	0x7d
 2230 012b 00       		.sleb128 0
 2231 012c 02000000 		.4byte	.LCFI4
 2232 0130 20000000 		.4byte	.LFE7
 2233 0134 0200     		.2byte	0x2
 2234 0136 7D       		.byte	0x7d
 2235 0137 08       		.sleb128 8
 2236 0138 00000000 		.4byte	0
 2237 013c 00000000 		.4byte	0
 2238              	.LLST9:
 2239 0140 00000000 		.4byte	.LVL17
 2240 0144 0A000000 		.4byte	.LVL18
 2241 0148 0100     		.2byte	0x1
 2242 014a 50       		.byte	0x50
 2243 014b 0A000000 		.4byte	.LVL18
 2244 014f 12000000 		.4byte	.LVL20
 2245 0153 0400     		.2byte	0x4
 2246 0155 F3       		.byte	0xf3
 2247 0156 01       		.uleb128 0x1
 2248 0157 50       		.byte	0x50
 2249 0158 9F       		.byte	0x9f
 2250 0159 12000000 		.4byte	.LVL20
 2251 015d 14000000 		.4byte	.LVL21
 2252 0161 0100     		.2byte	0x1
 2253 0163 50       		.byte	0x50
 2254 0164 14000000 		.4byte	.LVL21
 2255 0168 20000000 		.4byte	.LFE7
 2256 016c 0400     		.2byte	0x4
 2257 016e F3       		.byte	0xf3
 2258 016f 01       		.uleb128 0x1
 2259 0170 50       		.byte	0x50
 2260 0171 9F       		.byte	0x9f
 2261 0172 00000000 		.4byte	0
 2262 0176 00000000 		.4byte	0
 2263              	.LLST10:
 2264 017a 0A000000 		.4byte	.LVL18
 2265 017e 0E000000 		.4byte	.LVL19
 2266 0182 0700     		.2byte	0x7
 2267 0184 70       		.byte	0x70
 2268 0185 00       		.sleb128 0
 2269 0186 0A       		.byte	0xa
 2270 0187 FFFF     		.2byte	0xffff
 2271 0189 1A       		.byte	0x1a
 2272 018a 9F       		.byte	0x9f
 2273 018b 00000000 		.4byte	0
 2274 018f 00000000 		.4byte	0
 2275              	.LLST11:
 2276 0193 00000000 		.4byte	.LVL23
 2277 0197 06000000 		.4byte	.LVL24
 2278 019b 0100     		.2byte	0x1
 2279 019d 50       		.byte	0x50
 2280 019e 06000000 		.4byte	.LVL24
 2281 01a2 10000000 		.4byte	.LFE8
 2282 01a6 0400     		.2byte	0x4
 2283 01a8 F3       		.byte	0xf3
 2284 01a9 01       		.uleb128 0x1
 2285 01aa 50       		.byte	0x50
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 56


 2286 01ab 9F       		.byte	0x9f
 2287 01ac 00000000 		.4byte	0
 2288 01b0 00000000 		.4byte	0
 2289              	.LLST12:
 2290 01b4 00000000 		.4byte	.LVL25
 2291 01b8 04000000 		.4byte	.LVL26
 2292 01bc 0100     		.2byte	0x1
 2293 01be 50       		.byte	0x50
 2294 01bf 04000000 		.4byte	.LVL26
 2295 01c3 1C000000 		.4byte	.LFE9
 2296 01c7 0400     		.2byte	0x4
 2297 01c9 F3       		.byte	0xf3
 2298 01ca 01       		.uleb128 0x1
 2299 01cb 50       		.byte	0x50
 2300 01cc 9F       		.byte	0x9f
 2301 01cd 00000000 		.4byte	0
 2302 01d1 00000000 		.4byte	0
 2303              	.LLST13:
 2304 01d5 00000000 		.4byte	.LVL27
 2305 01d9 04000000 		.4byte	.LVL28
 2306 01dd 0100     		.2byte	0x1
 2307 01df 50       		.byte	0x50
 2308 01e0 04000000 		.4byte	.LVL28
 2309 01e4 18000000 		.4byte	.LFE10
 2310 01e8 0400     		.2byte	0x4
 2311 01ea F3       		.byte	0xf3
 2312 01eb 01       		.uleb128 0x1
 2313 01ec 50       		.byte	0x50
 2314 01ed 9F       		.byte	0x9f
 2315 01ee 00000000 		.4byte	0
 2316 01f2 00000000 		.4byte	0
 2317              	.LLST14:
 2318 01f6 00000000 		.4byte	.LVL29
 2319 01fa 06000000 		.4byte	.LVL30
 2320 01fe 0100     		.2byte	0x1
 2321 0200 50       		.byte	0x50
 2322 0201 06000000 		.4byte	.LVL30
 2323 0205 10000000 		.4byte	.LFE11
 2324 0209 0400     		.2byte	0x4
 2325 020b F3       		.byte	0xf3
 2326 020c 01       		.uleb128 0x1
 2327 020d 50       		.byte	0x50
 2328 020e 9F       		.byte	0x9f
 2329 020f 00000000 		.4byte	0
 2330 0213 00000000 		.4byte	0
 2331              	.LLST15:
 2332 0217 00000000 		.4byte	.LVL31
 2333 021b 06000000 		.4byte	.LVL32
 2334 021f 0100     		.2byte	0x1
 2335 0221 50       		.byte	0x50
 2336 0222 06000000 		.4byte	.LVL32
 2337 0226 10000000 		.4byte	.LFE12
 2338 022a 0400     		.2byte	0x4
 2339 022c F3       		.byte	0xf3
 2340 022d 01       		.uleb128 0x1
 2341 022e 50       		.byte	0x50
 2342 022f 9F       		.byte	0x9f
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 57


 2343 0230 00000000 		.4byte	0
 2344 0234 00000000 		.4byte	0
 2345              	.LLST16:
 2346 0238 00000000 		.4byte	.LFB13
 2347 023c 02000000 		.4byte	.LCFI5
 2348 0240 0200     		.2byte	0x2
 2349 0242 7D       		.byte	0x7d
 2350 0243 00       		.sleb128 0
 2351 0244 02000000 		.4byte	.LCFI5
 2352 0248 1C000000 		.4byte	.LFE13
 2353 024c 0200     		.2byte	0x2
 2354 024e 7D       		.byte	0x7d
 2355 024f 10       		.sleb128 16
 2356 0250 00000000 		.4byte	0
 2357 0254 00000000 		.4byte	0
 2358              	.LLST17:
 2359 0258 00000000 		.4byte	.LVL33
 2360 025c 0C000000 		.4byte	.LVL34
 2361 0260 0100     		.2byte	0x1
 2362 0262 50       		.byte	0x50
 2363 0263 0C000000 		.4byte	.LVL34
 2364 0267 16000000 		.4byte	.LVL36
 2365 026b 0100     		.2byte	0x1
 2366 026d 54       		.byte	0x54
 2367 026e 16000000 		.4byte	.LVL36
 2368 0272 1C000000 		.4byte	.LFE13
 2369 0276 0400     		.2byte	0x4
 2370 0278 F3       		.byte	0xf3
 2371 0279 01       		.uleb128 0x1
 2372 027a 50       		.byte	0x50
 2373 027b 9F       		.byte	0x9f
 2374 027c 00000000 		.4byte	0
 2375 0280 00000000 		.4byte	0
 2376              	.LLST18:
 2377 0284 00000000 		.4byte	.LVL33
 2378 0288 0F000000 		.4byte	.LVL35-1
 2379 028c 0100     		.2byte	0x1
 2380 028e 51       		.byte	0x51
 2381 028f 0F000000 		.4byte	.LVL35-1
 2382 0293 1C000000 		.4byte	.LFE13
 2383 0297 0400     		.2byte	0x4
 2384 0299 F3       		.byte	0xf3
 2385 029a 01       		.uleb128 0x1
 2386 029b 51       		.byte	0x51
 2387 029c 9F       		.byte	0x9f
 2388 029d 00000000 		.4byte	0
 2389 02a1 00000000 		.4byte	0
 2390              	.LLST19:
 2391 02a5 00000000 		.4byte	.LFB14
 2392 02a9 02000000 		.4byte	.LCFI6
 2393 02ad 0200     		.2byte	0x2
 2394 02af 7D       		.byte	0x7d
 2395 02b0 00       		.sleb128 0
 2396 02b1 02000000 		.4byte	.LCFI6
 2397 02b5 1C000000 		.4byte	.LFE14
 2398 02b9 0200     		.2byte	0x2
 2399 02bb 7D       		.byte	0x7d
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 58


 2400 02bc 10       		.sleb128 16
 2401 02bd 00000000 		.4byte	0
 2402 02c1 00000000 		.4byte	0
 2403              	.LLST20:
 2404 02c5 00000000 		.4byte	.LVL37
 2405 02c9 0C000000 		.4byte	.LVL38
 2406 02cd 0100     		.2byte	0x1
 2407 02cf 50       		.byte	0x50
 2408 02d0 0C000000 		.4byte	.LVL38
 2409 02d4 16000000 		.4byte	.LVL40
 2410 02d8 0100     		.2byte	0x1
 2411 02da 54       		.byte	0x54
 2412 02db 16000000 		.4byte	.LVL40
 2413 02df 1C000000 		.4byte	.LFE14
 2414 02e3 0400     		.2byte	0x4
 2415 02e5 F3       		.byte	0xf3
 2416 02e6 01       		.uleb128 0x1
 2417 02e7 50       		.byte	0x50
 2418 02e8 9F       		.byte	0x9f
 2419 02e9 00000000 		.4byte	0
 2420 02ed 00000000 		.4byte	0
 2421              	.LLST21:
 2422 02f1 00000000 		.4byte	.LVL37
 2423 02f5 0F000000 		.4byte	.LVL39-1
 2424 02f9 0100     		.2byte	0x1
 2425 02fb 51       		.byte	0x51
 2426 02fc 0F000000 		.4byte	.LVL39-1
 2427 0300 16000000 		.4byte	.LVL41
 2428 0304 0100     		.2byte	0x1
 2429 0306 55       		.byte	0x55
 2430 0307 16000000 		.4byte	.LVL41
 2431 030b 1C000000 		.4byte	.LFE14
 2432 030f 0500     		.2byte	0x5
 2433 0311 73       		.byte	0x73
 2434 0312 00       		.sleb128 0
 2435 0313 70       		.byte	0x70
 2436 0314 00       		.sleb128 0
 2437 0315 22       		.byte	0x22
 2438 0316 00000000 		.4byte	0
 2439 031a 00000000 		.4byte	0
 2440              	.LLST22:
 2441 031e 00000000 		.4byte	.LFB15
 2442 0322 02000000 		.4byte	.LCFI7
 2443 0326 0200     		.2byte	0x2
 2444 0328 7D       		.byte	0x7d
 2445 0329 00       		.sleb128 0
 2446 032a 02000000 		.4byte	.LCFI7
 2447 032e 54000000 		.4byte	.LFE15
 2448 0332 0200     		.2byte	0x2
 2449 0334 7D       		.byte	0x7d
 2450 0335 10       		.sleb128 16
 2451 0336 00000000 		.4byte	0
 2452 033a 00000000 		.4byte	0
 2453              	.LLST23:
 2454 033e 00000000 		.4byte	.LVL42
 2455 0342 0A000000 		.4byte	.LVL43
 2456 0346 0100     		.2byte	0x1
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 59


 2457 0348 50       		.byte	0x50
 2458 0349 0A000000 		.4byte	.LVL43
 2459 034d 1C000000 		.4byte	.LVL45
 2460 0351 0100     		.2byte	0x1
 2461 0353 54       		.byte	0x54
 2462 0354 1C000000 		.4byte	.LVL45
 2463 0358 40000000 		.4byte	.LVL53
 2464 035c 0400     		.2byte	0x4
 2465 035e F3       		.byte	0xf3
 2466 035f 01       		.uleb128 0x1
 2467 0360 50       		.byte	0x50
 2468 0361 9F       		.byte	0x9f
 2469 0362 40000000 		.4byte	.LVL53
 2470 0366 42000000 		.4byte	.LVL54
 2471 036a 0100     		.2byte	0x1
 2472 036c 50       		.byte	0x50
 2473 036d 42000000 		.4byte	.LVL54
 2474 0371 54000000 		.4byte	.LFE15
 2475 0375 0100     		.2byte	0x1
 2476 0377 54       		.byte	0x54
 2477 0378 00000000 		.4byte	0
 2478 037c 00000000 		.4byte	0
 2479              	.LLST24:
 2480 0380 00000000 		.4byte	.LVL42
 2481 0384 0A000000 		.4byte	.LVL43
 2482 0388 0100     		.2byte	0x1
 2483 038a 51       		.byte	0x51
 2484 038b 0A000000 		.4byte	.LVL43
 2485 038f 16000000 		.4byte	.LVL44
 2486 0393 0400     		.2byte	0x4
 2487 0395 F3       		.byte	0xf3
 2488 0396 01       		.uleb128 0x1
 2489 0397 51       		.byte	0x51
 2490 0398 9F       		.byte	0x9f
 2491 0399 16000000 		.4byte	.LVL44
 2492 039d 26000000 		.4byte	.LVL46
 2493 03a1 0100     		.2byte	0x1
 2494 03a3 50       		.byte	0x50
 2495 03a4 34000000 		.4byte	.LVL50
 2496 03a8 38000000 		.4byte	.LVL51
 2497 03ac 0100     		.2byte	0x1
 2498 03ae 50       		.byte	0x50
 2499 03af 38000000 		.4byte	.LVL51
 2500 03b3 3A000000 		.4byte	.LVL52
 2501 03b7 0100     		.2byte	0x1
 2502 03b9 55       		.byte	0x55
 2503 03ba 40000000 		.4byte	.LVL53
 2504 03be 45000000 		.4byte	.LVL55-1
 2505 03c2 0100     		.2byte	0x1
 2506 03c4 51       		.byte	0x51
 2507 03c5 45000000 		.4byte	.LVL55-1
 2508 03c9 54000000 		.4byte	.LFE15
 2509 03cd 0400     		.2byte	0x4
 2510 03cf F3       		.byte	0xf3
 2511 03d0 01       		.uleb128 0x1
 2512 03d1 51       		.byte	0x51
 2513 03d2 9F       		.byte	0x9f
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 60


 2514 03d3 00000000 		.4byte	0
 2515 03d7 00000000 		.4byte	0
 2516              	.LLST25:
 2517 03db 2A000000 		.4byte	.LVL47
 2518 03df 2C000000 		.4byte	.LVL48
 2519 03e3 0900     		.2byte	0x9
 2520 03e5 72       		.byte	0x72
 2521 03e6 00       		.sleb128 0
 2522 03e7 70       		.byte	0x70
 2523 03e8 00       		.sleb128 0
 2524 03e9 22       		.byte	0x22
 2525 03ea 71       		.byte	0x71
 2526 03eb 00       		.sleb128 0
 2527 03ec 1B       		.byte	0x1b
 2528 03ed 9F       		.byte	0x9f
 2529 03ee 00000000 		.4byte	0
 2530 03f2 00000000 		.4byte	0
 2531              	.LLST26:
 2532 03f6 00000000 		.4byte	.LFB16
 2533 03fa 02000000 		.4byte	.LCFI8
 2534 03fe 0200     		.2byte	0x2
 2535 0400 7D       		.byte	0x7d
 2536 0401 00       		.sleb128 0
 2537 0402 02000000 		.4byte	.LCFI8
 2538 0406 48000000 		.4byte	.LFE16
 2539 040a 0200     		.2byte	0x2
 2540 040c 7D       		.byte	0x7d
 2541 040d 10       		.sleb128 16
 2542 040e 00000000 		.4byte	0
 2543 0412 00000000 		.4byte	0
 2544              	.LLST27:
 2545 0416 00000000 		.4byte	.LVL56
 2546 041a 0C000000 		.4byte	.LVL57
 2547 041e 0100     		.2byte	0x1
 2548 0420 50       		.byte	0x50
 2549 0421 0C000000 		.4byte	.LVL57
 2550 0425 18000000 		.4byte	.LVL59
 2551 0429 0100     		.2byte	0x1
 2552 042b 54       		.byte	0x54
 2553 042c 18000000 		.4byte	.LVL59
 2554 0430 48000000 		.4byte	.LFE16
 2555 0434 0400     		.2byte	0x4
 2556 0436 F3       		.byte	0xf3
 2557 0437 01       		.uleb128 0x1
 2558 0438 50       		.byte	0x50
 2559 0439 9F       		.byte	0x9f
 2560 043a 00000000 		.4byte	0
 2561 043e 00000000 		.4byte	0
 2562              	.LLST28:
 2563 0442 00000000 		.4byte	.LVL56
 2564 0446 0F000000 		.4byte	.LVL58-1
 2565 044a 0100     		.2byte	0x1
 2566 044c 51       		.byte	0x51
 2567 044d 0F000000 		.4byte	.LVL58-1
 2568 0451 1A000000 		.4byte	.LVL60
 2569 0455 0400     		.2byte	0x4
 2570 0457 F3       		.byte	0xf3
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 61


 2571 0458 01       		.uleb128 0x1
 2572 0459 51       		.byte	0x51
 2573 045a 9F       		.byte	0x9f
 2574 045b 1A000000 		.4byte	.LVL60
 2575 045f 26000000 		.4byte	.LVL62
 2576 0463 0100     		.2byte	0x1
 2577 0465 51       		.byte	0x51
 2578 0466 00000000 		.4byte	0
 2579 046a 00000000 		.4byte	0
 2580              	.LLST29:
 2581 046e 20000000 		.4byte	.LVL61
 2582 0472 26000000 		.4byte	.LVL62
 2583 0476 1A00     		.2byte	0x1a
 2584 0478 71       		.byte	0x71
 2585 0479 00       		.sleb128 0
 2586 047a F7       		.byte	0xf7
 2587 047b 3E       		.uleb128 0x3e
 2588 047c F7       		.byte	0xf7
 2589 047d 29       		.uleb128 0x29
 2590 047e 0C       		.byte	0xc
 2591 047f 80969800 		.4byte	0x989680
 2592 0483 F7       		.byte	0xf7
 2593 0484 29       		.uleb128 0x29
 2594 0485 1E       		.byte	0x1e
 2595 0486 F7       		.byte	0xf7
 2596 0487 30       		.uleb128 0x30
 2597 0488 74       		.byte	0x74
 2598 0489 00       		.sleb128 0
 2599 048a F7       		.byte	0xf7
 2600 048b 37       		.uleb128 0x37
 2601 048c F7       		.byte	0xf7
 2602 048d 30       		.uleb128 0x30
 2603 048e 1B       		.byte	0x1b
 2604 048f F7       		.byte	0xf7
 2605 0490 29       		.uleb128 0x29
 2606 0491 9F       		.byte	0x9f
 2607 0492 00000000 		.4byte	0
 2608 0496 00000000 		.4byte	0
 2609              	.LLST30:
 2610 049a 00000000 		.4byte	.LFB17
 2611 049e 02000000 		.4byte	.LCFI9
 2612 04a2 0200     		.2byte	0x2
 2613 04a4 7D       		.byte	0x7d
 2614 04a5 00       		.sleb128 0
 2615 04a6 02000000 		.4byte	.LCFI9
 2616 04aa 48000000 		.4byte	.LFE17
 2617 04ae 0200     		.2byte	0x2
 2618 04b0 7D       		.byte	0x7d
 2619 04b1 10       		.sleb128 16
 2620 04b2 00000000 		.4byte	0
 2621 04b6 00000000 		.4byte	0
 2622              	.LLST31:
 2623 04ba 00000000 		.4byte	.LVL65
 2624 04be 0C000000 		.4byte	.LVL66
 2625 04c2 0100     		.2byte	0x1
 2626 04c4 50       		.byte	0x50
 2627 04c5 0C000000 		.4byte	.LVL66
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 62


 2628 04c9 18000000 		.4byte	.LVL68
 2629 04cd 0100     		.2byte	0x1
 2630 04cf 54       		.byte	0x54
 2631 04d0 18000000 		.4byte	.LVL68
 2632 04d4 48000000 		.4byte	.LFE17
 2633 04d8 0400     		.2byte	0x4
 2634 04da F3       		.byte	0xf3
 2635 04db 01       		.uleb128 0x1
 2636 04dc 50       		.byte	0x50
 2637 04dd 9F       		.byte	0x9f
 2638 04de 00000000 		.4byte	0
 2639 04e2 00000000 		.4byte	0
 2640              	.LLST32:
 2641 04e6 00000000 		.4byte	.LVL65
 2642 04ea 0F000000 		.4byte	.LVL67-1
 2643 04ee 0100     		.2byte	0x1
 2644 04f0 51       		.byte	0x51
 2645 04f1 0F000000 		.4byte	.LVL67-1
 2646 04f5 1A000000 		.4byte	.LVL69
 2647 04f9 0400     		.2byte	0x4
 2648 04fb F3       		.byte	0xf3
 2649 04fc 01       		.uleb128 0x1
 2650 04fd 51       		.byte	0x51
 2651 04fe 9F       		.byte	0x9f
 2652 04ff 1A000000 		.4byte	.LVL69
 2653 0503 1F000000 		.4byte	.LVL70-1
 2654 0507 0100     		.2byte	0x1
 2655 0509 51       		.byte	0x51
 2656 050a 00000000 		.4byte	0
 2657 050e 00000000 		.4byte	0
 2658              		.section	.debug_aranges,"",%progbits
 2659 0000 A4000000 		.4byte	0xa4
 2660 0004 0200     		.2byte	0x2
 2661 0006 00000000 		.4byte	.Ldebug_info0
 2662 000a 04       		.byte	0x4
 2663 000b 00       		.byte	0
 2664 000c 0000     		.2byte	0
 2665 000e 0000     		.2byte	0
 2666 0010 00000000 		.4byte	.LFB1
 2667 0014 C8000000 		.4byte	.LFE1-.LFB1
 2668 0018 00000000 		.4byte	.LFB2
 2669 001c 1C000000 		.4byte	.LFE2-.LFB2
 2670 0020 00000000 		.4byte	.LFB0
 2671 0024 1C000000 		.4byte	.LFE0-.LFB0
 2672 0028 00000000 		.4byte	.LFB3
 2673 002c 10000000 		.4byte	.LFE3-.LFB3
 2674 0030 00000000 		.4byte	.LFB4
 2675 0034 14000000 		.4byte	.LFE4-.LFB4
 2676 0038 00000000 		.4byte	.LFB5
 2677 003c 14000000 		.4byte	.LFE5-.LFB5
 2678 0040 00000000 		.4byte	.LFB6
 2679 0044 2C000000 		.4byte	.LFE6-.LFB6
 2680 0048 00000000 		.4byte	.LFB7
 2681 004c 20000000 		.4byte	.LFE7-.LFB7
 2682 0050 00000000 		.4byte	.LFB8
 2683 0054 10000000 		.4byte	.LFE8-.LFB8
 2684 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 63


 2685 005c 1C000000 		.4byte	.LFE9-.LFB9
 2686 0060 00000000 		.4byte	.LFB10
 2687 0064 18000000 		.4byte	.LFE10-.LFB10
 2688 0068 00000000 		.4byte	.LFB11
 2689 006c 10000000 		.4byte	.LFE11-.LFB11
 2690 0070 00000000 		.4byte	.LFB12
 2691 0074 10000000 		.4byte	.LFE12-.LFB12
 2692 0078 00000000 		.4byte	.LFB13
 2693 007c 1C000000 		.4byte	.LFE13-.LFB13
 2694 0080 00000000 		.4byte	.LFB14
 2695 0084 1C000000 		.4byte	.LFE14-.LFB14
 2696 0088 00000000 		.4byte	.LFB15
 2697 008c 54000000 		.4byte	.LFE15-.LFB15
 2698 0090 00000000 		.4byte	.LFB16
 2699 0094 48000000 		.4byte	.LFE16-.LFB16
 2700 0098 00000000 		.4byte	.LFB17
 2701 009c 48000000 		.4byte	.LFE17-.LFB17
 2702 00a0 00000000 		.4byte	0
 2703 00a4 00000000 		.4byte	0
 2704              		.section	.debug_ranges,"",%progbits
 2705              	.Ldebug_ranges0:
 2706 0000 00000000 		.4byte	.LFB1
 2707 0004 C8000000 		.4byte	.LFE1
 2708 0008 00000000 		.4byte	.LFB2
 2709 000c 1C000000 		.4byte	.LFE2
 2710 0010 00000000 		.4byte	.LFB0
 2711 0014 1C000000 		.4byte	.LFE0
 2712 0018 00000000 		.4byte	.LFB3
 2713 001c 10000000 		.4byte	.LFE3
 2714 0020 00000000 		.4byte	.LFB4
 2715 0024 14000000 		.4byte	.LFE4
 2716 0028 00000000 		.4byte	.LFB5
 2717 002c 14000000 		.4byte	.LFE5
 2718 0030 00000000 		.4byte	.LFB6
 2719 0034 2C000000 		.4byte	.LFE6
 2720 0038 00000000 		.4byte	.LFB7
 2721 003c 20000000 		.4byte	.LFE7
 2722 0040 00000000 		.4byte	.LFB8
 2723 0044 10000000 		.4byte	.LFE8
 2724 0048 00000000 		.4byte	.LFB9
 2725 004c 1C000000 		.4byte	.LFE9
 2726 0050 00000000 		.4byte	.LFB10
 2727 0054 18000000 		.4byte	.LFE10
 2728 0058 00000000 		.4byte	.LFB11
 2729 005c 10000000 		.4byte	.LFE11
 2730 0060 00000000 		.4byte	.LFB12
 2731 0064 10000000 		.4byte	.LFE12
 2732 0068 00000000 		.4byte	.LFB13
 2733 006c 1C000000 		.4byte	.LFE13
 2734 0070 00000000 		.4byte	.LFB14
 2735 0074 1C000000 		.4byte	.LFE14
 2736 0078 00000000 		.4byte	.LFB15
 2737 007c 54000000 		.4byte	.LFE15
 2738 0080 00000000 		.4byte	.LFB16
 2739 0084 48000000 		.4byte	.LFE16
 2740 0088 00000000 		.4byte	.LFB17
 2741 008c 48000000 		.4byte	.LFE17
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 64


 2742 0090 00000000 		.4byte	0
 2743 0094 00000000 		.4byte	0
 2744              		.section	.debug_line,"",%progbits
 2745              	.Ldebug_line0:
 2746 0000 59020000 		.section	.debug_str,"MS",%progbits,1
 2746      02005700 
 2746      00000201 
 2746      FB0E0D00 
 2746      01010101 
 2747              	.LASF58:
 2748 0000 4144435F 		.ascii	"ADC_SAR_Seq_1_offset\000"
 2748      5341525F 
 2748      5365715F 
 2748      315F6F66 
 2748      66736574 
 2749              	.LASF10:
 2750 0015 75696E74 		.ascii	"uint16\000"
 2750      313600
 2751              	.LASF25:
 2752 001c 4144435F 		.ascii	"ADC_SAR_Seq_1_Init\000"
 2752      5341525F 
 2752      5365715F 
 2752      315F496E 
 2752      697400
 2753              	.LASF48:
 2754 002f 61646347 		.ascii	"adcGain\000"
 2754      61696E00 
 2755              	.LASF24:
 2756 0037 636F756E 		.ascii	"counts\000"
 2756      747300
 2757              	.LASF29:
 2758 003e 4144435F 		.ascii	"ADC_SAR_Seq_1_StartConvert\000"
 2758      5341525F 
 2758      5365715F 
 2758      315F5374 
 2758      61727443 
 2759              	.LASF44:
 2760 0059 4144435F 		.ascii	"ADC_SAR_Seq_1_SetSatMask\000"
 2760      5341525F 
 2760      5365715F 
 2760      315F5365 
 2760      74536174 
 2761              	.LASF27:
 2762 0072 4144435F 		.ascii	"ADC_SAR_Seq_1_Start\000"
 2762      5341525F 
 2762      5365715F 
 2762      315F5374 
 2762      61727400 
 2763              	.LASF0:
 2764 0086 6C6F6E67 		.ascii	"long long unsigned int\000"
 2764      206C6F6E 
 2764      6720756E 
 2764      7369676E 
 2764      65642069 
 2765              	.LASF26:
 2766 009d 4144435F 		.ascii	"ADC_SAR_Seq_1_Enable\000"
 2766      5341525F 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 65


 2766      5365715F 
 2766      315F456E 
 2766      61626C65 
 2767              	.LASF33:
 2768 00b2 4144435F 		.ascii	"ADC_SAR_Seq_1_GetResult16\000"
 2768      5341525F 
 2768      5365715F 
 2768      315F4765 
 2768      74526573 
 2769              	.LASF1:
 2770 00cc 6C6F6E67 		.ascii	"long long int\000"
 2770      206C6F6E 
 2770      6720696E 
 2770      7400
 2771              	.LASF3:
 2772 00da 7369676E 		.ascii	"signed char\000"
 2772      65642063 
 2772      68617200 
 2773              	.LASF41:
 2774 00e6 4144435F 		.ascii	"ADC_SAR_Seq_1_SetHighLimit\000"
 2774      5341525F 
 2774      5365715F 
 2774      315F5365 
 2774      74486967 
 2775              	.LASF13:
 2776 0101 696E7433 		.ascii	"int32\000"
 2776      3200
 2777              	.LASF52:
 2778 0107 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_uVolts\000"
 2778      5341525F 
 2778      5365715F 
 2778      315F436F 
 2778      756E7473 
 2779              	.LASF6:
 2780 0125 6C6F6E67 		.ascii	"long int\000"
 2780      20696E74 
 2780      00
 2781              	.LASF9:
 2782 012e 75696E74 		.ascii	"uint8\000"
 2782      3800
 2783              	.LASF61:
 2784 0134 43794465 		.ascii	"CyDelayUs\000"
 2784      6C617955 
 2784      7300
 2785              	.LASF16:
 2786 013e 646F7562 		.ascii	"double\000"
 2786      6C6500
 2787              	.LASF11:
 2788 0145 75696E74 		.ascii	"uint32\000"
 2788      333200
 2789              	.LASF38:
 2790 014c 6D61736B 		.ascii	"mask\000"
 2790      00
 2791              	.LASF49:
 2792 0151 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_mVolts\000"
 2792      5341525F 
 2792      5365715F 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 66


 2792      315F436F 
 2792      756E7473 
 2793              	.LASF34:
 2794 016f 7265744D 		.ascii	"retMode\000"
 2794      6F646500 
 2795              	.LASF57:
 2796 0177 4144435F 		.ascii	"ADC_SAR_Seq_1_initVar\000"
 2796      5341525F 
 2796      5365715F 
 2796      315F696E 
 2796      69745661 
 2797              	.LASF8:
 2798 018d 756E7369 		.ascii	"unsigned int\000"
 2798      676E6564 
 2798      20696E74 
 2798      00
 2799              	.LASF53:
 2800 019a 75566F6C 		.ascii	"uVolts\000"
 2800      747300
 2801              	.LASF7:
 2802 01a1 6C6F6E67 		.ascii	"long unsigned int\000"
 2802      20756E73 
 2802      69676E65 
 2802      6420696E 
 2802      7400
 2803              	.LASF55:
 2804 01b3 766F6C74 		.ascii	"volts\000"
 2804      7300
 2805              	.LASF23:
 2806 01b9 746D7052 		.ascii	"tmpRegVal\000"
 2806      65675661 
 2806      6C00
 2807              	.LASF64:
 2808 01c3 433A5C55 		.ascii	"C:\\Users\\Steve\\Documents\\Git\\GlowTime\\RGB_LED"
 2808      73657273 
 2808      5C537465 
 2808      76655C44 
 2808      6F63756D 
 2809 01f0 5F4D6174 		.ascii	"_Matrix.cydsn\000"
 2809      7269782E 
 2809      63796473 
 2809      6E00
 2810              	.LASF5:
 2811 01fe 73686F72 		.ascii	"short unsigned int\000"
 2811      7420756E 
 2811      7369676E 
 2811      65642069 
 2811      6E7400
 2812              	.LASF65:
 2813 0211 4379496E 		.ascii	"CyIntSetVector\000"
 2813      74536574 
 2813      56656374 
 2813      6F7200
 2814              	.LASF56:
 2815 0220 4144435F 		.ascii	"ADC_SAR_Seq_1_channelsConfig\000"
 2815      5341525F 
 2815      5365715F 
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 67


 2815      315F6368 
 2815      616E6E65 
 2816              	.LASF51:
 2817 023d 6D566F6C 		.ascii	"mVolts\000"
 2817      747300
 2818              	.LASF19:
 2819 0244 72656733 		.ascii	"reg32\000"
 2819      3200
 2820              	.LASF63:
 2821 024a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC4\\ADC_SAR_Seq_1.c\000"
 2821      6E657261 
 2821      7465645F 
 2821      536F7572 
 2821      63655C50 
 2822              	.LASF14:
 2823 0273 666C6F61 		.ascii	"float32\000"
 2823      74333200 
 2824              	.LASF21:
 2825 027b 73697A65 		.ascii	"sizetype\000"
 2825      74797065 
 2825      00
 2826              	.LASF40:
 2827 0284 6C6F774C 		.ascii	"lowLimit\000"
 2827      696D6974 
 2827      00
 2828              	.LASF32:
 2829 028d 4144435F 		.ascii	"ADC_SAR_Seq_1_IsEndConversion\000"
 2829      5341525F 
 2829      5365715F 
 2829      315F4973 
 2829      456E6443 
 2830              	.LASF30:
 2831 02ab 4144435F 		.ascii	"ADC_SAR_Seq_1_StopConvert\000"
 2831      5341525F 
 2831      5365715F 
 2831      315F5374 
 2831      6F70436F 
 2832              	.LASF17:
 2833 02c5 696E7436 		.ascii	"int64\000"
 2833      3400
 2834              	.LASF60:
 2835 02cb 4379496E 		.ascii	"CyIntSetPriority\000"
 2835      74536574 
 2835      5072696F 
 2835      72697479 
 2835      00
 2836              	.LASF15:
 2837 02dc 666C6F61 		.ascii	"float\000"
 2837      7400
 2838              	.LASF47:
 2839 02e2 4144435F 		.ascii	"ADC_SAR_Seq_1_SetGain\000"
 2839      5341525F 
 2839      5365715F 
 2839      315F5365 
 2839      74476169 
 2840              	.LASF28:
 2841 02f8 4144435F 		.ascii	"ADC_SAR_Seq_1_Stop\000"
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 68


 2841      5341525F 
 2841      5365715F 
 2841      315F5374 
 2841      6F7000
 2842              	.LASF42:
 2843 030b 68696768 		.ascii	"highLimit\000"
 2843      4C696D69 
 2843      7400
 2844              	.LASF62:
 2845 0315 474E5520 		.ascii	"GNU C 4.7.3 20130312 (release) [ARM/embedded-4_7-br"
 2845      4320342E 
 2845      372E3320 
 2845      32303133 
 2845      30333132 
 2846 0348 616E6368 		.ascii	"anch revision 196615]\000"
 2846      20726576 
 2846      6973696F 
 2846      6E203139 
 2846      36363135 
 2847              	.LASF66:
 2848 035e 43794861 		.ascii	"CyHalt\000"
 2848      6C7400
 2849              	.LASF4:
 2850 0365 756E7369 		.ascii	"unsigned char\000"
 2850      676E6564 
 2850      20636861 
 2850      7200
 2851              	.LASF2:
 2852 0373 73686F72 		.ascii	"short int\000"
 2852      7420696E 
 2852      7400
 2853              	.LASF54:
 2854 037d 4144435F 		.ascii	"ADC_SAR_Seq_1_CountsTo_Volts\000"
 2854      5341525F 
 2854      5365715F 
 2854      315F436F 
 2854      756E7473 
 2855              	.LASF37:
 2856 039a 4144435F 		.ascii	"ADC_SAR_Seq_1_SetChanMask\000"
 2856      5341525F 
 2856      5365715F 
 2856      315F5365 
 2856      74436861 
 2857              	.LASF22:
 2858 03b4 63684E75 		.ascii	"chNum\000"
 2858      6D00
 2859              	.LASF35:
 2860 03ba 6368616E 		.ascii	"chan\000"
 2860      00
 2861              	.LASF18:
 2862 03bf 63686172 		.ascii	"char\000"
 2862      00
 2863              	.LASF20:
 2864 03c4 63796973 		.ascii	"cyisraddress\000"
 2864      72616464 
 2864      72657373 
 2864      00
ARM GAS  C:\Users\Steve\AppData\Local\Temp\cc8wnACi.s 			page 69


 2865              	.LASF39:
 2866 03d1 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLowLimit\000"
 2866      5341525F 
 2866      5365715F 
 2866      315F5365 
 2866      744C6F77 
 2867              	.LASF46:
 2868 03eb 6F666673 		.ascii	"offset\000"
 2868      657400
 2869              	.LASF50:
 2870 03f2 61646343 		.ascii	"adcCounts\000"
 2870      6F756E74 
 2870      7300
 2871              	.LASF59:
 2872 03fc 4144435F 		.ascii	"ADC_SAR_Seq_1_countsPer10Volt\000"
 2872      5341525F 
 2872      5365715F 
 2872      315F636F 
 2872      756E7473 
 2873              	.LASF31:
 2874 041a 73746174 		.ascii	"status\000"
 2874      757300
 2875              	.LASF45:
 2876 0421 4144435F 		.ascii	"ADC_SAR_Seq_1_SetOffset\000"
 2876      5341525F 
 2876      5365715F 
 2876      315F5365 
 2876      744F6666 
 2877              	.LASF12:
 2878 0439 696E7431 		.ascii	"int16\000"
 2878      3600
 2879              	.LASF43:
 2880 043f 4144435F 		.ascii	"ADC_SAR_Seq_1_SetLimitMask\000"
 2880      5341525F 
 2880      5365715F 
 2880      315F5365 
 2880      744C696D 
 2881              	.LASF36:
 2882 045a 72657375 		.ascii	"result\000"
 2882      6C7400
 2883              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20130312 (release) [ARM/embedded-4_7-br
